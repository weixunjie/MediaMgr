<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.AspNet.SignalR.Core.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.#ctor(Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.Bind(Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.ConnectionTimeoutGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.ConnectionTimeoutSetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_ConnectionTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.Constructor">
            <summary>Sets the shim of DefaultConfigurationManager.DefaultConfigurationManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.DefaultMessageBufferSizeGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_DefaultMessageBufferSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.DefaultMessageBufferSizeSetInt32">
            <summary>Sets the shim of DefaultConfigurationManager.set_DefaultMessageBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.DisconnectTimeoutGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_DisconnectTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.DisconnectTimeoutSetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_DisconnectTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.KeepAliveGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.KeepAliveSetNullableOfTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_KeepAlive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.LongPollDelayGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_LongPollDelay()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.LongPollDelaySetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_LongPollDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.MaxIncomingWebSocketMessageSizeGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_MaxIncomingWebSocketMessageSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.MaxIncomingWebSocketMessageSizeSetNullableOfInt32">
            <summary>Sets the shim of DefaultConfigurationManager.set_MaxIncomingWebSocketMessageSize(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.StaticConstructor">
            <summary>Sets the shim of DefaultConfigurationManager.DefaultConfigurationManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.TransportConnectTimeoutGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_TransportConnectTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.TransportConnectTimeoutSetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_TransportConnectTimeout(TimeSpan value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.ConnectionTimeoutGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.ConnectionTimeoutSetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_ConnectionTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.DefaultMessageBufferSizeGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_DefaultMessageBufferSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.DefaultMessageBufferSizeSetInt32">
            <summary>Sets the shim of DefaultConfigurationManager.set_DefaultMessageBufferSize(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.DisconnectTimeoutGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_DisconnectTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.DisconnectTimeoutSetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_DisconnectTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.KeepAliveGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.KeepAliveSetNullableOfTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_KeepAlive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.LongPollDelayGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_LongPollDelay()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.LongPollDelaySetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_LongPollDelay(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.MaxIncomingWebSocketMessageSizeGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_MaxIncomingWebSocketMessageSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.MaxIncomingWebSocketMessageSizeSetNullableOfInt32">
            <summary>Sets the shim of DefaultConfigurationManager.set_MaxIncomingWebSocketMessageSize(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.TransportConnectTimeoutGet">
            <summary>Sets the shim of DefaultConfigurationManager.get_TransportConnectTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.ShimDefaultConfigurationManager.AllInstances.TransportConnectTimeoutSetTimeSpan">
            <summary>Sets the shim of DefaultConfigurationManager.set_TransportConnectTimeout(TimeSpan value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Configuration.Fakes.StubDefaultConfigurationManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Configuration.DefaultConfigurationManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubDefaultConfigurationManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubDefaultConfigurationManager.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultConfigurationManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubDefaultConfigurationManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubDefaultConfigurationManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubDefaultConfigurationManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Configuration.IConfigurationManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.#ctor">
            <summary>Initializes a new instance of type StubIConfigurationManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToConnectionTimeout">
            <summary>Attaches delegates to emulate StubIConfigurationManager.ConnectionTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToDefaultMessageBufferSize">
            <summary>Attaches delegates to emulate StubIConfigurationManager.DefaultMessageBufferSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToDisconnectTimeout">
            <summary>Attaches delegates to emulate StubIConfigurationManager.DisconnectTimeout as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToKeepAlive">
            <summary>Attaches delegates to emulate StubIConfigurationManager.KeepAlive as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToLongPollDelay">
            <summary>Attaches delegates to emulate StubIConfigurationManager.LongPollDelay as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToMaxIncomingWebSocketMessageSize">
            <summary>Attaches delegates to emulate StubIConfigurationManager.MaxIncomingWebSocketMessageSize as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.AttachBackingFieldToTransportConnectTimeout">
            <summary>Attaches delegates to emulate StubIConfigurationManager.TransportConnectTimeout as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.ConnectionTimeoutGet">
            <summary>Sets the stub of IConfigurationManager.get_ConnectionTimeout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.ConnectionTimeoutSetTimeSpan">
            <summary>Sets the stub of IConfigurationManager.set_ConnectionTimeout(TimeSpan value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.DefaultMessageBufferSizeGet">
            <summary>Sets the stub of IConfigurationManager.get_DefaultMessageBufferSize()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.DefaultMessageBufferSizeSetInt32">
            <summary>Sets the stub of IConfigurationManager.set_DefaultMessageBufferSize(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.DisconnectTimeoutGet">
            <summary>Sets the stub of IConfigurationManager.get_DisconnectTimeout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.DisconnectTimeoutSetTimeSpan">
            <summary>Sets the stub of IConfigurationManager.set_DisconnectTimeout(TimeSpan value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.KeepAliveGet">
            <summary>Sets the stub of IConfigurationManager.get_KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.KeepAliveSetNullableOfTimeSpan">
            <summary>Sets the stub of IConfigurationManager.set_KeepAlive(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.LongPollDelayGet">
            <summary>Sets the stub of IConfigurationManager.get_LongPollDelay()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.LongPollDelaySetTimeSpan">
            <summary>Sets the stub of IConfigurationManager.set_LongPollDelay(TimeSpan value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.MaxIncomingWebSocketMessageSizeGet">
            <summary>Sets the stub of IConfigurationManager.get_MaxIncomingWebSocketMessageSize()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.MaxIncomingWebSocketMessageSizeSetNullableOfInt32">
            <summary>Sets the stub of IConfigurationManager.set_MaxIncomingWebSocketMessageSize(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.TransportConnectTimeoutGet">
            <summary>Sets the stub of IConfigurationManager.get_TransportConnectTimeout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.TransportConnectTimeoutSetTimeSpan">
            <summary>Sets the stub of IConfigurationManager.set_TransportConnectTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#ConnectionTimeout">
            <summary>Sets the stub of IConfigurationManager.get_ConnectionTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#DefaultMessageBufferSize">
            <summary>Sets the stub of IConfigurationManager.get_DefaultMessageBufferSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#DisconnectTimeout">
            <summary>Sets the stub of IConfigurationManager.get_DisconnectTimeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#KeepAlive">
            <summary>Sets the stub of IConfigurationManager.get_KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#LongPollDelay">
            <summary>Sets the stub of IConfigurationManager.get_LongPollDelay()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#MaxIncomingWebSocketMessageSize">
            <summary>Sets the stub of IConfigurationManager.get_MaxIncomingWebSocketMessageSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Configuration.Fakes.StubIConfigurationManager.mansrc::Microsoft#AspNet#SignalR#Configuration#IConfigurationManager#TransportConnectTimeout">
            <summary>Sets the stub of IConfigurationManager.get_TransportConnectTimeout()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute">
            <summary>Shim type of Microsoft.AspNet.SignalR.AuthorizeAttribute</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.#ctor(Microsoft.AspNet.SignalR.AuthorizeAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.Bind(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.Bind(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AuthorizeHubConnectionHubDescriptorIRequest">
            <summary>Sets the shim of AuthorizeAttribute.AuthorizeHubConnection(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AuthorizeHubMethodInvocationIHubIncomingInvokerContextBoolean">
            <summary>Sets the shim of AuthorizeAttribute.AuthorizeHubMethodInvocation(IHubIncomingInvokerContext hubIncomingInvokerContext, Boolean appliesToMethod)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.Constructor">
            <summary>Sets the shim of AuthorizeAttribute.AuthorizeAttribute()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.RequireOutgoingGet">
            <summary>Sets the shim of AuthorizeAttribute.get_RequireOutgoing()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.RequireOutgoingSetBoolean">
            <summary>Sets the shim of AuthorizeAttribute.set_RequireOutgoing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.RolesGet">
            <summary>Sets the shim of AuthorizeAttribute.get_Roles()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.RolesSetString">
            <summary>Sets the shim of AuthorizeAttribute.set_Roles(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.SplitStringString">
            <summary>Sets the shim of AuthorizeAttribute.SplitString(String original)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.UserAuthorizedIPrincipal">
            <summary>Sets the shim of AuthorizeAttribute.UserAuthorized(IPrincipal user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.UsersGet">
            <summary>Sets the shim of AuthorizeAttribute.get_Users()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.UsersSetString">
            <summary>Sets the shim of AuthorizeAttribute.set_Users(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.AuthorizeHubConnectionHubDescriptorIRequest">
            <summary>Sets the shim of AuthorizeAttribute.AuthorizeHubConnection(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.AuthorizeHubMethodInvocationIHubIncomingInvokerContextBoolean">
            <summary>Sets the shim of AuthorizeAttribute.AuthorizeHubMethodInvocation(IHubIncomingInvokerContext hubIncomingInvokerContext, Boolean appliesToMethod)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.RequireOutgoingGet">
            <summary>Sets the shim of AuthorizeAttribute.get_RequireOutgoing()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.RequireOutgoingSetBoolean">
            <summary>Sets the shim of AuthorizeAttribute.set_RequireOutgoing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.RolesGet">
            <summary>Sets the shim of AuthorizeAttribute.get_Roles()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.RolesSetString">
            <summary>Sets the shim of AuthorizeAttribute.set_Roles(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.UserAuthorizedIPrincipal">
            <summary>Sets the shim of AuthorizeAttribute.UserAuthorized(IPrincipal user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.UsersGet">
            <summary>Sets the shim of AuthorizeAttribute.get_Users()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimAuthorizeAttribute.AllInstances.UsersSetString">
            <summary>Sets the shim of AuthorizeAttribute.set_Users(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration">
            <summary>Shim type of Microsoft.AspNet.SignalR.ConnectionConfiguration</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.#ctor(Microsoft.AspNet.SignalR.ConnectionConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.Constructor">
            <summary>Sets the shim of ConnectionConfiguration.ConnectionConfiguration()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.EnableJSONPGet">
            <summary>Sets the shim of ConnectionConfiguration.get_EnableJSONP()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.EnableJSONPSetBoolean">
            <summary>Sets the shim of ConnectionConfiguration.set_EnableJSONP(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.ResolverGet">
            <summary>Sets the shim of ConnectionConfiguration.get_Resolver()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.ResolverSetIDependencyResolver">
            <summary>Sets the shim of ConnectionConfiguration.set_Resolver(IDependencyResolver value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.AllInstances.EnableJSONPGet">
            <summary>Sets the shim of ConnectionConfiguration.get_EnableJSONP()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.AllInstances.EnableJSONPSetBoolean">
            <summary>Sets the shim of ConnectionConfiguration.set_EnableJSONP(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.AllInstances.ResolverGet">
            <summary>Sets the shim of ConnectionConfiguration.get_Resolver()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionConfiguration.AllInstances.ResolverSetIDependencyResolver">
            <summary>Sets the shim of ConnectionConfiguration.set_Resolver(IDependencyResolver value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.ConnectionExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.BroadcastIConnectionObjectStringArray">
            <summary>Sets the shim of ConnectionExtensions.Broadcast(IConnection connection, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.SendIConnectionIListOfStringObject">
            <summary>Sets the shim of ConnectionExtensions.Send(IConnection connection, IList`1&lt;String&gt; connectionIds, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions.SendIConnectionStringObject">
            <summary>Sets the shim of ConnectionExtensions.Send(IConnection connection, String connectionId, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionExtensions._Sendb__0String">
            <summary>Sets the shim of ConnectionExtensions.&lt;Send&gt;b__0(String c)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimConnectionMessage">
            <summary>Shim type of Microsoft.AspNet.SignalR.ConnectionMessage</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimConnectionMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimConnectionMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimConnectionMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimCookie">
            <summary>Shim type of Microsoft.AspNet.SignalR.Cookie</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimCookie.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimCookie.#ctor(Microsoft.AspNet.SignalR.Cookie)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimCookie.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimCookie.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.ConstructorStringString">
            <summary>Sets the shim of Cookie.Cookie(String name, String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.ConstructorStringStringStringString">
            <summary>Sets the shim of Cookie.Cookie(String name, String value, String domain, String path)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.DomainGet">
            <summary>Sets the shim of Cookie.get_Domain()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.DomainSetString">
            <summary>Sets the shim of Cookie.set_Domain(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.NameGet">
            <summary>Sets the shim of Cookie.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.NameSetString">
            <summary>Sets the shim of Cookie.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.PathGet">
            <summary>Sets the shim of Cookie.get_Path()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.PathSetString">
            <summary>Sets the shim of Cookie.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.ValueGet">
            <summary>Sets the shim of Cookie.get_Value()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.ValueSetString">
            <summary>Sets the shim of Cookie.set_Value(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.DomainGet">
            <summary>Sets the shim of Cookie.get_Domain()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.DomainSetString">
            <summary>Sets the shim of Cookie.set_Domain(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.NameGet">
            <summary>Sets the shim of Cookie.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.NameSetString">
            <summary>Sets the shim of Cookie.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.PathGet">
            <summary>Sets the shim of Cookie.get_Path()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.PathSetString">
            <summary>Sets the shim of Cookie.set_Path(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.ValueGet">
            <summary>Sets the shim of Cookie.get_Value()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimCookie.AllInstances.ValueSetString">
            <summary>Sets the shim of Cookie.set_Value(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver">
            <summary>Shim type of Microsoft.AspNet.SignalR.DefaultDependencyResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.Bind(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.Constructor">
            <summary>Sets the shim of DefaultDependencyResolver.DefaultDependencyResolver()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.Dispose">
            <summary>Sets the shim of DefaultDependencyResolver.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.DisposeBoolean">
            <summary>Sets the shim of DefaultDependencyResolver.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.GetServiceType">
            <summary>Sets the shim of DefaultDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.GetServicesType">
            <summary>Sets the shim of DefaultDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.RegisterDefaultServices">
            <summary>Sets the shim of DefaultDependencyResolver.RegisterDefaultServices()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.RegisterHubExtensions">
            <summary>Sets the shim of DefaultDependencyResolver.RegisterHubExtensions()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.RegisterTypeFuncOfObject">
            <summary>Sets the shim of DefaultDependencyResolver.Register(Type serviceType, Func`1&lt;Object&gt; activator)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.RegisterTypeIEnumerableOfFuncOfObject">
            <summary>Sets the shim of DefaultDependencyResolver.Register(Type serviceType, IEnumerable`1&lt;Func`1&lt;Object&gt;&gt; activators)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.TrackFuncOfObject">
            <summary>Sets the shim of DefaultDependencyResolver.Track(Func`1&lt;Object&gt; creator)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__0">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__0()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__12">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__12()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__5">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__5()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__7">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__7()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__a">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__a()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__d">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__d()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterDefaultServicesb__f">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__f()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterHubExtensionsb__1a">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__1a()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterHubExtensionsb__1d">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__1d()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterHubExtensionsb__1f">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__1f()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterHubExtensionsb__21">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__21()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterHubExtensionsb__24">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__24()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver._RegisterHubExtensionsb__26">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__26()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.Dispose">
            <summary>Sets the shim of DefaultDependencyResolver.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.DisposeBoolean">
            <summary>Sets the shim of DefaultDependencyResolver.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.GetServiceType">
            <summary>Sets the shim of DefaultDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.GetServicesType">
            <summary>Sets the shim of DefaultDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.RegisterDefaultServices">
            <summary>Sets the shim of DefaultDependencyResolver.RegisterDefaultServices()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.RegisterHubExtensions">
            <summary>Sets the shim of DefaultDependencyResolver.RegisterHubExtensions()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.RegisterTypeFuncOfObject">
            <summary>Sets the shim of DefaultDependencyResolver.Register(Type serviceType, Func`1&lt;Object&gt; activator)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.RegisterTypeIEnumerableOfFuncOfObject">
            <summary>Sets the shim of DefaultDependencyResolver.Register(Type serviceType, IEnumerable`1&lt;Func`1&lt;Object&gt;&gt; activators)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances.TrackFuncOfObject">
            <summary>Sets the shim of DefaultDependencyResolver.Track(Func`1&lt;Object&gt; creator)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterDefaultServicesb__12">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__12()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterDefaultServicesb__5">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__5()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterDefaultServicesb__a">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__a()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterDefaultServicesb__d">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__d()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterDefaultServicesb__f">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterDefaultServices&gt;b__f()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterHubExtensionsb__1a">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__1a()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterHubExtensionsb__1d">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__1d()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterHubExtensionsb__1f">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__1f()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDefaultDependencyResolver.AllInstances._RegisterHubExtensionsb__21">
            <summary>Sets the shim of DefaultDependencyResolver.&lt;RegisterHubExtensions&gt;b__21()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.DependencyResolverExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.ResolveAllOf1IDependencyResolver``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.IDependencyResolver,System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of DependencyResolverExtensions.ResolveAll(IDependencyResolver resolver)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.ResolveOf1IDependencyResolver``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.IDependencyResolver,``0})">
            <summary>Sets the shim of DependencyResolverExtensions.Resolve(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.ResolveAllIDependencyResolverType">
            <summary>Sets the shim of DependencyResolverExtensions.ResolveAll(IDependencyResolver resolver, Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimDependencyResolverExtensions.ResolveIDependencyResolverType">
            <summary>Sets the shim of DependencyResolverExtensions.Resolve(IDependencyResolver resolver, Type type)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost">
            <summary>Shim type of Microsoft.AspNet.SignalR.GlobalHost</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.ConfigurationGet">
            <summary>Sets the shim of GlobalHost.get_Configuration()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.ConnectionManagerGet">
            <summary>Sets the shim of GlobalHost.get_ConnectionManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.DependencyResolverGet">
            <summary>Sets the shim of GlobalHost.get_DependencyResolver()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.DependencyResolverSetIDependencyResolver">
            <summary>Sets the shim of GlobalHost.set_DependencyResolver(IDependencyResolver value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.HubPipelineGet">
            <summary>Sets the shim of GlobalHost.get_HubPipeline()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.StaticConstructor">
            <summary>Sets the shim of GlobalHost.GlobalHost()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost.TraceManagerGet">
            <summary>Sets the shim of GlobalHost.get_TraceManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGlobalHost._cctorb__0">
            <summary>Sets the shim of GlobalHost.&lt;.cctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.GroupManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.#ctor(Microsoft.AspNet.SignalR.GroupManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.Bind(Microsoft.AspNet.SignalR.IConnectionGroupManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.Bind(Microsoft.AspNet.SignalR.IGroupManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AddStringString">
            <summary>Sets the shim of GroupManager.Add(String connectionId, String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.ConstructorIConnectionString">
            <summary>Sets the shim of GroupManager.GroupManager(IConnection connection, String groupPrefix)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.CreateQualifiedNameString">
            <summary>Sets the shim of GroupManager.CreateQualifiedName(String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.RemoveStringString">
            <summary>Sets the shim of GroupManager.Remove(String connectionId, String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.SendIListOfStringObjectStringArray">
            <summary>Sets the shim of GroupManager.Send(IList`1&lt;String&gt; groupNames, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.SendStringObjectStringArray">
            <summary>Sets the shim of GroupManager.Send(String groupName, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager._Sendb__0String">
            <summary>Sets the shim of GroupManager.&lt;Send&gt;b__0(String groupName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances.AddStringString">
            <summary>Sets the shim of GroupManager.Add(String connectionId, String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances.CreateQualifiedNameString">
            <summary>Sets the shim of GroupManager.CreateQualifiedName(String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances.RemoveStringString">
            <summary>Sets the shim of GroupManager.Remove(String connectionId, String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances.SendIListOfStringObjectStringArray">
            <summary>Sets the shim of GroupManager.Send(IList`1&lt;String&gt; groupNames, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances.SendStringObjectStringArray">
            <summary>Sets the shim of GroupManager.Send(String groupName, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimGroupManager.AllInstances._Sendb__0String">
            <summary>Sets the shim of GroupManager.&lt;Send&gt;b__0(String groupName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHub">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hub</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHub.#ctor(Microsoft.AspNet.SignalR.Hub)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHub.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHub.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHub.Bind(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHub.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.ClientsGet">
            <summary>Sets the shim of Hub.get_Clients()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.ClientsSetIHubCallerConnectionContext">
            <summary>Sets the shim of Hub.set_Clients(IHubCallerConnectionContext value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.Constructor">
            <summary>Sets the shim of Hub.Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.ContextGet">
            <summary>Sets the shim of Hub.get_Context()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.ContextSetHubCallerContext">
            <summary>Sets the shim of Hub.set_Context(HubCallerContext value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.Dispose">
            <summary>Sets the shim of Hub.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.DisposeBoolean">
            <summary>Sets the shim of Hub.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.GroupsGet">
            <summary>Sets the shim of Hub.get_Groups()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.GroupsSetIGroupManager">
            <summary>Sets the shim of Hub.set_Groups(IGroupManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.OnConnected">
            <summary>Sets the shim of Hub.OnConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.OnDisconnected">
            <summary>Sets the shim of Hub.OnDisconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.OnReconnected">
            <summary>Sets the shim of Hub.OnReconnected()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.ClientsGet">
            <summary>Sets the shim of Hub.get_Clients()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.ClientsSetIHubCallerConnectionContext">
            <summary>Sets the shim of Hub.set_Clients(IHubCallerConnectionContext value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.ContextGet">
            <summary>Sets the shim of Hub.get_Context()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.ContextSetHubCallerContext">
            <summary>Sets the shim of Hub.set_Context(HubCallerContext value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.Dispose">
            <summary>Sets the shim of Hub.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Hub.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.GroupsGet">
            <summary>Sets the shim of Hub.get_Groups()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.GroupsSetIGroupManager">
            <summary>Sets the shim of Hub.set_Groups(IGroupManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.OnConnected">
            <summary>Sets the shim of Hub.OnConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.OnDisconnected">
            <summary>Sets the shim of Hub.OnDisconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHub.AllInstances.OnReconnected">
            <summary>Sets the shim of Hub.OnReconnected()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration">
            <summary>Shim type of Microsoft.AspNet.SignalR.HubConfiguration</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.Constructor">
            <summary>Sets the shim of HubConfiguration.HubConfiguration()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.EnableDetailedErrorsGet">
            <summary>Sets the shim of HubConfiguration.get_EnableDetailedErrors()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.EnableDetailedErrorsSetBoolean">
            <summary>Sets the shim of HubConfiguration.set_EnableDetailedErrors(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.EnableJavaScriptProxiesGet">
            <summary>Sets the shim of HubConfiguration.get_EnableJavaScriptProxies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.EnableJavaScriptProxiesSetBoolean">
            <summary>Sets the shim of HubConfiguration.set_EnableJavaScriptProxies(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.AllInstances.EnableDetailedErrorsGet">
            <summary>Sets the shim of HubConfiguration.get_EnableDetailedErrors()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.AllInstances.EnableDetailedErrorsSetBoolean">
            <summary>Sets the shim of HubConfiguration.set_EnableDetailedErrors(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.AllInstances.EnableJavaScriptProxiesGet">
            <summary>Sets the shim of HubConfiguration.get_EnableJavaScriptProxies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubConfiguration.AllInstances.EnableJavaScriptProxiesSetBoolean">
            <summary>Sets the shim of HubConfiguration.set_EnableJavaScriptProxies(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHubException">
            <summary>Shim type of Microsoft.AspNet.SignalR.HubException</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubException.#ctor(Microsoft.AspNet.SignalR.HubException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.Constructor">
            <summary>Sets the shim of HubException.HubException()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.ConstructorString">
            <summary>Sets the shim of HubException.HubException(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.ConstructorStringObject">
            <summary>Sets the shim of HubException.HubException(String message, Object errorData)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.ErrorDataGet">
            <summary>Sets the shim of HubException.get_ErrorData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.ErrorDataSetObject">
            <summary>Sets the shim of HubException.set_ErrorData(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHubException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.AllInstances.ErrorDataGet">
            <summary>Sets the shim of HubException.get_ErrorData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubException.AllInstances.ErrorDataSetObject">
            <summary>Sets the shim of HubException.set_ErrorData(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimHubPipelineExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.HubPipelineExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubPipelineExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubPipelineExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimHubPipelineExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubPipelineExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimHubPipelineExtensions.RequireAuthenticationIHubPipeline">
            <summary>Sets the shim of HubPipelineExtensions.RequireAuthentication(IHubPipeline pipeline)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection">
            <summary>Shim type of Microsoft.AspNet.SignalR.PersistentConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.#ctor(Microsoft.AspNet.SignalR.PersistentConnection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AckHandlerGet">
            <summary>Sets the shim of PersistentConnection.get_AckHandler()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AckHandlerSetIAckHandler">
            <summary>Sets the shim of PersistentConnection.set_AckHandler(IAckHandler value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AppendGroupPrefixesHostContextString">
            <summary>Sets the shim of PersistentConnection.AppendGroupPrefixes(HostContext context, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AuthorizeIRequest">
            <summary>Sets the shim of PersistentConnection.Authorize(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AuthorizeRequestIRequest">
            <summary>Sets the shim of PersistentConnection.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ConnectionGet">
            <summary>Sets the shim of PersistentConnection.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ConnectionSetIConnection">
            <summary>Sets the shim of PersistentConnection.set_Connection(IConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.Constructor">
            <summary>Sets the shim of PersistentConnection.PersistentConnection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.CountersGet">
            <summary>Sets the shim of PersistentConnection.get_Counters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.CountersSetIPerformanceCounterManager">
            <summary>Sets the shim of PersistentConnection.set_Counters(IPerformanceCounterManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.CreateConnectionStringIListOfStringIListOfString">
            <summary>Sets the shim of PersistentConnection.CreateConnection(String connectionId, IList`1&lt;String&gt; signals, IList`1&lt;String&gt; groups)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.DefaultSignalGet">
            <summary>Sets the shim of PersistentConnection.get_DefaultSignal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.DefaultSignalRawGet">
            <summary>Sets the shim of PersistentConnection.get_DefaultSignalRaw()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.FailResponseIResponseStringInt32">
            <summary>Sets the shim of PersistentConnection.FailResponse(IResponse response, String message, Int32 statusCode)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GetDefaultSignalsStringString">
            <summary>Sets the shim of PersistentConnection.GetDefaultSignals(String userId, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GetSignalsStringString">
            <summary>Sets the shim of PersistentConnection.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GetTransportHostContext">
            <summary>Sets the shim of PersistentConnection.GetTransport(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GetUserIdentityHostContext">
            <summary>Sets the shim of PersistentConnection.GetUserIdentity(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GroupPrefixGet">
            <summary>Sets the shim of PersistentConnection.get_GroupPrefix()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GroupsGet">
            <summary>Sets the shim of PersistentConnection.get_Groups()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.GroupsSetIConnectionGroupManager">
            <summary>Sets the shim of PersistentConnection.set_Groups(IConnectionGroupManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.InitializeIDependencyResolver">
            <summary>Sets the shim of PersistentConnection.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.IsNegotiationRequestIRequest">
            <summary>Sets the shim of PersistentConnection.IsNegotiationRequest(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.IsPingRequestIRequest">
            <summary>Sets the shim of PersistentConnection.IsPingRequest(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.JsonSerializerGet">
            <summary>Sets the shim of PersistentConnection.get_JsonSerializer()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.JsonSerializerSetJsonSerializer">
            <summary>Sets the shim of PersistentConnection.set_JsonSerializer(JsonSerializer value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.MessageBusGet">
            <summary>Sets the shim of PersistentConnection.get_MessageBus()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.MessageBusSetIMessageBus">
            <summary>Sets the shim of PersistentConnection.set_MessageBus(IMessageBus value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.OnConnectedIRequestString">
            <summary>Sets the shim of PersistentConnection.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.OnDisconnectedIRequestString">
            <summary>Sets the shim of PersistentConnection.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.OnReceivedIRequestStringString">
            <summary>Sets the shim of PersistentConnection.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.OnReconnectedIRequestString">
            <summary>Sets the shim of PersistentConnection.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.OnRejoiningGroupsIRequestIListOfStringString">
            <summary>Sets the shim of PersistentConnection.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProcessJsonpRequestHostContextObject">
            <summary>Sets the shim of PersistentConnection.ProcessJsonpRequest(HostContext context, Object payload)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProcessNegotiationRequestHostContext">
            <summary>Sets the shim of PersistentConnection.ProcessNegotiationRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProcessPingRequestHostContext">
            <summary>Sets the shim of PersistentConnection.ProcessPingRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProcessRequestHostContext">
            <summary>Sets the shim of PersistentConnection.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProcessRequestIDictionaryOfStringObject">
            <summary>Sets the shim of PersistentConnection.ProcessRequest(IDictionary`2&lt;String,Object&gt; environment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProtectedDataGet">
            <summary>Sets the shim of PersistentConnection.get_ProtectedData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.ProtectedDataSetIProtectedData">
            <summary>Sets the shim of PersistentConnection.set_ProtectedData(IProtectedData value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.StaticConstructor">
            <summary>Sets the shim of PersistentConnection.PersistentConnection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.TraceGet">
            <summary>Sets the shim of PersistentConnection.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.TraceManagerGet">
            <summary>Sets the shim of PersistentConnection.get_TraceManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.TraceManagerSetITraceManager">
            <summary>Sets the shim of PersistentConnection.set_TraceManager(ITraceManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.TransportGet">
            <summary>Sets the shim of PersistentConnection.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.TransportSetITransport">
            <summary>Sets the shim of PersistentConnection.set_Transport(ITransport value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.UserIdProviderGet">
            <summary>Sets the shim of PersistentConnection.get_UserIdProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.UserIdProviderSetIUserIdProvider">
            <summary>Sets the shim of PersistentConnection.set_UserIdProvider(IUserIdProvider value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.VerifyGroupsHostContextString">
            <summary>Sets the shim of PersistentConnection.VerifyGroups(HostContext context, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection._AppendGroupPrefixesb__eString">
            <summary>Sets the shim of PersistentConnection.&lt;AppendGroupPrefixes&gt;b__e(String g)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.AckHandlerGet">
            <summary>Sets the shim of PersistentConnection.get_AckHandler()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.AckHandlerSetIAckHandler">
            <summary>Sets the shim of PersistentConnection.set_AckHandler(IAckHandler value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.AppendGroupPrefixesHostContextString">
            <summary>Sets the shim of PersistentConnection.AppendGroupPrefixes(HostContext context, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.AuthorizeIRequest">
            <summary>Sets the shim of PersistentConnection.Authorize(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.AuthorizeRequestIRequest">
            <summary>Sets the shim of PersistentConnection.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ConnectionGet">
            <summary>Sets the shim of PersistentConnection.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ConnectionSetIConnection">
            <summary>Sets the shim of PersistentConnection.set_Connection(IConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.CountersGet">
            <summary>Sets the shim of PersistentConnection.get_Counters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.CountersSetIPerformanceCounterManager">
            <summary>Sets the shim of PersistentConnection.set_Counters(IPerformanceCounterManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.CreateConnectionStringIListOfStringIListOfString">
            <summary>Sets the shim of PersistentConnection.CreateConnection(String connectionId, IList`1&lt;String&gt; signals, IList`1&lt;String&gt; groups)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.DefaultSignalGet">
            <summary>Sets the shim of PersistentConnection.get_DefaultSignal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.DefaultSignalRawGet">
            <summary>Sets the shim of PersistentConnection.get_DefaultSignalRaw()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.GetDefaultSignalsStringString">
            <summary>Sets the shim of PersistentConnection.GetDefaultSignals(String userId, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.GetSignalsStringString">
            <summary>Sets the shim of PersistentConnection.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.GetTransportHostContext">
            <summary>Sets the shim of PersistentConnection.GetTransport(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.GroupPrefixGet">
            <summary>Sets the shim of PersistentConnection.get_GroupPrefix()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.GroupsGet">
            <summary>Sets the shim of PersistentConnection.get_Groups()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.GroupsSetIConnectionGroupManager">
            <summary>Sets the shim of PersistentConnection.set_Groups(IConnectionGroupManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.InitializeIDependencyResolver">
            <summary>Sets the shim of PersistentConnection.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.JsonSerializerGet">
            <summary>Sets the shim of PersistentConnection.get_JsonSerializer()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.JsonSerializerSetJsonSerializer">
            <summary>Sets the shim of PersistentConnection.set_JsonSerializer(JsonSerializer value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.MessageBusGet">
            <summary>Sets the shim of PersistentConnection.get_MessageBus()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.MessageBusSetIMessageBus">
            <summary>Sets the shim of PersistentConnection.set_MessageBus(IMessageBus value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.OnConnectedIRequestString">
            <summary>Sets the shim of PersistentConnection.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.OnDisconnectedIRequestString">
            <summary>Sets the shim of PersistentConnection.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.OnReceivedIRequestStringString">
            <summary>Sets the shim of PersistentConnection.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.OnReconnectedIRequestString">
            <summary>Sets the shim of PersistentConnection.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.OnRejoiningGroupsIRequestIListOfStringString">
            <summary>Sets the shim of PersistentConnection.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProcessJsonpRequestHostContextObject">
            <summary>Sets the shim of PersistentConnection.ProcessJsonpRequest(HostContext context, Object payload)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProcessNegotiationRequestHostContext">
            <summary>Sets the shim of PersistentConnection.ProcessNegotiationRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProcessPingRequestHostContext">
            <summary>Sets the shim of PersistentConnection.ProcessPingRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProcessRequestHostContext">
            <summary>Sets the shim of PersistentConnection.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProcessRequestIDictionaryOfStringObject">
            <summary>Sets the shim of PersistentConnection.ProcessRequest(IDictionary`2&lt;String,Object&gt; environment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProtectedDataGet">
            <summary>Sets the shim of PersistentConnection.get_ProtectedData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.ProtectedDataSetIProtectedData">
            <summary>Sets the shim of PersistentConnection.set_ProtectedData(IProtectedData value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.TraceGet">
            <summary>Sets the shim of PersistentConnection.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.TraceManagerGet">
            <summary>Sets the shim of PersistentConnection.get_TraceManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.TraceManagerSetITraceManager">
            <summary>Sets the shim of PersistentConnection.set_TraceManager(ITraceManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.TransportGet">
            <summary>Sets the shim of PersistentConnection.get_Transport()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.TransportSetITransport">
            <summary>Sets the shim of PersistentConnection.set_Transport(ITransport value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.TryGetConnectionIdHostContextStringStringOutStringOutInt32Out">
            <summary>Sets the shim of PersistentConnection.TryGetConnectionId(HostContext context, String connectionToken, String&amp; connectionId, String&amp; message, Int32&amp; statusCode)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.UserIdProviderGet">
            <summary>Sets the shim of PersistentConnection.get_UserIdProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.UserIdProviderSetIUserIdProvider">
            <summary>Sets the shim of PersistentConnection.set_UserIdProvider(IUserIdProvider value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances.VerifyGroupsHostContextString">
            <summary>Sets the shim of PersistentConnection.VerifyGroups(HostContext context, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.ShimPersistentConnection.AllInstances._AppendGroupPrefixesb__eString">
            <summary>Sets the shim of PersistentConnection.&lt;AppendGroupPrefixes&gt;b__e(String g)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute">
            <summary>Stub type of Microsoft.AspNet.SignalR.AuthorizeAttribute</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of AuthorizeAttribute.AuthorizeHubConnection(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.AuthorizeHubConnectionHubDescriptorIRequest">
            <summary>Sets the stub of AuthorizeAttribute.AuthorizeHubConnection(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
            <summary>Sets the stub of AuthorizeAttribute.AuthorizeHubMethodInvocation(IHubIncomingInvokerContext hubIncomingInvokerContext, Boolean appliesToMethod)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.AuthorizeHubMethodInvocationIHubIncomingInvokerContextBoolean">
            <summary>Sets the stub of AuthorizeAttribute.AuthorizeHubMethodInvocation(IHubIncomingInvokerContext hubIncomingInvokerContext, Boolean appliesToMethod)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.Equals(System.Object)">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.EqualsObject">
            <summary>Sets the stub of Attribute.Equals(Object obj)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.GetHashCode">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.GetHashCode01">
            <summary>Sets the stub of Attribute.GetHashCode()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizeAttribute</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.IsDefaultAttribute">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.IsDefaultAttribute01">
            <summary>Sets the stub of Attribute.IsDefaultAttribute()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.Match(System.Object)">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.MatchObject">
            <summary>Sets the stub of Attribute.Match(Object obj)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.TypeIdGet">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.UserAuthorized(System.Security.Principal.IPrincipal)">
            <summary>Sets the stub of AuthorizeAttribute.UserAuthorized(IPrincipal user)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.UserAuthorizedIPrincipal">
            <summary>Sets the stub of AuthorizeAttribute.UserAuthorized(IPrincipal user)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubAuthorizeAttribute.TypeId">
            <summary>Sets the stub of Attribute.get_TypeId()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubConnectionConfiguration">
            <summary>Stub type of Microsoft.AspNet.SignalR.ConnectionConfiguration</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubConnectionConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubConnectionConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionConfiguration</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubConnectionConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubConnectionConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubConnectionConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubCookie">
            <summary>Stub type of Microsoft.AspNet.SignalR.Cookie</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubCookie.#ctor(System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubCookie.#ctor(System.String,System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubCookie.InitializeStub">
            <summary>Initializes a new instance of type StubCookie</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubCookie.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubCookie.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubCookie.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver">
            <summary>Stub type of Microsoft.AspNet.SignalR.DefaultDependencyResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.Dispose(System.Boolean)">
            <summary>Sets the stub of DefaultDependencyResolver.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.DisposeBoolean">
            <summary>Sets the stub of DefaultDependencyResolver.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.GetService(System.Type)">
            <summary>Sets the stub of DefaultDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.GetServiceType">
            <summary>Sets the stub of DefaultDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.GetServices(System.Type)">
            <summary>Sets the stub of DefaultDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.GetServicesType">
            <summary>Sets the stub of DefaultDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultDependencyResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.Register(System.Type,System.Func{System.Object})">
            <summary>Sets the stub of DefaultDependencyResolver.Register(Type serviceType, Func`1&lt;Object&gt; activator)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
            <summary>Sets the stub of DefaultDependencyResolver.Register(Type serviceType, IEnumerable`1&lt;Func`1&lt;Object&gt;&gt; activators)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.RegisterTypeFuncOfObject">
            <summary>Sets the stub of DefaultDependencyResolver.Register(Type serviceType, Func`1&lt;Object&gt; activator)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.RegisterTypeIEnumerableOfFuncOfObject">
            <summary>Sets the stub of DefaultDependencyResolver.Register(Type serviceType, IEnumerable`1&lt;Func`1&lt;Object&gt;&gt; activators)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubDefaultDependencyResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubGroupManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.GroupManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubGroupManager.#ctor(Microsoft.AspNet.SignalR.IConnection,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubGroupManager.InitializeStub">
            <summary>Initializes a new instance of type StubGroupManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubGroupManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubGroupManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubGroupManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubHub">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hub</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHub.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHub.Dispose(System.Boolean)">
            <summary>Sets the stub of Hub.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHub.DisposeBoolean">
            <summary>Sets the stub of Hub.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHub.InitializeStub">
            <summary>Initializes a new instance of type StubHub</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHub.OnConnected">
            <summary>Sets the stub of Hub.OnConnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHub.OnConnected01">
            <summary>Sets the stub of Hub.OnConnected()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHub.OnDisconnected">
            <summary>Sets the stub of Hub.OnDisconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHub.OnDisconnected01">
            <summary>Sets the stub of Hub.OnDisconnected()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHub.OnReconnected">
            <summary>Sets the stub of Hub.OnReconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHub.OnReconnected01">
            <summary>Sets the stub of Hub.OnReconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHub.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHub.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHub.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubHubConfiguration">
            <summary>Stub type of Microsoft.AspNet.SignalR.HubConfiguration</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubHubConfiguration</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubHubException">
            <summary>Stub type of Microsoft.AspNet.SignalR.HubException</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.#ctor(System.String,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubHubException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubHubException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.InitializeStub">
            <summary>Initializes a new instance of type StubHubException</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubHubException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubHubException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubHubException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIConnection">
            <summary>Stub type of Microsoft.AspNet.SignalR.IConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnection.#ctor">
            <summary>Initializes a new instance of type StubIConnection</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIConnection.DefaultSignalGet">
            <summary>Sets the stub of IConnection.get_DefaultSignal()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnection.mansrc::Microsoft#AspNet#SignalR#IConnection#Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
            <summary>Sets the stub of IConnection.Send(ConnectionMessage message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIConnection.SendConnectionMessage">
            <summary>Sets the stub of IConnection.Send(ConnectionMessage message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIConnection.mansrc::Microsoft#AspNet#SignalR#IConnection#DefaultSignal">
            <summary>Sets the stub of IConnection.get_DefaultSignal()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.IConnectionGroupManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.#ctor">
            <summary>Initializes a new instance of type StubIConnectionGroupManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.AddStringString">
            <summary>Sets the stub of IGroupManager.Add(String connectionId, String groupName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.mansrc::Microsoft#AspNet#SignalR#IConnectionGroupManager#Send(System.String,System.Object,System.String[])">
            <summary>Sets the stub of IConnectionGroupManager.Send(String groupName, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.mansrc::Microsoft#AspNet#SignalR#IConnectionGroupManager#Send(System.Collections.Generic.IList{System.String},System.Object,System.String[])">
            <summary>Sets the stub of IConnectionGroupManager.Send(IList`1&lt;String&gt; groupNames, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.mansrc::Microsoft#AspNet#SignalR#IGroupManager#Add(System.String,System.String)">
            <summary>Sets the stub of IGroupManager.Add(String connectionId, String groupName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.mansrc::Microsoft#AspNet#SignalR#IGroupManager#Remove(System.String,System.String)">
            <summary>Sets the stub of IGroupManager.Remove(String connectionId, String groupName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.RemoveStringString">
            <summary>Sets the stub of IGroupManager.Remove(String connectionId, String groupName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.SendIListOfStringObjectStringArray">
            <summary>Sets the stub of IConnectionGroupManager.Send(IList`1&lt;String&gt; groupNames, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIConnectionGroupManager.SendStringObjectStringArray">
            <summary>Sets the stub of IConnectionGroupManager.Send(String groupName, Object value, String[] excludeConnectionIds)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver">
            <summary>Stub type of Microsoft.AspNet.SignalR.IDependencyResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.#ctor">
            <summary>Initializes a new instance of type StubIDependencyResolver</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.GetServiceType">
            <summary>Sets the stub of IDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.GetServicesType">
            <summary>Sets the stub of IDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.mansrc::Microsoft#AspNet#SignalR#IDependencyResolver#GetService(System.Type)">
            <summary>Sets the stub of IDependencyResolver.GetService(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.mansrc::Microsoft#AspNet#SignalR#IDependencyResolver#GetServices(System.Type)">
            <summary>Sets the stub of IDependencyResolver.GetServices(Type serviceType)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.mansrc::Microsoft#AspNet#SignalR#IDependencyResolver#Register(System.Type,System.Func{System.Object})">
            <summary>Sets the stub of IDependencyResolver.Register(Type serviceType, Func`1&lt;Object&gt; activator)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.mansrc::Microsoft#AspNet#SignalR#IDependencyResolver#Register(System.Type,System.Collections.Generic.IEnumerable{System.Func{System.Object}})">
            <summary>Sets the stub of IDependencyResolver.Register(Type serviceType, IEnumerable`1&lt;Func`1&lt;Object&gt;&gt; activators)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.RegisterTypeFuncOfObject">
            <summary>Sets the stub of IDependencyResolver.Register(Type serviceType, Func`1&lt;Object&gt; activator)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.RegisterTypeIEnumerableOfFuncOfObject">
            <summary>Sets the stub of IDependencyResolver.Register(Type serviceType, IEnumerable`1&lt;Func`1&lt;Object&gt;&gt; activators)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIDependencyResolver.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIGroupManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.IGroupManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIGroupManager.#ctor">
            <summary>Initializes a new instance of type StubIGroupManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIGroupManager.AddStringString">
            <summary>Sets the stub of IGroupManager.Add(String connectionId, String groupName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIGroupManager.mansrc::Microsoft#AspNet#SignalR#IGroupManager#Add(System.String,System.String)">
            <summary>Sets the stub of IGroupManager.Add(String connectionId, String groupName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIGroupManager.mansrc::Microsoft#AspNet#SignalR#IGroupManager#Remove(System.String,System.String)">
            <summary>Sets the stub of IGroupManager.Remove(String connectionId, String groupName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIGroupManager.RemoveStringString">
            <summary>Sets the stub of IGroupManager.Remove(String connectionId, String groupName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIHubContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.IHubContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIHubContext.#ctor">
            <summary>Initializes a new instance of type StubIHubContext</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIHubContext.ClientsGet">
            <summary>Sets the stub of IHubContext.get_Clients()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIHubContext.GroupsGet">
            <summary>Sets the stub of IHubContext.get_Groups()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIHubContext.mansrc::Microsoft#AspNet#SignalR#IHubContext#Clients">
            <summary>Sets the stub of IHubContext.get_Clients()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIHubContext.mansrc::Microsoft#AspNet#SignalR#IHubContext#Groups">
            <summary>Sets the stub of IHubContext.get_Groups()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIPersistentConnectionContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.IPersistentConnectionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIPersistentConnectionContext.#ctor">
            <summary>Initializes a new instance of type StubIPersistentConnectionContext</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIPersistentConnectionContext.ConnectionGet">
            <summary>Sets the stub of IPersistentConnectionContext.get_Connection()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIPersistentConnectionContext.GroupsGet">
            <summary>Sets the stub of IPersistentConnectionContext.get_Groups()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIPersistentConnectionContext.mansrc::Microsoft#AspNet#SignalR#IPersistentConnectionContext#Connection">
            <summary>Sets the stub of IPersistentConnectionContext.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIPersistentConnectionContext.mansrc::Microsoft#AspNet#SignalR#IPersistentConnectionContext#Groups">
            <summary>Sets the stub of IPersistentConnectionContext.get_Groups()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIRequest">
            <summary>Stub type of Microsoft.AspNet.SignalR.IRequest</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIRequest.#ctor">
            <summary>Initializes a new instance of type StubIRequest</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.CookiesGet">
            <summary>Sets the stub of IRequest.get_Cookies()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.EnvironmentGet">
            <summary>Sets the stub of IRequest.get_Environment()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.HeadersGet">
            <summary>Sets the stub of IRequest.get_Headers()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.LocalPathGet">
            <summary>Sets the stub of IRequest.get_LocalPath()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#ReadForm">
            <summary>Sets the stub of IRequest.ReadForm()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.QueryStringGet">
            <summary>Sets the stub of IRequest.get_QueryString()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.ReadForm">
            <summary>Sets the stub of IRequest.ReadForm()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.UrlGet">
            <summary>Sets the stub of IRequest.get_Url()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIRequest.UserGet">
            <summary>Sets the stub of IRequest.get_User()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#Cookies">
            <summary>Sets the stub of IRequest.get_Cookies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#Environment">
            <summary>Sets the stub of IRequest.get_Environment()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#Headers">
            <summary>Sets the stub of IRequest.get_Headers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#LocalPath">
            <summary>Sets the stub of IRequest.get_LocalPath()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#QueryString">
            <summary>Sets the stub of IRequest.get_QueryString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#Url">
            <summary>Sets the stub of IRequest.get_Url()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubIRequest.mansrc::Microsoft#AspNet#SignalR#IRequest#User">
            <summary>Sets the stub of IRequest.get_User()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubIUserIdProvider">
            <summary>Stub type of Microsoft.AspNet.SignalR.IUserIdProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIUserIdProvider.#ctor">
            <summary>Initializes a new instance of type StubIUserIdProvider</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubIUserIdProvider.GetUserIdIRequest">
            <summary>Sets the stub of IUserIdProvider.GetUserId(IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubIUserIdProvider.mansrc::Microsoft#AspNet#SignalR#IUserIdProvider#GetUserId(Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of IUserIdProvider.GetUserId(IRequest request)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection">
            <summary>Stub type of Microsoft.AspNet.SignalR.PersistentConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of PersistentConnection.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.AuthorizeRequestIRequest">
            <summary>Sets the stub of PersistentConnection.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.GetSignals(System.String,System.String)">
            <summary>Sets the stub of PersistentConnection.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.GetSignalsStringString">
            <summary>Sets the stub of PersistentConnection.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Sets the stub of PersistentConnection.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.InitializeIDependencyResolver">
            <summary>Sets the stub of PersistentConnection.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.InitializeStub">
            <summary>Initializes a new instance of type StubPersistentConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Sets the stub of PersistentConnection.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnConnectedIRequestString">
            <summary>Sets the stub of PersistentConnection.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Sets the stub of PersistentConnection.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnDisconnectedIRequestString">
            <summary>Sets the stub of PersistentConnection.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
            <summary>Sets the stub of PersistentConnection.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnReceivedIRequestStringString">
            <summary>Sets the stub of PersistentConnection.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Sets the stub of PersistentConnection.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnReconnectedIRequestString">
            <summary>Sets the stub of PersistentConnection.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
            <summary>Sets the stub of PersistentConnection.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.OnRejoiningGroupsIRequestIListOfStringString">
            <summary>Sets the stub of PersistentConnection.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
            <summary>Sets the stub of PersistentConnection.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.ProcessRequestHostContext">
            <summary>Sets the stub of PersistentConnection.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.TraceGet">
            <summary>Sets the stub of PersistentConnection.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Fakes.StubPersistentConnection.Trace">
            <summary>Sets the stub of PersistentConnection.get_Trace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hosting.HostContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of HostContext.HostContext(IDictionary`2&lt;String,Object&gt; environment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.ConstructorIRequestIResponse">
            <summary>Sets the shim of HostContext.HostContext(IRequest request, IResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.EnvironmentGet">
            <summary>Sets the shim of HostContext.get_Environment()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.EnvironmentSetIDictionaryOfStringObject">
            <summary>Sets the shim of HostContext.set_Environment(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.RequestGet">
            <summary>Sets the shim of HostContext.get_Request()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.RequestSetIRequest">
            <summary>Sets the shim of HostContext.set_Request(IRequest value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.ResponseGet">
            <summary>Sets the shim of HostContext.get_Response()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.ResponseSetIResponse">
            <summary>Sets the shim of HostContext.set_Response(IResponse value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances.EnvironmentGet">
            <summary>Sets the shim of HostContext.get_Environment()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances.EnvironmentSetIDictionaryOfStringObject">
            <summary>Sets the shim of HostContext.set_Environment(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances.RequestGet">
            <summary>Sets the shim of HostContext.get_Request()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances.RequestSetIRequest">
            <summary>Sets the shim of HostContext.set_Request(IRequest value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances.ResponseGet">
            <summary>Sets the shim of HostContext.get_Response()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostContext.AllInstances.ResponseSetIResponse">
            <summary>Sets the shim of HostContext.set_Response(IResponse value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hosting.HostDependencyResolverExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.InitializeHostIDependencyResolverStringCancellationToken">
            <summary>Sets the shim of HostDependencyResolverExtensions.InitializeHost(IDependencyResolver resolver, String instanceName, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.InitializePerformanceCountersIDependencyResolverStringCancellationToken">
            <summary>Sets the shim of HostDependencyResolverExtensions.InitializePerformanceCounters(IDependencyResolver resolver, String instanceName, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions.InitializeResolverDisposeIDependencyResolverCancellationToken">
            <summary>Sets the shim of HostDependencyResolverExtensions.InitializeResolverDispose(IDependencyResolver resolver, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimHostDependencyResolverExtensions._InitializeResolverDisposeb__0Object">
            <summary>Sets the shim of HostDependencyResolverExtensions.&lt;InitializeResolverDispose&gt;b__0(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.ConstructorIDependencyResolver">
            <summary>Sets the shim of PersistentConnectionFactory.PersistentConnectionFactory(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.CreateInstanceType">
            <summary>Sets the shim of PersistentConnectionFactory.CreateInstance(Type connectionType)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimPersistentConnectionFactory.AllInstances.CreateInstanceType">
            <summary>Sets the shim of PersistentConnectionFactory.CreateInstance(Type connectionType)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimResponseExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hosting.ResponseExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimResponseExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimResponseExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimResponseExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimResponseExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.ShimResponseExtensions.EndIResponseString">
            <summary>Sets the shim of ResponseExtensions.End(IResponse response, String data)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hosting.HostContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext.#ctor(Microsoft.AspNet.SignalR.IRequest,Microsoft.AspNet.SignalR.Hosting.IResponse)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext.InitializeStub">
            <summary>Initializes a new instance of type StubHostContext</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubHostContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hosting.INameValueCollection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.#ctor">
            <summary>Initializes a new instance of type StubINameValueCollection</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.GetEnumerator01">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.GetString">
            <summary>Sets the stub of INameValueCollection.Get(String key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.GetValuesString">
            <summary>Sets the stub of INameValueCollection.GetValues(String key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.ItemGetString">
            <summary>Sets the stub of INameValueCollection.get_Item(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.mansrc::Microsoft#AspNet#SignalR#Hosting#INameValueCollection#Get(System.String)">
            <summary>Sets the stub of INameValueCollection.Get(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.mansrc::Microsoft#AspNet#SignalR#Hosting#INameValueCollection#GetValues(System.String)">
            <summary>Sets the stub of INameValueCollection.GetValues(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.global::System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#String}}#GetEnumerator">
            <summary>Sets the stub of IEnumerable`1.GetEnumerator()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.global::System#Collections#IEnumerable#GetEnumerator">
            <summary>Sets the stub of IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubINameValueCollection.Microsoft#AspNet#SignalR#Hosting#INameValueCollection#Item(System.String)">
            <summary>Sets the stub of INameValueCollection.get_Item(String key)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hosting.IResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.#ctor">
            <summary>Initializes a new instance of type StubIResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.AttachBackingFieldToContentType">
            <summary>Attaches delegates to emulate StubIResponse.ContentType as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.AttachBackingFieldToStatusCode">
            <summary>Attaches delegates to emulate StubIResponse.StatusCode as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.CancellationTokenGet">
            <summary>Sets the stub of IResponse.get_CancellationToken()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.ContentTypeGet">
            <summary>Sets the stub of IResponse.get_ContentType()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.ContentTypeSetString">
            <summary>Sets the stub of IResponse.set_ContentType(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.Flush">
            <summary>Sets the stub of IResponse.Flush()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.mansrc::Microsoft#AspNet#SignalR#Hosting#IResponse#Flush">
            <summary>Sets the stub of IResponse.Flush()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.mansrc::Microsoft#AspNet#SignalR#Hosting#IResponse#Write(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of IResponse.Write(ArraySegment`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.StatusCodeGet">
            <summary>Sets the stub of IResponse.get_StatusCode()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.StatusCodeSetInt32">
            <summary>Sets the stub of IResponse.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.WriteArraySegmentOfByte">
            <summary>Sets the stub of IResponse.Write(ArraySegment`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.mansrc::Microsoft#AspNet#SignalR#Hosting#IResponse#CancellationToken">
            <summary>Sets the stub of IResponse.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.mansrc::Microsoft#AspNet#SignalR#Hosting#IResponse#ContentType">
            <summary>Sets the stub of IResponse.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubIResponse.mansrc::Microsoft#AspNet#SignalR#Hosting#IResponse#StatusCode">
            <summary>Sets the stub of IResponse.get_StatusCode()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hosting.Fakes.StubPersistentConnectionFactory">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hosting.PersistentConnectionFactory</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubPersistentConnectionFactory.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hosting.Fakes.StubPersistentConnectionFactory.InitializeStub">
            <summary>Initializes a new instance of type StubPersistentConnectionFactory</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubPersistentConnectionFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubPersistentConnectionFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hosting.Fakes.StubPersistentConnectionFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.AuthorizeModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.AuthorizeModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.Bind(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the shim of AuthorizeModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the shim of AuthorizeModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.Constructor">
            <summary>Sets the shim of AuthorizeModule.AuthorizeModule()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.ConstructorIAuthorizeHubConnectionIAuthorizeHubMethodInvocation">
            <summary>Sets the shim of AuthorizeModule.AuthorizeModule(IAuthorizeHubConnection globalConnectionAuthorizer, IAuthorizeHubMethodInvocation globalInvocationAuthorizer)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.AllInstances.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the shim of AuthorizeModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimAuthorizeModule.AllInstances.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the shim of AuthorizeModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.#ctor(Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.ArgsGet">
            <summary>Sets the shim of ClientHubInvocation.get_Args()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.ArgsSetObjectArray">
            <summary>Sets the shim of ClientHubInvocation.set_Args(Object[] value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.Constructor">
            <summary>Sets the shim of ClientHubInvocation.ClientHubInvocation()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.HubGet">
            <summary>Sets the shim of ClientHubInvocation.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.HubSetString">
            <summary>Sets the shim of ClientHubInvocation.set_Hub(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.MethodGet">
            <summary>Sets the shim of ClientHubInvocation.get_Method()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.MethodSetString">
            <summary>Sets the shim of ClientHubInvocation.set_Method(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.StateGet">
            <summary>Sets the shim of ClientHubInvocation.get_State()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.StateSetIDictionaryOfStringObject">
            <summary>Sets the shim of ClientHubInvocation.set_State(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.ArgsGet">
            <summary>Sets the shim of ClientHubInvocation.get_Args()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.ArgsSetObjectArray">
            <summary>Sets the shim of ClientHubInvocation.set_Args(Object[] value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.HubGet">
            <summary>Sets the shim of ClientHubInvocation.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.HubSetString">
            <summary>Sets the shim of ClientHubInvocation.set_Hub(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.MethodGet">
            <summary>Sets the shim of ClientHubInvocation.get_Method()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.MethodSetString">
            <summary>Sets the shim of ClientHubInvocation.set_Method(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.StateGet">
            <summary>Sets the shim of ClientHubInvocation.get_State()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientHubInvocation.AllInstances.StateSetIDictionaryOfStringObject">
            <summary>Sets the shim of ClientHubInvocation.set_State(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ClientProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.ClientProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.ConstructorIConnectionIHubPipelineInvokerStringIListOfString">
            <summary>Sets the shim of ClientProxy.ClientProxy(IConnection connection, IHubPipelineInvoker invoker, String hubName, IList`1&lt;String&gt; exclude)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.InvokeStringObjectArray">
            <summary>Sets the shim of ClientProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of ClientProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.AllInstances.InvokeStringObjectArray">
            <summary>Sets the shim of ClientProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimClientProxy.AllInstances.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of ClientProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.ConstructorIConnectionIHubPipelineInvokerStringStringStringArray">
            <summary>Sets the shim of ConnectionIdProxy.ConnectionIdProxy(IConnection connection, IHubPipelineInvoker invoker, String signal, String hubName, String[] exclude)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimConnectionIdProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.#ctor(Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.Bind(Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.Constructor">
            <summary>Sets the shim of DefaultAssemblyLocator.DefaultAssemblyLocator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.GetAssemblies">
            <summary>Sets the shim of DefaultAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultAssemblyLocator.AllInstances.GetAssemblies">
            <summary>Sets the shim of DefaultAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.Bind(Microsoft.AspNet.SignalR.Hubs.IHubActivator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.ConstructorIDependencyResolver">
            <summary>Sets the shim of DefaultHubActivator.DefaultHubActivator(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.CreateHubDescriptor">
            <summary>Sets the shim of DefaultHubActivator.Create(HubDescriptor descriptor)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubActivator.AllInstances.CreateHubDescriptor">
            <summary>Sets the shim of DefaultHubActivator.Create(HubDescriptor descriptor)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.DefaultHubManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.#ctor(Microsoft.AspNet.SignalR.Hubs.DefaultHubManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.Bind(Microsoft.AspNet.SignalR.Hubs.IHubManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.ConstructorIDependencyResolver">
            <summary>Sets the shim of DefaultHubManager.DefaultHubManager(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.GetHubMethodStringStringIListOfIJsonValue">
            <summary>Sets the shim of DefaultHubManager.GetHubMethod(String hubName, String method, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.GetHubMethodsStringFuncOfMethodDescriptorBoolean">
            <summary>Sets the shim of DefaultHubManager.GetHubMethods(String hubName, Func`2&lt;MethodDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.GetHubString">
            <summary>Sets the shim of DefaultHubManager.GetHub(String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.GetHubsFuncOfHubDescriptorBoolean">
            <summary>Sets the shim of DefaultHubManager.GetHubs(Func`2&lt;HubDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.ResolveHubString">
            <summary>Sets the shim of DefaultHubManager.ResolveHub(String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.ResolveHubs">
            <summary>Sets the shim of DefaultHubManager.ResolveHubs()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager._GetHubsb__3IHubDescriptorProvider">
            <summary>Sets the shim of DefaultHubManager.&lt;GetHubs&gt;b__3(IHubDescriptorProvider p)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager._ResolveHubsb__bHubDescriptor">
            <summary>Sets the shim of DefaultHubManager.&lt;ResolveHubs&gt;b__b(HubDescriptor hub)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances.GetHubMethodStringStringIListOfIJsonValue">
            <summary>Sets the shim of DefaultHubManager.GetHubMethod(String hubName, String method, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances.GetHubMethodsStringFuncOfMethodDescriptorBoolean">
            <summary>Sets the shim of DefaultHubManager.GetHubMethods(String hubName, Func`2&lt;MethodDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances.GetHubString">
            <summary>Sets the shim of DefaultHubManager.GetHub(String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances.GetHubsFuncOfHubDescriptorBoolean">
            <summary>Sets the shim of DefaultHubManager.GetHubs(Func`2&lt;HubDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances.ResolveHubString">
            <summary>Sets the shim of DefaultHubManager.ResolveHub(String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances.ResolveHubs">
            <summary>Sets the shim of DefaultHubManager.ResolveHubs()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultHubManager.AllInstances._ResolveHubsb__bHubDescriptor">
            <summary>Sets the shim of DefaultHubManager.&lt;ResolveHubs&gt;b__b(HubDescriptor hub)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.Bind(Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.CommasOf1IEnumerableOfM0FuncOfM0String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String},System.String})">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.Commas(IEnumerable`1&lt;!!0&gt; values, Func`2&lt;!!0,String&gt; selector)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.CommasIEnumerableOfString">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.Commas(IEnumerable`1&lt;String&gt; values)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.ConstructorIDependencyResolver">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.DefaultJavaScriptProxyGenerator(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.ConstructorIHubManagerIJavaScriptMinifier">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.DefaultJavaScriptProxyGenerator(IHubManager manager, IJavaScriptMinifier javaScriptMinifier)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GenerateMethodStringBuilderMethodDescriptorBooleanString">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateMethod(StringBuilder sb, MethodDescriptor method, Boolean includeDocComments, String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GenerateProxyIHubManagerIJavaScriptMinifierBoolean">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateProxy(IHubManager hubManager, IJavaScriptMinifier javaScriptMinifier, Boolean includeDocComments)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GenerateProxyString">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateProxy(String serviceUrl)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GenerateProxyStringBoolean">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateProxy(String serviceUrl, Boolean includeDocComments)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GenerateTypeIHubManagerStringBuilderHubDescriptorBoolean">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateType(IHubManager hubManager, StringBuilder sb, HubDescriptor descriptor, Boolean includeDocComments)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GetDescriptorNameDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GetDescriptorName(Descriptor descriptor)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GetMethodsIHubManagerHubDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GetMethods(IHubManager manager, HubDescriptor descriptor)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.GetTemplateFromResource">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GetTemplateFromResource()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.JavaScriptEncodeString">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.JavaScriptEncode(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.MapToJavaScriptTypeType">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.MapToJavaScriptType(Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.StaticConstructor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.DefaultJavaScriptProxyGenerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._Commasb__13String">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;Commas&gt;b__13(String v)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._GenerateMethodb__10ParameterDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;GenerateMethod&gt;b__10(ParameterDescriptor p)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._GenerateMethodb__fParameterDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;GenerateMethod&gt;b__f(ParameterDescriptor p)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._GenerateProxyb__2HubDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;GenerateProxy&gt;b__2(HubDescriptor h)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._GetMethodsb__5MethodDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;GetMethods&gt;b__5(MethodDescriptor method)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._GetMethodsb__7MethodDescriptor">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;GetMethods&gt;b__7(MethodDescriptor overload)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator._ctorb__0">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.AllInstances.GenerateProxyString">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateProxy(String serviceUrl)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.AllInstances.GenerateProxyStringBoolean">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.GenerateProxy(String serviceUrl, Boolean includeDocComments)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultJavaScriptProxyGenerator.AllInstances._ctorb__0">
            <summary>Sets the shim of DefaultJavaScriptProxyGenerator.&lt;.ctor&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.#ctor(Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.Bind(Microsoft.AspNet.SignalR.Hubs.IParameterResolver)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.Constructor">
            <summary>Sets the shim of DefaultParameterResolver.DefaultParameterResolver()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.ResolveMethodParametersMethodDescriptorIListOfIJsonValue">
            <summary>Sets the shim of DefaultParameterResolver.ResolveMethodParameters(MethodDescriptor method, IList`1&lt;IJsonValue&gt; values)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.ResolveParameterParameterDescriptorIJsonValue">
            <summary>Sets the shim of DefaultParameterResolver.ResolveParameter(ParameterDescriptor descriptor, IJsonValue value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.AllInstances.ResolveMethodParametersMethodDescriptorIListOfIJsonValue">
            <summary>Sets the shim of DefaultParameterResolver.ResolveMethodParameters(MethodDescriptor method, IList`1&lt;IJsonValue&gt; values)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDefaultParameterResolver.AllInstances.ResolveParameterParameterDescriptorIJsonValue">
            <summary>Sets the shim of DefaultParameterResolver.ResolveParameter(ParameterDescriptor descriptor, IJsonValue value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.Descriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.#ctor(Microsoft.AspNet.SignalR.Hubs.Descriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.Constructor">
            <summary>Sets the shim of Descriptor.Descriptor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.NameGet">
            <summary>Sets the shim of Descriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.NameSetString">
            <summary>Sets the shim of Descriptor.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.NameSpecifiedGet">
            <summary>Sets the shim of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.NameSpecifiedSetBoolean">
            <summary>Sets the shim of Descriptor.set_NameSpecified(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.AllInstances.NameGet">
            <summary>Sets the shim of Descriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.AllInstances.NameSetString">
            <summary>Sets the shim of Descriptor.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.AllInstances.NameSpecifiedGet">
            <summary>Sets the shim of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDescriptor.AllInstances.NameSpecifiedSetBoolean">
            <summary>Sets the shim of Descriptor.set_NameSpecified(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.DynamicDictionary</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.#ctor(Microsoft.AspNet.SignalR.Hubs.DynamicDictionary)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Bind(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AddKeyValuePairOfStringObject">
            <summary>Sets the shim of DynamicDictionary.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AddStringObject">
            <summary>Sets the shim of DynamicDictionary.Add(String key, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.Clear">
            <summary>Sets the shim of DynamicDictionary.Clear()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of DynamicDictionary.DynamicDictionary(IDictionary`2&lt;String,Object&gt; obj)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.ContainsKeyString">
            <summary>Sets the shim of DynamicDictionary.ContainsKey(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.ContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of DynamicDictionary.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of DynamicDictionary.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.CountGet">
            <summary>Sets the shim of DynamicDictionary.get_Count()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.GetEnumerator">
            <summary>Sets the shim of DynamicDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.IsReadOnlyGet">
            <summary>Sets the shim of DynamicDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.ItemGetString">
            <summary>Sets the shim of DynamicDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.ItemSetStringObject">
            <summary>Sets the shim of DynamicDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.KeysGet">
            <summary>Sets the shim of DynamicDictionary.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.RemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of DynamicDictionary.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.RemoveString">
            <summary>Sets the shim of DynamicDictionary.Remove(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of DynamicDictionary.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.TryGetValueStringObjectOut">
            <summary>Sets the shim of DynamicDictionary.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of DynamicDictionary.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.UnwrapObject">
            <summary>Sets the shim of DynamicDictionary.Unwrap(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.ValuesGet">
            <summary>Sets the shim of DynamicDictionary.get_Values()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.WrapObject">
            <summary>Sets the shim of DynamicDictionary.Wrap(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.AddKeyValuePairOfStringObject">
            <summary>Sets the shim of DynamicDictionary.Add(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.AddStringObject">
            <summary>Sets the shim of DynamicDictionary.Add(String key, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.Clear">
            <summary>Sets the shim of DynamicDictionary.Clear()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.ContainsKeyString">
            <summary>Sets the shim of DynamicDictionary.ContainsKey(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.ContainsKeyValuePairOfStringObject">
            <summary>Sets the shim of DynamicDictionary.Contains(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.CopyToKeyValuePairOfStringObjectArrayInt32">
            <summary>Sets the shim of DynamicDictionary.CopyTo(KeyValuePair`2&lt;String,Object&gt;[] array, Int32 arrayIndex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.CountGet">
            <summary>Sets the shim of DynamicDictionary.get_Count()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.GetEnumerator">
            <summary>Sets the shim of DynamicDictionary.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.IsReadOnlyGet">
            <summary>Sets the shim of DynamicDictionary.get_IsReadOnly()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.ItemGetString">
            <summary>Sets the shim of DynamicDictionary.get_Item(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of DynamicDictionary.set_Item(String key, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.KeysGet">
            <summary>Sets the shim of DynamicDictionary.get_Keys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.RemoveKeyValuePairOfStringObject">
            <summary>Sets the shim of DynamicDictionary.Remove(KeyValuePair`2&lt;String,Object&gt; item)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.RemoveString">
            <summary>Sets the shim of DynamicDictionary.Remove(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of DynamicDictionary.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of DynamicDictionary.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.TryGetValueStringObjectOut">
            <summary>Sets the shim of DynamicDictionary.TryGetValue(String key, Object&amp; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of DynamicDictionary.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimDynamicDictionary.AllInstances.ValuesGet">
            <summary>Sets the shim of DynamicDictionary.get_Values()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.Bind(Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.Constructor">
            <summary>Sets the shim of EmptyJavaScriptProxyGenerator.EmptyJavaScriptProxyGenerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.GenerateProxyString">
            <summary>Sets the shim of EmptyJavaScriptProxyGenerator.GenerateProxy(String serviceUrl)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEmptyJavaScriptProxyGenerator.AllInstances.GenerateProxyString">
            <summary>Sets the shim of EmptyJavaScriptProxyGenerator.GenerateProxy(String serviceUrl)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.#ctor(Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.Bind(Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.ConstructorIEnumerableOfAssembly">
            <summary>Sets the shim of EnumerableOfAssemblyLocator.EnumerableOfAssemblyLocator(IEnumerable`1&lt;Assembly&gt; assemblies)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.GetAssemblies">
            <summary>Sets the shim of EnumerableOfAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimEnumerableOfAssemblyLocator.AllInstances.GetAssemblies">
            <summary>Sets the shim of EnumerableOfAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ExceptionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.ExceptionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.ConstructorException">
            <summary>Sets the shim of ExceptionContext.ExceptionContext(Exception error)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.ErrorGet">
            <summary>Sets the shim of ExceptionContext.get_Error()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.ErrorSetException">
            <summary>Sets the shim of ExceptionContext.set_Error(Exception value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.ResultGet">
            <summary>Sets the shim of ExceptionContext.get_Result()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.ResultSetObject">
            <summary>Sets the shim of ExceptionContext.set_Result(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.AllInstances.ErrorGet">
            <summary>Sets the shim of ExceptionContext.get_Error()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.AllInstances.ErrorSetException">
            <summary>Sets the shim of ExceptionContext.set_Error(Exception value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.AllInstances.ResultGet">
            <summary>Sets the shim of ExceptionContext.get_Result()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimExceptionContext.AllInstances.ResultSetObject">
            <summary>Sets the shim of ExceptionContext.set_Result(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.GroupProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.GroupProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.ConstructorIConnectionIHubPipelineInvokerStringStringIListOfString">
            <summary>Sets the shim of GroupProxy.GroupProxy(IConnection connection, IHubPipelineInvoker invoker, String signal, String hubName, IList`1&lt;String&gt; exclude)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimGroupProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubCallerContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.#ctor(Microsoft.AspNet.SignalR.Hubs.HubCallerContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.ConnectionIdGet">
            <summary>Sets the shim of HubCallerContext.get_ConnectionId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.ConnectionIdSetString">
            <summary>Sets the shim of HubCallerContext.set_ConnectionId(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.ConstructorIRequestString">
            <summary>Sets the shim of HubCallerContext.HubCallerContext(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.HeadersGet">
            <summary>Sets the shim of HubCallerContext.get_Headers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.QueryStringGet">
            <summary>Sets the shim of HubCallerContext.get_QueryString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.RequestCookiesGet">
            <summary>Sets the shim of HubCallerContext.get_RequestCookies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.RequestGet">
            <summary>Sets the shim of HubCallerContext.get_Request()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.RequestSetIRequest">
            <summary>Sets the shim of HubCallerContext.set_Request(IRequest value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.UserGet">
            <summary>Sets the shim of HubCallerContext.get_User()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.ConnectionIdGet">
            <summary>Sets the shim of HubCallerContext.get_ConnectionId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.ConnectionIdSetString">
            <summary>Sets the shim of HubCallerContext.set_ConnectionId(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.HeadersGet">
            <summary>Sets the shim of HubCallerContext.get_Headers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.QueryStringGet">
            <summary>Sets the shim of HubCallerContext.get_QueryString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.RequestCookiesGet">
            <summary>Sets the shim of HubCallerContext.get_RequestCookies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.RequestGet">
            <summary>Sets the shim of HubCallerContext.get_Request()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.RequestSetIRequest">
            <summary>Sets the shim of HubCallerContext.set_Request(IRequest value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubCallerContext.AllInstances.UserGet">
            <summary>Sets the shim of HubCallerContext.get_User()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubConnectionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.HubConnectionContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.Bind(Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.Bind(Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.CallerGet">
            <summary>Sets the shim of HubConnectionContext.get_Caller()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.CallerSetObject">
            <summary>Sets the shim of HubConnectionContext.set_Caller(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.Constructor">
            <summary>Sets the shim of HubConnectionContext.HubConnectionContext()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.ConstructorIHubPipelineInvokerIConnectionStringStringStateChangeTracker">
            <summary>Sets the shim of HubConnectionContext.HubConnectionContext(IHubPipelineInvoker pipelineInvoker, IConnection connection, String hubName, String connectionId, StateChangeTracker tracker)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.OthersGet">
            <summary>Sets the shim of HubConnectionContext.get_Others()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.OthersInGroupString">
            <summary>Sets the shim of HubConnectionContext.OthersInGroup(String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.OthersInGroupsIListOfString">
            <summary>Sets the shim of HubConnectionContext.OthersInGroups(IList`1&lt;String&gt; groupNames)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.OthersSetObject">
            <summary>Sets the shim of HubConnectionContext.set_Others(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances.CallerGet">
            <summary>Sets the shim of HubConnectionContext.get_Caller()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances.CallerSetObject">
            <summary>Sets the shim of HubConnectionContext.set_Caller(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances.OthersGet">
            <summary>Sets the shim of HubConnectionContext.get_Others()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances.OthersInGroupString">
            <summary>Sets the shim of HubConnectionContext.OthersInGroup(String groupName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances.OthersInGroupsIListOfString">
            <summary>Sets the shim of HubConnectionContext.OthersInGroups(IList`1&lt;String&gt; groupNames)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContext.AllInstances.OthersSetObject">
            <summary>Sets the shim of HubConnectionContext.set_Others(Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.Bind(Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllExceptStringArray">
            <summary>Sets the shim of HubConnectionContextBase.AllExcept(String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllGet">
            <summary>Sets the shim of HubConnectionContextBase.get_All()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllSetObject">
            <summary>Sets the shim of HubConnectionContextBase.set_All(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.ClientString">
            <summary>Sets the shim of HubConnectionContextBase.Client(String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.ClientsIListOfString">
            <summary>Sets the shim of HubConnectionContextBase.Clients(IList`1&lt;String&gt; connectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.ConnectionGet">
            <summary>Sets the shim of HubConnectionContextBase.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.ConnectionSetIConnection">
            <summary>Sets the shim of HubConnectionContextBase.set_Connection(IConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.Constructor">
            <summary>Sets the shim of HubConnectionContextBase.HubConnectionContextBase()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.ConstructorIConnectionIHubPipelineInvokerString">
            <summary>Sets the shim of HubConnectionContextBase.HubConnectionContextBase(IConnection connection, IHubPipelineInvoker invoker, String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.GroupStringStringArray">
            <summary>Sets the shim of HubConnectionContextBase.Group(String groupName, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.GroupsIListOfStringStringArray">
            <summary>Sets the shim of HubConnectionContextBase.Groups(IList`1&lt;String&gt; groupNames, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.HubNameGet">
            <summary>Sets the shim of HubConnectionContextBase.get_HubName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.HubNameSetString">
            <summary>Sets the shim of HubConnectionContextBase.set_HubName(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.InvokerGet">
            <summary>Sets the shim of HubConnectionContextBase.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.InvokerSetIHubPipelineInvoker">
            <summary>Sets the shim of HubConnectionContextBase.set_Invoker(IHubPipelineInvoker value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.UserString">
            <summary>Sets the shim of HubConnectionContextBase.User(String userId)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.AllExceptStringArray">
            <summary>Sets the shim of HubConnectionContextBase.AllExcept(String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.AllGet">
            <summary>Sets the shim of HubConnectionContextBase.get_All()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.AllSetObject">
            <summary>Sets the shim of HubConnectionContextBase.set_All(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.ClientString">
            <summary>Sets the shim of HubConnectionContextBase.Client(String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.ClientsIListOfString">
            <summary>Sets the shim of HubConnectionContextBase.Clients(IList`1&lt;String&gt; connectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.ConnectionGet">
            <summary>Sets the shim of HubConnectionContextBase.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.ConnectionSetIConnection">
            <summary>Sets the shim of HubConnectionContextBase.set_Connection(IConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.GroupStringStringArray">
            <summary>Sets the shim of HubConnectionContextBase.Group(String groupName, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.GroupsIListOfStringStringArray">
            <summary>Sets the shim of HubConnectionContextBase.Groups(IList`1&lt;String&gt; groupNames, String[] excludeConnectionIds)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.HubNameGet">
            <summary>Sets the shim of HubConnectionContextBase.get_HubName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.HubNameSetString">
            <summary>Sets the shim of HubConnectionContextBase.set_HubName(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.InvokerGet">
            <summary>Sets the shim of HubConnectionContextBase.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.InvokerSetIHubPipelineInvoker">
            <summary>Sets the shim of HubConnectionContextBase.set_Invoker(IHubPipelineInvoker value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubConnectionContextBase.AllInstances.UserString">
            <summary>Sets the shim of HubConnectionContextBase.User(String userId)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.#ctor(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.Constructor">
            <summary>Sets the shim of HubDescriptor.HubDescriptor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.CreateQualifiedNameString">
            <summary>Sets the shim of HubDescriptor.CreateQualifiedName(String unqualifiedName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.HubTypeGet">
            <summary>Sets the shim of HubDescriptor.get_HubType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.HubTypeSetType">
            <summary>Sets the shim of HubDescriptor.set_HubType(Type value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.AllInstances.CreateQualifiedNameString">
            <summary>Sets the shim of HubDescriptor.CreateQualifiedName(String unqualifiedName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.AllInstances.HubTypeGet">
            <summary>Sets the shim of HubDescriptor.get_HubType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDescriptor.AllInstances.HubTypeSetType">
            <summary>Sets the shim of HubDescriptor.set_HubType(Type value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubDispatcher</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.#ctor(Microsoft.AspNet.SignalR.Hubs.HubDispatcher)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ContinueAsyncOf1TaskOfM0TaskCompletionSourceOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Threading.Tasks.Task{``0},System.Threading.Tasks.TaskCompletionSource{System.Object}})">
            <summary>Sets the shim of HubDispatcher.ContinueAsync(Task`1&lt;!!0&gt; task, TaskCompletionSource`1&lt;Object&gt; tcs)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ContinueSyncOf1TaskOfM0TaskCompletionSourceOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Threading.Tasks.Task{``0},System.Threading.Tasks.TaskCompletionSource{System.Object}})">
            <summary>Sets the shim of HubDispatcher.ContinueSync(Task`1&lt;!!0&gt; task, TaskCompletionSource`1&lt;Object&gt; tcs)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ContinueWithOf1TaskOfM0TaskCompletionSourceOfObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Threading.Tasks.Task{``0},System.Threading.Tasks.TaskCompletionSource{System.Object}})">
            <summary>Sets the shim of HubDispatcher.ContinueWith(Task`1&lt;!!0&gt; task, TaskCompletionSource`1&lt;Object&gt; tcs)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AuthorizeRequestIRequest">
            <summary>Sets the shim of HubDispatcher.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ConnectIHub">
            <summary>Sets the shim of HubDispatcher.Connect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ConstructorHubConfiguration">
            <summary>Sets the shim of HubDispatcher.HubDispatcher(HubConfiguration configuration)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.CreateHubIRequestHubDescriptorStringStateChangeTrackerBoolean">
            <summary>Sets the shim of HubDispatcher.CreateHub(IRequest request, HubDescriptor descriptor, String connectionId, StateChangeTracker tracker, Boolean throwIfFailedToCreate)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.DisconnectIHub">
            <summary>Sets the shim of HubDispatcher.Disconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.DisposeHubsIEnumerableOfIHub">
            <summary>Sets the shim of HubDispatcher.DisposeHubs(IEnumerable`1&lt;IHub&gt; hubs)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ExecuteHubEventIRequestStringFuncOfIHubTask">
            <summary>Sets the shim of HubDispatcher.ExecuteHubEvent(IRequest request, String connectionId, Func`2&lt;IHub,Task&gt; action)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.GetHubsIRequestString">
            <summary>Sets the shim of HubDispatcher.GetHubs(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.GetSignalsStringString">
            <summary>Sets the shim of HubDispatcher.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.GroupPrefixGet">
            <summary>Sets the shim of HubDispatcher.get_GroupPrefix()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.IncomingIHubIncomingInvokerContext">
            <summary>Sets the shim of HubDispatcher.Incoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.InitializeIDependencyResolver">
            <summary>Sets the shim of HubDispatcher.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.InvokeHubPipelineIHubIJsonValueArrayMethodDescriptorHubRequestStateChangeTracker">
            <summary>Sets the shim of HubDispatcher.InvokeHubPipeline(IHub hub, IJsonValue[] parameterValues, MethodDescriptor methodDescriptor, HubRequest hubRequest, StateChangeTracker tracker)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.OnConnectedIRequestString">
            <summary>Sets the shim of HubDispatcher.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.OnDisconnectedIRequestString">
            <summary>Sets the shim of HubDispatcher.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.OnReceivedIRequestStringString">
            <summary>Sets the shim of HubDispatcher.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.OnReconnectedIRequestString">
            <summary>Sets the shim of HubDispatcher.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.OnRejoiningGroupsIRequestIListOfStringString">
            <summary>Sets the shim of HubDispatcher.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.OutgoingIHubOutgoingInvokerContext">
            <summary>Sets the shim of HubDispatcher.Outgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ProcessRequestHostContext">
            <summary>Sets the shim of HubDispatcher.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ProcessResponseStateChangeTrackerObjectHubRequestException">
            <summary>Sets the shim of HubDispatcher.ProcessResponse(StateChangeTracker tracker, Object result, HubRequest request, Exception error)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.ReconnectIHub">
            <summary>Sets the shim of HubDispatcher.Reconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.StaticConstructor">
            <summary>Sets the shim of HubDispatcher.HubDispatcher()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.TraceGet">
            <summary>Sets the shim of HubDispatcher.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher._GetHubsb__2fIHub">
            <summary>Sets the shim of HubDispatcher.&lt;GetHubs&gt;b__2f(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher._OnConnectedb__15IHub">
            <summary>Sets the shim of HubDispatcher.&lt;OnConnected&gt;b__15(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher._OnDisconnectedb__21IHub">
            <summary>Sets the shim of HubDispatcher.&lt;OnDisconnected&gt;b__21(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher._OnReconnectedb__16IHub">
            <summary>Sets the shim of HubDispatcher.&lt;OnReconnected&gt;b__16(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher._OnRejoiningGroupsb__1bIEnumerableOfString">
            <summary>Sets the shim of HubDispatcher.&lt;OnRejoiningGroups&gt;b__1b(IEnumerable`1&lt;String&gt; groupsToRejoin)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.AuthorizeRequestIRequest">
            <summary>Sets the shim of HubDispatcher.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.CreateHubIRequestHubDescriptorStringStateChangeTrackerBoolean">
            <summary>Sets the shim of HubDispatcher.CreateHub(IRequest request, HubDescriptor descriptor, String connectionId, StateChangeTracker tracker, Boolean throwIfFailedToCreate)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.ExecuteHubEventIRequestStringFuncOfIHubTask">
            <summary>Sets the shim of HubDispatcher.ExecuteHubEvent(IRequest request, String connectionId, Func`2&lt;IHub,Task&gt; action)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.GetHubsIRequestString">
            <summary>Sets the shim of HubDispatcher.GetHubs(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.GetSignalsStringString">
            <summary>Sets the shim of HubDispatcher.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.GroupPrefixGet">
            <summary>Sets the shim of HubDispatcher.get_GroupPrefix()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.InitializeIDependencyResolver">
            <summary>Sets the shim of HubDispatcher.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.InvokeHubPipelineIHubIJsonValueArrayMethodDescriptorHubRequestStateChangeTracker">
            <summary>Sets the shim of HubDispatcher.InvokeHubPipeline(IHub hub, IJsonValue[] parameterValues, MethodDescriptor methodDescriptor, HubRequest hubRequest, StateChangeTracker tracker)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.OnConnectedIRequestString">
            <summary>Sets the shim of HubDispatcher.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.OnDisconnectedIRequestString">
            <summary>Sets the shim of HubDispatcher.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.OnReceivedIRequestStringString">
            <summary>Sets the shim of HubDispatcher.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.OnReconnectedIRequestString">
            <summary>Sets the shim of HubDispatcher.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.OnRejoiningGroupsIRequestIListOfStringString">
            <summary>Sets the shim of HubDispatcher.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.ProcessRequestHostContext">
            <summary>Sets the shim of HubDispatcher.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.ProcessResponseStateChangeTrackerObjectHubRequestException">
            <summary>Sets the shim of HubDispatcher.ProcessResponse(StateChangeTracker tracker, Object result, HubRequest request, Exception error)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances.TraceGet">
            <summary>Sets the shim of HubDispatcher.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances._OnConnectedb__15IHub">
            <summary>Sets the shim of HubDispatcher.&lt;OnConnected&gt;b__15(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances._OnDisconnectedb__21IHub">
            <summary>Sets the shim of HubDispatcher.&lt;OnDisconnected&gt;b__21(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubDispatcher.AllInstances._OnReconnectedb__16IHub">
            <summary>Sets the shim of HubDispatcher.&lt;OnReconnected&gt;b__16(IHub hub)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubManagerExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.EnsureHubIHubManagerStringIPerformanceCounterArray">
            <summary>Sets the shim of HubManagerExtensions.EnsureHub(IHubManager hubManager, String hubName, IPerformanceCounter[] counters)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.GetHubMethodsIHubManagerString">
            <summary>Sets the shim of HubManagerExtensions.GetHubMethods(IHubManager hubManager, String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions.GetHubsIHubManager">
            <summary>Sets the shim of HubManagerExtensions.GetHubs(IHubManager hubManager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions._GetHubMethodsb__2MethodDescriptor">
            <summary>Sets the shim of HubManagerExtensions.&lt;GetHubMethods&gt;b__2(MethodDescriptor m)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubManagerExtensions._GetHubsb__0HubDescriptor">
            <summary>Sets the shim of HubManagerExtensions.&lt;GetHubs&gt;b__0(HubDescriptor d)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.#ctor(Microsoft.AspNet.SignalR.Hubs.HubMethodNameAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.ConstructorString">
            <summary>Sets the shim of HubMethodNameAttribute.HubMethodNameAttribute(String methodName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.MethodNameGet">
            <summary>Sets the shim of HubMethodNameAttribute.get_MethodName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.MethodNameSetString">
            <summary>Sets the shim of HubMethodNameAttribute.set_MethodName(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.AllInstances.MethodNameGet">
            <summary>Sets the shim of HubMethodNameAttribute.get_MethodName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubMethodNameAttribute.AllInstances.MethodNameSetString">
            <summary>Sets the shim of HubMethodNameAttribute.set_MethodName(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubNameAttribute</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.#ctor(Microsoft.AspNet.SignalR.Hubs.HubNameAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.ConstructorString">
            <summary>Sets the shim of HubNameAttribute.HubNameAttribute(String hubName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.HubNameGet">
            <summary>Sets the shim of HubNameAttribute.get_HubName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.HubNameSetString">
            <summary>Sets the shim of HubNameAttribute.set_HubName(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.AllInstances.HubNameGet">
            <summary>Sets the shim of HubNameAttribute.get_HubName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubNameAttribute.AllInstances.HubNameSetString">
            <summary>Sets the shim of HubNameAttribute.set_HubName(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubPipelineModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.#ctor(Microsoft.AspNet.SignalR.Hubs.HubPipelineModule)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.Bind(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the shim of HubPipelineModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildConnectFuncOfIHubTask">
            <summary>Sets the shim of HubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildDisconnectFuncOfIHubTask">
            <summary>Sets the shim of HubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the shim of HubPipelineModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildOutgoingFuncOfIHubOutgoingInvokerContextTask">
            <summary>Sets the shim of HubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildReconnectFuncOfIHubTask">
            <summary>Sets the shim of HubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.BuildRejoiningGroupsFuncOfHubDescriptorIRequestIListOfStringIListOfString">
            <summary>Sets the shim of HubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.Constructor">
            <summary>Sets the shim of HubPipelineModule.HubPipelineModule()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnAfterConnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnAfterConnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnAfterDisconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnAfterDisconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnAfterIncomingObjectIHubIncomingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnAfterIncoming(Object result, IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnAfterOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnAfterOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnAfterReconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnAfterReconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnBeforeAuthorizeConnectHubDescriptorIRequest">
            <summary>Sets the shim of HubPipelineModule.OnBeforeAuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnBeforeConnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnBeforeConnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnBeforeDisconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnBeforeDisconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnBeforeIncomingIHubIncomingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnBeforeIncoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnBeforeOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnBeforeOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnBeforeReconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnBeforeReconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.OnIncomingErrorExceptionContextIHubIncomingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnIncomingError(ExceptionContext exceptionContext, IHubIncomingInvokerContext invokerContext)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the shim of HubPipelineModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildConnectFuncOfIHubTask">
            <summary>Sets the shim of HubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildDisconnectFuncOfIHubTask">
            <summary>Sets the shim of HubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the shim of HubPipelineModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildOutgoingFuncOfIHubOutgoingInvokerContextTask">
            <summary>Sets the shim of HubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildReconnectFuncOfIHubTask">
            <summary>Sets the shim of HubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.BuildRejoiningGroupsFuncOfHubDescriptorIRequestIListOfStringIListOfString">
            <summary>Sets the shim of HubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnAfterConnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnAfterConnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnAfterDisconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnAfterDisconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnAfterIncomingObjectIHubIncomingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnAfterIncoming(Object result, IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnAfterOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnAfterOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnAfterReconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnAfterReconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnBeforeAuthorizeConnectHubDescriptorIRequest">
            <summary>Sets the shim of HubPipelineModule.OnBeforeAuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnBeforeConnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnBeforeConnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnBeforeDisconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnBeforeDisconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnBeforeIncomingIHubIncomingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnBeforeIncoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnBeforeOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnBeforeOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnBeforeReconnectIHub">
            <summary>Sets the shim of HubPipelineModule.OnBeforeReconnect(IHub hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubPipelineModule.AllInstances.OnIncomingErrorExceptionContextIHubIncomingInvokerContext">
            <summary>Sets the shim of HubPipelineModule.OnIncomingError(ExceptionContext exceptionContext, IHubIncomingInvokerContext invokerContext)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubRequest</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.#ctor(Microsoft.AspNet.SignalR.Hubs.HubRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.Constructor">
            <summary>Sets the shim of HubRequest.HubRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.HubGet">
            <summary>Sets the shim of HubRequest.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.HubSetString">
            <summary>Sets the shim of HubRequest.set_Hub(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.IdGet">
            <summary>Sets the shim of HubRequest.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.IdSetString">
            <summary>Sets the shim of HubRequest.set_Id(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.MethodGet">
            <summary>Sets the shim of HubRequest.get_Method()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.MethodSetString">
            <summary>Sets the shim of HubRequest.set_Method(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.ParameterValuesGet">
            <summary>Sets the shim of HubRequest.get_ParameterValues()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.ParameterValuesSetIJsonValueArray">
            <summary>Sets the shim of HubRequest.set_ParameterValues(IJsonValue[] value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.StateGet">
            <summary>Sets the shim of HubRequest.get_State()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.StateSetIDictionaryOfStringObject">
            <summary>Sets the shim of HubRequest.set_State(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.HubGet">
            <summary>Sets the shim of HubRequest.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.HubSetString">
            <summary>Sets the shim of HubRequest.set_Hub(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.IdGet">
            <summary>Sets the shim of HubRequest.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.IdSetString">
            <summary>Sets the shim of HubRequest.set_Id(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.MethodGet">
            <summary>Sets the shim of HubRequest.get_Method()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.MethodSetString">
            <summary>Sets the shim of HubRequest.set_Method(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.ParameterValuesGet">
            <summary>Sets the shim of HubRequest.get_ParameterValues()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.ParameterValuesSetIJsonValueArray">
            <summary>Sets the shim of HubRequest.set_ParameterValues(IJsonValue[] value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.StateGet">
            <summary>Sets the shim of HubRequest.get_State()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubRequest.AllInstances.StateSetIDictionaryOfStringObject">
            <summary>Sets the shim of HubRequest.set_State(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.HubResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.#ctor(Microsoft.AspNet.SignalR.Hubs.HubResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.Constructor">
            <summary>Sets the shim of HubResponse.HubResponse()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.ErrorDataGet">
            <summary>Sets the shim of HubResponse.get_ErrorData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.ErrorDataSetObject">
            <summary>Sets the shim of HubResponse.set_ErrorData(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.ErrorGet">
            <summary>Sets the shim of HubResponse.get_Error()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.ErrorSetString">
            <summary>Sets the shim of HubResponse.set_Error(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.IdGet">
            <summary>Sets the shim of HubResponse.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.IdSetString">
            <summary>Sets the shim of HubResponse.set_Id(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.IsHubExceptionGet">
            <summary>Sets the shim of HubResponse.get_IsHubException()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.IsHubExceptionSetNullableOfBoolean">
            <summary>Sets the shim of HubResponse.set_IsHubException(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.ResultGet">
            <summary>Sets the shim of HubResponse.get_Result()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.ResultSetObject">
            <summary>Sets the shim of HubResponse.set_Result(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.StackTraceGet">
            <summary>Sets the shim of HubResponse.get_StackTrace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.StackTraceSetString">
            <summary>Sets the shim of HubResponse.set_StackTrace(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.StateGet">
            <summary>Sets the shim of HubResponse.get_State()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.StateSetIDictionaryOfStringObject">
            <summary>Sets the shim of HubResponse.set_State(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.ErrorDataGet">
            <summary>Sets the shim of HubResponse.get_ErrorData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.ErrorDataSetObject">
            <summary>Sets the shim of HubResponse.set_ErrorData(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.ErrorGet">
            <summary>Sets the shim of HubResponse.get_Error()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.ErrorSetString">
            <summary>Sets the shim of HubResponse.set_Error(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.IdGet">
            <summary>Sets the shim of HubResponse.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.IdSetString">
            <summary>Sets the shim of HubResponse.set_Id(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.IsHubExceptionGet">
            <summary>Sets the shim of HubResponse.get_IsHubException()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.IsHubExceptionSetNullableOfBoolean">
            <summary>Sets the shim of HubResponse.set_IsHubException(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.ResultGet">
            <summary>Sets the shim of HubResponse.get_Result()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.ResultSetObject">
            <summary>Sets the shim of HubResponse.set_Result(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.StackTraceGet">
            <summary>Sets the shim of HubResponse.get_StackTrace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.StackTraceSetString">
            <summary>Sets the shim of HubResponse.set_StackTrace(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.StateGet">
            <summary>Sets the shim of HubResponse.get_State()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimHubResponse.AllInstances.StateSetIDictionaryOfStringObject">
            <summary>Sets the shim of HubResponse.set_State(IDictionary`2&lt;String,Object&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.MethodDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.#ctor(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AttributesGet">
            <summary>Sets the shim of MethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AttributesSetIEnumerableOfAttribute">
            <summary>Sets the shim of MethodDescriptor.set_Attributes(IEnumerable`1&lt;Attribute&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.Constructor">
            <summary>Sets the shim of MethodDescriptor.MethodDescriptor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.HubGet">
            <summary>Sets the shim of MethodDescriptor.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.HubSetHubDescriptor">
            <summary>Sets the shim of MethodDescriptor.set_Hub(HubDescriptor value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.InvokerGet">
            <summary>Sets the shim of MethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.InvokerSetFuncOfIHubObjectArrayObject">
            <summary>Sets the shim of MethodDescriptor.set_Invoker(Func`3&lt;IHub,Object[],Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.ParametersGet">
            <summary>Sets the shim of MethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.ParametersSetIListOfParameterDescriptor">
            <summary>Sets the shim of MethodDescriptor.set_Parameters(IList`1&lt;ParameterDescriptor&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.ReturnTypeGet">
            <summary>Sets the shim of MethodDescriptor.get_ReturnType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.ReturnTypeSetType">
            <summary>Sets the shim of MethodDescriptor.set_ReturnType(Type value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.AttributesGet">
            <summary>Sets the shim of MethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.AttributesSetIEnumerableOfAttribute">
            <summary>Sets the shim of MethodDescriptor.set_Attributes(IEnumerable`1&lt;Attribute&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.HubGet">
            <summary>Sets the shim of MethodDescriptor.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.HubSetHubDescriptor">
            <summary>Sets the shim of MethodDescriptor.set_Hub(HubDescriptor value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.InvokerGet">
            <summary>Sets the shim of MethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.InvokerSetFuncOfIHubObjectArrayObject">
            <summary>Sets the shim of MethodDescriptor.set_Invoker(Func`3&lt;IHub,Object[],Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.ParametersGet">
            <summary>Sets the shim of MethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.ParametersSetIListOfParameterDescriptor">
            <summary>Sets the shim of MethodDescriptor.set_Parameters(IList`1&lt;ParameterDescriptor&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.ReturnTypeGet">
            <summary>Sets the shim of MethodDescriptor.get_ReturnType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodDescriptor.AllInstances.ReturnTypeSetType">
            <summary>Sets the shim of MethodDescriptor.set_ReturnType(Type value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.MethodExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMethodExtensions.MatchesMethodDescriptorIListOfIJsonValue">
            <summary>Sets the shim of MethodExtensions.Matches(MethodDescriptor methodDescriptor, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.ConstructorIConnectionIHubPipelineInvokerIListOfStringStringStringIListOfString">
            <summary>Sets the shim of MultipleSignalProxy.MultipleSignalProxy(IConnection connection, IHubPipelineInvoker invoker, IList`1&lt;String&gt; signals, String hubName, String prefix, IList`1&lt;String&gt; exclude)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the shim of MultipleSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.InvokeStringObjectArray">
            <summary>Sets the shim of MultipleSignalProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of MultipleSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of MultipleSignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.AllInstances.GetInvocationDataStringObjectArray">
            <summary>Sets the shim of MultipleSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.AllInstances.InvokeStringObjectArray">
            <summary>Sets the shim of MultipleSignalProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of MultipleSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimMultipleSignalProxy.AllInstances.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of MultipleSignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.#ctor(Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.Constructor">
            <summary>Sets the shim of NotAuthorizedException.NotAuthorizedException()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of NotAuthorizedException.NotAuthorizedException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.ConstructorString">
            <summary>Sets the shim of NotAuthorizedException.NotAuthorizedException(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.ConstructorStringException">
            <summary>Sets the shim of NotAuthorizedException.NotAuthorizedException(String message, Exception inner)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNotAuthorizedException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.#ctor(Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.Bind(Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.Constructor">
            <summary>Sets the shim of NullJavaScriptMinifier.NullJavaScriptMinifier()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.MinifyString">
            <summary>Sets the shim of NullJavaScriptMinifier.Minify(String source)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.StaticConstructor">
            <summary>Sets the shim of NullJavaScriptMinifier.NullJavaScriptMinifier()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullJavaScriptMinifier.AllInstances.MinifyString">
            <summary>Sets the shim of NullJavaScriptMinifier.Minify(String source)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.#ctor(Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.AttributesGet">
            <summary>Sets the shim of NullMethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.ConstructorHubDescriptorString">
            <summary>Sets the shim of NullMethodDescriptor.NullMethodDescriptor(HubDescriptor descriptor, String methodName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.InvokerGet">
            <summary>Sets the shim of NullMethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.ParametersGet">
            <summary>Sets the shim of NullMethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.StaticConstructor">
            <summary>Sets the shim of NullMethodDescriptor.NullMethodDescriptor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor._get_Invokerb__0IHubObjectArray">
            <summary>Sets the shim of NullMethodDescriptor.&lt;get_Invoker&gt;b__0(IHub emptyHub, Object[] emptyParameters)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.AllInstances.AttributesGet">
            <summary>Sets the shim of NullMethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.AllInstances.InvokerGet">
            <summary>Sets the shim of NullMethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.AllInstances.ParametersGet">
            <summary>Sets the shim of NullMethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimNullMethodDescriptor.AllInstances._get_Invokerb__0IHubObjectArray">
            <summary>Sets the shim of NullMethodDescriptor.&lt;get_Invoker&gt;b__0(IHub emptyHub, Object[] emptyParameters)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.#ctor(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.Constructor">
            <summary>Sets the shim of ParameterDescriptor.ParameterDescriptor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.NameGet">
            <summary>Sets the shim of ParameterDescriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.NameSetString">
            <summary>Sets the shim of ParameterDescriptor.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.ParameterTypeGet">
            <summary>Sets the shim of ParameterDescriptor.get_ParameterType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.ParameterTypeSetType">
            <summary>Sets the shim of ParameterDescriptor.set_ParameterType(Type value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.AllInstances.NameGet">
            <summary>Sets the shim of ParameterDescriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.AllInstances.NameSetString">
            <summary>Sets the shim of ParameterDescriptor.set_Name(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.AllInstances.ParameterTypeGet">
            <summary>Sets the shim of ParameterDescriptor.get_ParameterType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimParameterDescriptor.AllInstances.ParameterTypeSetType">
            <summary>Sets the shim of ParameterDescriptor.set_ParameterType(Type value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.Bind(Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.BuildHubsCache">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.BuildHubsCache()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.ConstructorIDependencyResolver">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.ReflectedHubDescriptorProvider(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.GetHubs">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.GetHubs()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.GetTypesSafeAssembly">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.GetTypesSafe(Assembly a)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.IsHubTypeType">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.IsHubType(Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.TryGetHubStringHubDescriptorOut">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.TryGetHub(String hubName, HubDescriptor&amp; descriptor)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider._BuildHubsCacheb__3Type">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.&lt;BuildHubsCache&gt;b__3(Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider._GetHubsb__0KeyValuePairOfStringHubDescriptor">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.&lt;GetHubs&gt;b__0(KeyValuePair`2&lt;String,HubDescriptor&gt; kv)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider._GetTypesSafeb__5Type">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.&lt;GetTypesSafe&gt;b__5(Type t)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.AllInstances.BuildHubsCache">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.BuildHubsCache()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.AllInstances.GetHubs">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.GetHubs()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.AllInstances.GetTypesSafeAssembly">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.GetTypesSafe(Assembly a)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedHubDescriptorProvider.AllInstances.TryGetHubStringHubDescriptorOut">
            <summary>Sets the shim of ReflectedHubDescriptorProvider.TryGetHub(String hubName, HubDescriptor&amp; descriptor)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.Bind(Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.BuildHubExecutableMethodCacheKeyHubDescriptorStringIListOfIJsonValue">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.BuildHubExecutableMethodCacheKey(HubDescriptor hub, String method, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.BuildMethodCacheForHubDescriptor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.BuildMethodCacheFor(HubDescriptor hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.Constructor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.ReflectedMethodDescriptorProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.FetchMethodsForHubDescriptor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.FetchMethodsFor(HubDescriptor hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.GetMethodAttributeNameMethodInfo">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.GetMethodAttributeName(MethodInfo method)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.GetMethodNameMethodInfo">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.GetMethodName(MethodInfo method)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.GetMethodsHubDescriptor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.GetMethods(HubDescriptor hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider._BuildMethodCacheForb__7IGroupingOfStringMethodInfo">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.&lt;BuildMethodCacheFor&gt;b__7(IGrouping`2&lt;String,MethodInfo&gt; group)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider._GetMethodAttributeNameb__15HubMethodNameAttribute">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.&lt;GetMethodAttributeName&gt;b__15(HubMethodNameAttribute a)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider._GetMethodsb__0KeyValuePairOfStringIEnumerableOfMethodDescriptor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.&lt;GetMethods&gt;b__0(KeyValuePair`2&lt;String,IEnumerable`1&lt;MethodDescriptor&gt;&gt; kv)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.AllInstances.FetchMethodsForHubDescriptor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.FetchMethodsFor(HubDescriptor hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.AllInstances.GetMethodsHubDescriptor">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.GetMethods(HubDescriptor hub)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectedMethodDescriptorProvider.AllInstances.TryGetMethodHubDescriptorStringMethodDescriptorOutIListOfIJsonValue">
            <summary>Sets the shim of ReflectedMethodDescriptorProvider.TryGetMethod(HubDescriptor hub, String method, MethodDescriptor&amp; descriptor, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.ReflectionHelper</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.GetAttributeValueOf2ICustomAttributeProviderFuncOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Reflection.ICustomAttributeProvider,System.Func{``0,``1},``1})">
            <summary>Sets the shim of ReflectionHelper.GetAttributeValue(ICustomAttributeProvider source, Func`2&lt;!!0,!!1&gt; valueGetter)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.GetExportedHubMethodsType">
            <summary>Sets the shim of ReflectionHelper.GetExportedHubMethods(Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.GetInterfaceMethodsTypeType">
            <summary>Sets the shim of ReflectionHelper.GetInterfaceMethods(Type type, Type iface)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.IsValidHubMethodMethodInfo">
            <summary>Sets the shim of ReflectionHelper.IsValidHubMethod(MethodInfo methodInfo)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimReflectionHelper.StaticConstructor">
            <summary>Sets the shim of ReflectionHelper.ReflectionHelper()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.SignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.SignalProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.ConnectionGet">
            <summary>Sets the shim of SignalProxy.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.ConnectionSetIConnection">
            <summary>Sets the shim of SignalProxy.set_Connection(IConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.ConstructorIConnectionIHubPipelineInvokerStringStringStringIListOfString">
            <summary>Sets the shim of SignalProxy.SignalProxy(IConnection connection, IHubPipelineInvoker invoker, String signal, String hubName, String prefix, IList`1&lt;String&gt; exclude)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the shim of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.HubNameGet">
            <summary>Sets the shim of SignalProxy.get_HubName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.HubNameSetString">
            <summary>Sets the shim of SignalProxy.set_HubName(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.InvokeStringObjectArray">
            <summary>Sets the shim of SignalProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.InvokerGet">
            <summary>Sets the shim of SignalProxy.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.InvokerSetIHubPipelineInvoker">
            <summary>Sets the shim of SignalProxy.set_Invoker(IHubPipelineInvoker value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.SignalGet">
            <summary>Sets the shim of SignalProxy.get_Signal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.SignalSetString">
            <summary>Sets the shim of SignalProxy.set_Signal(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.ConnectionGet">
            <summary>Sets the shim of SignalProxy.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.ConnectionSetIConnection">
            <summary>Sets the shim of SignalProxy.set_Connection(IConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.GetInvocationDataStringObjectArray">
            <summary>Sets the shim of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.HubNameGet">
            <summary>Sets the shim of SignalProxy.get_HubName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.HubNameSetString">
            <summary>Sets the shim of SignalProxy.set_HubName(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.InvokeStringObjectArray">
            <summary>Sets the shim of SignalProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.InvokerGet">
            <summary>Sets the shim of SignalProxy.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.InvokerSetIHubPipelineInvoker">
            <summary>Sets the shim of SignalProxy.set_Invoker(IHubPipelineInvoker value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.SignalGet">
            <summary>Sets the shim of SignalProxy.get_Signal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.SignalSetString">
            <summary>Sets the shim of SignalProxy.set_Signal(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimSignalProxy.AllInstances.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the shim of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.StateChangeTracker</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.#ctor(Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.Constructor">
            <summary>Sets the shim of StateChangeTracker.StateChangeTracker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of StateChangeTracker.StateChangeTracker(IDictionary`2&lt;String,Object&gt; values)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.GetChanges">
            <summary>Sets the shim of StateChangeTracker.GetChanges()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.ItemGetString">
            <summary>Sets the shim of StateChangeTracker.get_Item(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.ItemSetStringObject">
            <summary>Sets the shim of StateChangeTracker.set_Item(String key, Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.AllInstances.GetChanges">
            <summary>Sets the shim of StateChangeTracker.GetChanges()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.AllInstances.ItemGetString">
            <summary>Sets the shim of StateChangeTracker.get_Item(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStateChangeTracker.AllInstances.ItemSetStringObject">
            <summary>Sets the shim of StateChangeTracker.set_Item(String key, Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.ConstructorIConnectionIHubPipelineInvokerStringStringStringStateChangeTracker">
            <summary>Sets the shim of StatefulSignalProxy.StatefulSignalProxy(IConnection connection, IHubPipelineInvoker invoker, String signal, String hubName, String prefix, StateChangeTracker tracker)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the shim of StatefulSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of StatefulSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of StatefulSignalProxy.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.AllInstances.GetInvocationDataStringObjectArray">
            <summary>Sets the shim of StatefulSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.AllInstances.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the shim of StatefulSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimStatefulSignalProxy.AllInstances.TrySetMemberSetMemberBinderObject">
            <summary>Sets the shim of StatefulSignalProxy.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy">
            <summary>Shim type of Microsoft.AspNet.SignalR.Hubs.UserProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.#ctor(Microsoft.AspNet.SignalR.Hubs.UserProxy)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.Bind(Microsoft.AspNet.SignalR.Hubs.IClientProxy)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.Bind(System.Dynamic.IDynamicMetaObjectProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.ConstructorIConnectionIHubPipelineInvokerStringString">
            <summary>Sets the shim of UserProxy.UserProxy(IConnection connection, IHubPipelineInvoker invoker, String signal, String hubName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.ShimUserProxy.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.AuthorizeModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.#ctor(Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection,Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
            <summary>Sets the stub of AuthorizeModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the stub of AuthorizeModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildConnectFuncOfIHubTask">
            <summary>Sets the stub of HubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildDisconnectFuncOfIHubTask">
            <summary>Sets the stub of HubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
            <summary>Sets the stub of AuthorizeModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the stub of AuthorizeModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildOutgoingFuncOfIHubOutgoingInvokerContextTask">
            <summary>Sets the stub of HubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildReconnectFuncOfIHubTask">
            <summary>Sets the stub of HubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
            <summary>Sets the stub of HubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.BuildRejoiningGroupsFuncOfHubDescriptorIRequestIListOfStringIListOfString">
            <summary>Sets the stub of HubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizeModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnAfterConnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterConnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnAfterConnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnAfterDisconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterDisconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnAfterDisconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnAfterIncoming(Object result, IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterIncomingObjectIHubIncomingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnAfterIncoming(Object result, IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnAfterOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnAfterOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnAfterReconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnAfterReconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnAfterReconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeAuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeAuthorizeConnectHubDescriptorIRequest">
            <summary>Sets the stub of HubPipelineModule.OnBeforeAuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeConnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeConnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnBeforeConnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeDisconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeDisconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnBeforeDisconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeIncoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeIncomingIHubIncomingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnBeforeIncoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnBeforeOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeReconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnBeforeReconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnBeforeReconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnIncomingError(ExceptionContext exceptionContext, IHubIncomingInvokerContext invokerContext)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.OnIncomingErrorExceptionContextIHubIncomingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnIncomingError(ExceptionContext exceptionContext, IHubIncomingInvokerContext invokerContext)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubAuthorizeModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientHubInvocation">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ClientHubInvocation</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientHubInvocation.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientHubInvocation.InitializeStub">
            <summary>Initializes a new instance of type StubClientHubInvocation</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientHubInvocation.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientHubInvocation.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientHubInvocation.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ClientProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.InitializeStub">
            <summary>Initializes a new instance of type StubClientProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of ClientProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of ClientProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubClientProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ConnectionIdProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.GetInvocationData(System.String,System.Object[])">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionIdProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubConnectionIdProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.DefaultAssemblyLocator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.GetAssemblies">
            <summary>Sets the stub of DefaultAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.GetAssemblies01">
            <summary>Sets the stub of DefaultAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultAssemblyLocator</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultAssemblyLocator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubActivator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.DefaultHubActivator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubActivator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubActivator.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultHubActivator</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubActivator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubActivator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubActivator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.DefaultHubManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubManager.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultHubManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultHubManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.DefaultJavaScriptProxyGenerator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubManager,Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultJavaScriptProxyGenerator</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultJavaScriptProxyGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.DefaultParameterResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultParameterResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
            <summary>Sets the stub of DefaultParameterResolver.ResolveMethodParameters(MethodDescriptor method, IList`1&lt;IJsonValue&gt; values)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.ResolveMethodParametersMethodDescriptorIListOfIJsonValue">
            <summary>Sets the stub of DefaultParameterResolver.ResolveMethodParameters(MethodDescriptor method, IList`1&lt;IJsonValue&gt; values)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.ResolveParameter(Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor,Microsoft.AspNet.SignalR.Json.IJsonValue)">
            <summary>Sets the stub of DefaultParameterResolver.ResolveParameter(ParameterDescriptor descriptor, IJsonValue value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.ResolveParameterParameterDescriptorIJsonValue">
            <summary>Sets the stub of DefaultParameterResolver.ResolveParameter(ParameterDescriptor descriptor, IJsonValue value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDefaultParameterResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.Descriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubDescriptor.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.AttachBackingFieldToNameSpecified">
            <summary>Attaches delegates to emulate StubDescriptor.NameSpecified as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubDescriptor</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.NameGet">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.NameSetString">
            <summary>Sets the stub of Descriptor.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.NameSpecifiedGet">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.NameSpecifiedSetBoolean">
            <summary>Sets the stub of Descriptor.set_NameSpecified(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.Name">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDescriptor.NameSpecified">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.DynamicDictionary</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.InitializeStub">
            <summary>Initializes a new instance of type StubDynamicDictionary</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of DynamicDictionary.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of DynamicDictionary.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicDictionary.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicDictionary.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubDynamicDictionary.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEmptyJavaScriptProxyGenerator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.EmptyJavaScriptProxyGenerator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEmptyJavaScriptProxyGenerator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEmptyJavaScriptProxyGenerator.InitializeStub">
            <summary>Initializes a new instance of type StubEmptyJavaScriptProxyGenerator</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEmptyJavaScriptProxyGenerator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEmptyJavaScriptProxyGenerator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEmptyJavaScriptProxyGenerator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEnumerableOfAssemblyLocator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.EnumerableOfAssemblyLocator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEnumerableOfAssemblyLocator.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEnumerableOfAssemblyLocator.InitializeStub">
            <summary>Initializes a new instance of type StubEnumerableOfAssemblyLocator</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEnumerableOfAssemblyLocator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEnumerableOfAssemblyLocator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubEnumerableOfAssemblyLocator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubExceptionContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ExceptionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubExceptionContext.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubExceptionContext.InitializeStub">
            <summary>Initializes a new instance of type StubExceptionContext</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubExceptionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubExceptionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubExceptionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.GroupProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.GetInvocationData(System.String,System.Object[])">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.InitializeStub">
            <summary>Initializes a new instance of type StubGroupProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubGroupProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubCallerContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubCallerContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubCallerContext.#ctor(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubCallerContext.InitializeStub">
            <summary>Initializes a new instance of type StubHubCallerContext</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubCallerContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubCallerContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubCallerContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubConnectionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext.#ctor(Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,Microsoft.AspNet.SignalR.IConnection,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext.InitializeStub">
            <summary>Initializes a new instance of type StubHubConnectionContext</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContext.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubConnectionContextBase</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase.InitializeStub">
            <summary>Initializes a new instance of type StubHubConnectionContextBase</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubConnectionContextBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.AttachBackingFieldToHubType">
            <summary>Attaches delegates to emulate StubHubDescriptor.HubType as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubHubDescriptor.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.AttachBackingFieldToNameSpecified">
            <summary>Attaches delegates to emulate StubHubDescriptor.NameSpecified as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.HubTypeGet">
            <summary>Sets the stub of HubDescriptor.get_HubType()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.HubTypeSetType">
            <summary>Sets the stub of HubDescriptor.set_HubType(Type value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubHubDescriptor</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.NameGet">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.NameSetString">
            <summary>Sets the stub of Descriptor.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.NameSpecifiedGet">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.NameSpecifiedSetBoolean">
            <summary>Sets the stub of Descriptor.set_NameSpecified(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.HubType">
            <summary>Sets the stub of HubDescriptor.get_HubType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.Name">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDescriptor.NameSpecified">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubDispatcher</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.#ctor(Microsoft.AspNet.SignalR.HubConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.AuthorizeRequest(Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of HubDispatcher.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.AuthorizeRequestIRequest">
            <summary>Sets the stub of HubDispatcher.AuthorizeRequest(IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.GetSignals(System.String,System.String)">
            <summary>Sets the stub of HubDispatcher.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.GetSignalsStringString">
            <summary>Sets the stub of HubDispatcher.GetSignals(String userId, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.Initialize(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Sets the stub of HubDispatcher.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.InitializeIDependencyResolver">
            <summary>Sets the stub of HubDispatcher.Initialize(IDependencyResolver resolver)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.InitializeStub">
            <summary>Initializes a new instance of type StubHubDispatcher</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnConnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Sets the stub of HubDispatcher.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnConnectedIRequestString">
            <summary>Sets the stub of HubDispatcher.OnConnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnDisconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Sets the stub of HubDispatcher.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnDisconnectedIRequestString">
            <summary>Sets the stub of HubDispatcher.OnDisconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnReceived(Microsoft.AspNet.SignalR.IRequest,System.String,System.String)">
            <summary>Sets the stub of HubDispatcher.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnReceivedIRequestStringString">
            <summary>Sets the stub of HubDispatcher.OnReceived(IRequest request, String connectionId, String data)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnReconnected(Microsoft.AspNet.SignalR.IRequest,System.String)">
            <summary>Sets the stub of HubDispatcher.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnReconnectedIRequestString">
            <summary>Sets the stub of HubDispatcher.OnReconnected(IRequest request, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnRejoiningGroups(Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.String)">
            <summary>Sets the stub of HubDispatcher.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.OnRejoiningGroupsIRequestIListOfStringString">
            <summary>Sets the stub of HubDispatcher.OnRejoiningGroups(IRequest request, IList`1&lt;String&gt; groups, String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.ProcessRequest(Microsoft.AspNet.SignalR.Hosting.HostContext)">
            <summary>Sets the stub of HubDispatcher.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.ProcessRequestHostContext">
            <summary>Sets the stub of HubDispatcher.ProcessRequest(HostContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.TraceGet">
            <summary>Sets the stub of HubDispatcher.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubDispatcher.Trace">
            <summary>Sets the stub of HubDispatcher.get_Trace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubPipelineModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
            <summary>Sets the stub of HubPipelineModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the stub of HubPipelineModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildConnectFuncOfIHubTask">
            <summary>Sets the stub of HubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildDisconnectFuncOfIHubTask">
            <summary>Sets the stub of HubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
            <summary>Sets the stub of HubPipelineModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the stub of HubPipelineModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildOutgoingFuncOfIHubOutgoingInvokerContextTask">
            <summary>Sets the stub of HubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of HubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildReconnectFuncOfIHubTask">
            <summary>Sets the stub of HubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
            <summary>Sets the stub of HubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.BuildRejoiningGroupsFuncOfHubDescriptorIRequestIListOfStringIListOfString">
            <summary>Sets the stub of HubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.InitializeStub">
            <summary>Initializes a new instance of type StubHubPipelineModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnAfterConnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterConnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnAfterConnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnAfterDisconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterDisconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnAfterDisconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterIncoming(System.Object,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnAfterIncoming(Object result, IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterIncomingObjectIHubIncomingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnAfterIncoming(Object result, IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnAfterOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnAfterOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnAfterReconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnAfterReconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnAfterReconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeAuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeAuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeAuthorizeConnectHubDescriptorIRequest">
            <summary>Sets the stub of HubPipelineModule.OnBeforeAuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeConnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeConnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeConnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnBeforeConnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeDisconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeDisconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeDisconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnBeforeDisconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeIncoming(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeIncoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeIncomingIHubIncomingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnBeforeIncoming(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeOutgoing(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeOutgoingIHubOutgoingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnBeforeOutgoing(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeReconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of HubPipelineModule.OnBeforeReconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnBeforeReconnectIHub">
            <summary>Sets the stub of HubPipelineModule.OnBeforeReconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnIncomingError(Microsoft.AspNet.SignalR.Hubs.ExceptionContext,Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of HubPipelineModule.OnIncomingError(ExceptionContext exceptionContext, IHubIncomingInvokerContext invokerContext)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.OnIncomingErrorExceptionContextIHubIncomingInvokerContext">
            <summary>Sets the stub of HubPipelineModule.OnIncomingError(ExceptionContext exceptionContext, IHubIncomingInvokerContext invokerContext)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubPipelineModule.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubRequest">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubRequest</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubRequest.InitializeStub">
            <summary>Initializes a new instance of type StubHubRequest</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubResponse">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.HubResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubResponse.InitializeStub">
            <summary>Initializes a new instance of type StubHubResponse</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubHubResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAssemblyLocator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IAssemblyLocator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAssemblyLocator.#ctor">
            <summary>Initializes a new instance of type StubIAssemblyLocator</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAssemblyLocator.GetAssemblies">
            <summary>Sets the stub of IAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAssemblyLocator.mansrc::Microsoft#AspNet#SignalR#Hubs#IAssemblyLocator#GetAssemblies">
            <summary>Sets the stub of IAssemblyLocator.GetAssemblies()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubConnection">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubConnection.#ctor">
            <summary>Initializes a new instance of type StubIAuthorizeHubConnection</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubConnection.AuthorizeHubConnectionHubDescriptorIRequest">
            <summary>Sets the stub of IAuthorizeHubConnection.AuthorizeHubConnection(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubConnection.mansrc::Microsoft#AspNet#SignalR#Hubs#IAuthorizeHubConnection#AuthorizeHubConnection(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of IAuthorizeHubConnection.AuthorizeHubConnection(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubMethodInvocation">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IAuthorizeHubMethodInvocation</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubMethodInvocation.#ctor">
            <summary>Initializes a new instance of type StubIAuthorizeHubMethodInvocation</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocationIHubIncomingInvokerContextBoolean">
            <summary>Sets the stub of IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(IHubIncomingInvokerContext hubIncomingInvokerContext, Boolean appliesToMethod)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIAuthorizeHubMethodInvocation.mansrc::Microsoft#AspNet#SignalR#Hubs#IAuthorizeHubMethodInvocation#AuthorizeHubMethodInvocation(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Boolean)">
            <summary>Sets the stub of IAuthorizeHubMethodInvocation.AuthorizeHubMethodInvocation(IHubIncomingInvokerContext hubIncomingInvokerContext, Boolean appliesToMethod)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIClientProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IClientProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIClientProxy.#ctor">
            <summary>Initializes a new instance of type StubIClientProxy</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIClientProxy.InvokeStringObjectArray">
            <summary>Sets the stub of IClientProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIClientProxy.mansrc::Microsoft#AspNet#SignalR#Hubs#IClientProxy#Invoke(System.String,System.Object[])">
            <summary>Sets the stub of IClientProxy.Invoke(String method, Object[] args)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHub</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.#ctor">
            <summary>Initializes a new instance of type StubIHub</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.AttachBackingFieldToClients">
            <summary>Attaches delegates to emulate StubIHub.Clients as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.AttachBackingFieldToContext">
            <summary>Attaches delegates to emulate StubIHub.Context as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.AttachBackingFieldToGroups">
            <summary>Attaches delegates to emulate StubIHub.Groups as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.ClientsGet">
            <summary>Sets the stub of IHub.get_Clients()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.ClientsSetIHubCallerConnectionContext">
            <summary>Sets the stub of IHub.set_Clients(IHubCallerConnectionContext value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.ContextGet">
            <summary>Sets the stub of IHub.get_Context()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.ContextSetHubCallerContext">
            <summary>Sets the stub of IHub.set_Context(HubCallerContext value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.GroupsGet">
            <summary>Sets the stub of IHub.get_Groups()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.GroupsSetIGroupManager">
            <summary>Sets the stub of IHub.set_Groups(IGroupManager value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.mansrc::Microsoft#AspNet#SignalR#Hubs#IHub#OnConnected">
            <summary>Sets the stub of IHub.OnConnected()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.mansrc::Microsoft#AspNet#SignalR#Hubs#IHub#OnDisconnected">
            <summary>Sets the stub of IHub.OnDisconnected()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.mansrc::Microsoft#AspNet#SignalR#Hubs#IHub#OnReconnected">
            <summary>Sets the stub of IHub.OnReconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.OnConnected">
            <summary>Sets the stub of IHub.OnConnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.OnDisconnected">
            <summary>Sets the stub of IHub.OnDisconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.OnReconnected">
            <summary>Sets the stub of IHub.OnReconnected()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.mansrc::Microsoft#AspNet#SignalR#Hubs#IHub#Clients">
            <summary>Sets the stub of IHub.get_Clients()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.mansrc::Microsoft#AspNet#SignalR#Hubs#IHub#Context">
            <summary>Sets the stub of IHub.get_Context()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHub.mansrc::Microsoft#AspNet#SignalR#Hubs#IHub#Groups">
            <summary>Sets the stub of IHub.get_Groups()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubActivator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubActivator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubActivator.#ctor">
            <summary>Initializes a new instance of type StubIHubActivator</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubActivator.CreateHubDescriptor">
            <summary>Sets the stub of IHubActivator.Create(HubDescriptor descriptor)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubActivator.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubActivator#Create(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
            <summary>Sets the stub of IHubActivator.Create(HubDescriptor descriptor)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubCallerConnectionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.#ctor">
            <summary>Initializes a new instance of type StubIHubCallerConnectionContext</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.AllExceptStringArray">
            <summary>Sets the stub of IHubConnectionContext.AllExcept(String[] excludeConnectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.AllGet">
            <summary>Sets the stub of IHubConnectionContext.get_All()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.CallerGet">
            <summary>Sets the stub of IHubCallerConnectionContext.get_Caller()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.ClientString">
            <summary>Sets the stub of IHubConnectionContext.Client(String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.ClientsIListOfString">
            <summary>Sets the stub of IHubConnectionContext.Clients(IList`1&lt;String&gt; connectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.GroupStringStringArray">
            <summary>Sets the stub of IHubConnectionContext.Group(String groupName, String[] excludeConnectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.GroupsIListOfStringStringArray">
            <summary>Sets the stub of IHubConnectionContext.Groups(IList`1&lt;String&gt; groupNames, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubCallerConnectionContext#OthersInGroup(System.String)">
            <summary>Sets the stub of IHubCallerConnectionContext.OthersInGroup(String groupName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubCallerConnectionContext#OthersInGroups(System.Collections.Generic.IList{System.String})">
            <summary>Sets the stub of IHubCallerConnectionContext.OthersInGroups(IList`1&lt;String&gt; groupNames)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#AllExcept(System.String[])">
            <summary>Sets the stub of IHubConnectionContext.AllExcept(String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Client(System.String)">
            <summary>Sets the stub of IHubConnectionContext.Client(String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Clients(System.Collections.Generic.IList{System.String})">
            <summary>Sets the stub of IHubConnectionContext.Clients(IList`1&lt;String&gt; connectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Group(System.String,System.String[])">
            <summary>Sets the stub of IHubConnectionContext.Group(String groupName, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Groups(System.Collections.Generic.IList{System.String},System.String[])">
            <summary>Sets the stub of IHubConnectionContext.Groups(IList`1&lt;String&gt; groupNames, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#User(System.String)">
            <summary>Sets the stub of IHubConnectionContext.User(String userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.OthersGet">
            <summary>Sets the stub of IHubCallerConnectionContext.get_Others()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.OthersInGroupString">
            <summary>Sets the stub of IHubCallerConnectionContext.OthersInGroup(String groupName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.OthersInGroupsIListOfString">
            <summary>Sets the stub of IHubCallerConnectionContext.OthersInGroups(IList`1&lt;String&gt; groupNames)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.UserString">
            <summary>Sets the stub of IHubConnectionContext.User(String userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#All">
            <summary>Sets the stub of IHubConnectionContext.get_All()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubCallerConnectionContext#Caller">
            <summary>Sets the stub of IHubCallerConnectionContext.get_Caller()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubCallerConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubCallerConnectionContext#Others">
            <summary>Sets the stub of IHubCallerConnectionContext.get_Others()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubConnectionContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.#ctor">
            <summary>Initializes a new instance of type StubIHubConnectionContext</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.AllExceptStringArray">
            <summary>Sets the stub of IHubConnectionContext.AllExcept(String[] excludeConnectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.AllGet">
            <summary>Sets the stub of IHubConnectionContext.get_All()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.ClientString">
            <summary>Sets the stub of IHubConnectionContext.Client(String connectionId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.ClientsIListOfString">
            <summary>Sets the stub of IHubConnectionContext.Clients(IList`1&lt;String&gt; connectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.GroupStringStringArray">
            <summary>Sets the stub of IHubConnectionContext.Group(String groupName, String[] excludeConnectionIds)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.GroupsIListOfStringStringArray">
            <summary>Sets the stub of IHubConnectionContext.Groups(IList`1&lt;String&gt; groupNames, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#AllExcept(System.String[])">
            <summary>Sets the stub of IHubConnectionContext.AllExcept(String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Client(System.String)">
            <summary>Sets the stub of IHubConnectionContext.Client(String connectionId)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Clients(System.Collections.Generic.IList{System.String})">
            <summary>Sets the stub of IHubConnectionContext.Clients(IList`1&lt;String&gt; connectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Group(System.String,System.String[])">
            <summary>Sets the stub of IHubConnectionContext.Group(String groupName, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#Groups(System.Collections.Generic.IList{System.String},System.String[])">
            <summary>Sets the stub of IHubConnectionContext.Groups(IList`1&lt;String&gt; groupNames, String[] excludeConnectionIds)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#User(System.String)">
            <summary>Sets the stub of IHubConnectionContext.User(String userId)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.UserString">
            <summary>Sets the stub of IHubConnectionContext.User(String userId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubConnectionContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubConnectionContext#All">
            <summary>Sets the stub of IHubConnectionContext.get_All()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubDescriptorProvider">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubDescriptorProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubDescriptorProvider.#ctor">
            <summary>Initializes a new instance of type StubIHubDescriptorProvider</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubDescriptorProvider.GetHubs">
            <summary>Sets the stub of IHubDescriptorProvider.GetHubs()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubDescriptorProvider.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubDescriptorProvider#GetHubs">
            <summary>Sets the stub of IHubDescriptorProvider.GetHubs()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubDescriptorProvider.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubDescriptorProvider#TryGetHub(System.String,Microsoft.AspNet.SignalR.Hubs.HubDescriptor@)">
            <summary>Sets the stub of IHubDescriptorProvider.TryGetHub(String hubName, HubDescriptor&amp; descriptor)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubDescriptorProvider.TryGetHubStringHubDescriptorOut">
            <summary>Sets the stub of IHubDescriptorProvider.TryGetHub(String hubName, HubDescriptor&amp; descriptor)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.#ctor">
            <summary>Initializes a new instance of type StubIHubIncomingInvokerContext</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.ArgsGet">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_Args()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.HubGet">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_Hub()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.MethodDescriptorGet">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_MethodDescriptor()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.StateTrackerGet">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_StateTracker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubIncomingInvokerContext#Args">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_Args()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubIncomingInvokerContext#Hub">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubIncomingInvokerContext#MethodDescriptor">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_MethodDescriptor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubIncomingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubIncomingInvokerContext#StateTracker">
            <summary>Sets the stub of IHubIncomingInvokerContext.get_StateTracker()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.#ctor">
            <summary>Initializes a new instance of type StubIHubManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.GetHubMethodStringStringIListOfIJsonValue">
            <summary>Sets the stub of IHubManager.GetHubMethod(String hubName, String method, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.GetHubMethodsStringFuncOfMethodDescriptorBoolean">
            <summary>Sets the stub of IHubManager.GetHubMethods(String hubName, Func`2&lt;MethodDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.GetHubString">
            <summary>Sets the stub of IHubManager.GetHub(String hubName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.GetHubsFuncOfHubDescriptorBoolean">
            <summary>Sets the stub of IHubManager.GetHubs(Func`2&lt;HubDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubManager#GetHub(System.String)">
            <summary>Sets the stub of IHubManager.GetHub(String hubName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubManager#GetHubMethod(System.String,System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
            <summary>Sets the stub of IHubManager.GetHubMethod(String hubName, String method, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubManager#GetHubMethods(System.String,System.Func{Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Boolean})">
            <summary>Sets the stub of IHubManager.GetHubMethods(String hubName, Func`2&lt;MethodDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubManager#GetHubs(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.Boolean})">
            <summary>Sets the stub of IHubManager.GetHubs(Func`2&lt;HubDescriptor,Boolean&gt; predicate)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubManager#ResolveHub(System.String)">
            <summary>Sets the stub of IHubManager.ResolveHub(String hubName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubManager#ResolveHubs">
            <summary>Sets the stub of IHubManager.ResolveHubs()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.ResolveHubString">
            <summary>Sets the stub of IHubManager.ResolveHub(String hubName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubManager.ResolveHubs">
            <summary>Sets the stub of IHubManager.ResolveHubs()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.#ctor">
            <summary>Initializes a new instance of type StubIHubOutgoingInvokerContext</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.ConnectionGet">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Connection()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.ExcludedSignalsGet">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_ExcludedSignals()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.InvocationGet">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Invocation()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.SignalGet">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Signal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.SignalsGet">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Signals()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubOutgoingInvokerContext#Connection">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubOutgoingInvokerContext#ExcludedSignals">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_ExcludedSignals()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubOutgoingInvokerContext#Invocation">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Invocation()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubOutgoingInvokerContext#Signal">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Signal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubOutgoingInvokerContext.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubOutgoingInvokerContext#Signals">
            <summary>Sets the stub of IHubOutgoingInvokerContext.get_Signals()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipeline">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubPipeline</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipeline.#ctor">
            <summary>Initializes a new instance of type StubIHubPipeline</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipeline.AddModuleIHubPipelineModule">
            <summary>Sets the stub of IHubPipeline.AddModule(IHubPipelineModule pipelineModule)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipeline.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipeline#AddModule(Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule)">
            <summary>Sets the stub of IHubPipeline.AddModule(IHubPipelineModule pipelineModule)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.#ctor">
            <summary>Initializes a new instance of type StubIHubPipelineInvoker</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.AuthorizeConnectHubDescriptorIRequest">
            <summary>Sets the stub of IHubPipelineInvoker.AuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.ConnectIHub">
            <summary>Sets the stub of IHubPipelineInvoker.Connect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.DisconnectIHub">
            <summary>Sets the stub of IHubPipelineInvoker.Disconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.InvokeIHubIncomingInvokerContext">
            <summary>Sets the stub of IHubPipelineInvoker.Invoke(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#AuthorizeConnect(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest)">
            <summary>Sets the stub of IHubPipelineInvoker.AuthorizeConnect(HubDescriptor hubDescriptor, IRequest request)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#Connect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of IHubPipelineInvoker.Connect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#Disconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of IHubPipelineInvoker.Disconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#Invoke(Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext)">
            <summary>Sets the stub of IHubPipelineInvoker.Invoke(IHubIncomingInvokerContext context)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#Reconnect(Microsoft.AspNet.SignalR.Hubs.IHub)">
            <summary>Sets the stub of IHubPipelineInvoker.Reconnect(IHub hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#RejoiningGroups(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String})">
            <summary>Sets the stub of IHubPipelineInvoker.RejoiningGroups(HubDescriptor hubDescriptor, IRequest request, IList`1&lt;String&gt; groups)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineInvoker#Send(Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext)">
            <summary>Sets the stub of IHubPipelineInvoker.Send(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.ReconnectIHub">
            <summary>Sets the stub of IHubPipelineInvoker.Reconnect(IHub hub)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.RejoiningGroupsHubDescriptorIRequestIListOfString">
            <summary>Sets the stub of IHubPipelineInvoker.RejoiningGroups(HubDescriptor hubDescriptor, IRequest request, IList`1&lt;String&gt; groups)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineInvoker.SendIHubOutgoingInvokerContext">
            <summary>Sets the stub of IHubPipelineInvoker.Send(IHubOutgoingInvokerContext context)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubPipelineModule</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.#ctor">
            <summary>Initializes a new instance of type StubIHubPipelineModule</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildAuthorizeConnectFuncOfHubDescriptorIRequestBoolean">
            <summary>Sets the stub of IHubPipelineModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildConnectFuncOfIHubTask">
            <summary>Sets the stub of IHubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildDisconnectFuncOfIHubTask">
            <summary>Sets the stub of IHubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildIncomingFuncOfIHubIncomingInvokerContextTaskOfObject">
            <summary>Sets the stub of IHubPipelineModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildOutgoingFuncOfIHubOutgoingInvokerContextTask">
            <summary>Sets the stub of IHubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildReconnectFuncOfIHubTask">
            <summary>Sets the stub of IHubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.BuildRejoiningGroupsFuncOfHubDescriptorIRequestIListOfStringIListOfString">
            <summary>Sets the stub of IHubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildAuthorizeConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Boolean})">
            <summary>Sets the stub of IHubPipelineModule.BuildAuthorizeConnect(Func`3&lt;HubDescriptor,IRequest,Boolean&gt; authorizeConnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildConnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of IHubPipelineModule.BuildConnect(Func`2&lt;IHub,Task&gt; connect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildDisconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of IHubPipelineModule.BuildDisconnect(Func`2&lt;IHub,Task&gt; disconnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildIncoming(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubIncomingInvokerContext,System.Threading.Tasks.Task{System.Object}})">
            <summary>Sets the stub of IHubPipelineModule.BuildIncoming(Func`2&lt;IHubIncomingInvokerContext,Task`1&lt;Object&gt;&gt; invoke)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildOutgoing(System.Func{Microsoft.AspNet.SignalR.Hubs.IHubOutgoingInvokerContext,System.Threading.Tasks.Task})">
            <summary>Sets the stub of IHubPipelineModule.BuildOutgoing(Func`2&lt;IHubOutgoingInvokerContext,Task&gt; send)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildReconnect(System.Func{Microsoft.AspNet.SignalR.Hubs.IHub,System.Threading.Tasks.Task})">
            <summary>Sets the stub of IHubPipelineModule.BuildReconnect(Func`2&lt;IHub,Task&gt; reconnect)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubPipelineModule.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubPipelineModule#BuildRejoiningGroups(System.Func{Microsoft.AspNet.SignalR.Hubs.HubDescriptor,Microsoft.AspNet.SignalR.IRequest,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String}})">
            <summary>Sets the stub of IHubPipelineModule.BuildRejoiningGroups(Func`4&lt;HubDescriptor,IRequest,IList`1&lt;String&gt;,IList`1&lt;String&gt;&gt; rejoiningGroups)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubRequestParser">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IHubRequestParser</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubRequestParser.#ctor">
            <summary>Initializes a new instance of type StubIHubRequestParser</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubRequestParser.mansrc::Microsoft#AspNet#SignalR#Hubs#IHubRequestParser#Parse(System.String,Newtonsoft.Json.JsonSerializer)">
            <summary>Sets the stub of IHubRequestParser.Parse(String data, JsonSerializer serializer)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIHubRequestParser.ParseStringJsonSerializer">
            <summary>Sets the stub of IHubRequestParser.Parse(String data, JsonSerializer serializer)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptMinifier">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IJavaScriptMinifier</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptMinifier.#ctor">
            <summary>Initializes a new instance of type StubIJavaScriptMinifier</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptMinifier.mansrc::Microsoft#AspNet#SignalR#Hubs#IJavaScriptMinifier#Minify(System.String)">
            <summary>Sets the stub of IJavaScriptMinifier.Minify(String source)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptMinifier.MinifyString">
            <summary>Sets the stub of IJavaScriptMinifier.Minify(String source)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptProxyGenerator">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IJavaScriptProxyGenerator</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptProxyGenerator.#ctor">
            <summary>Initializes a new instance of type StubIJavaScriptProxyGenerator</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptProxyGenerator.GenerateProxyString">
            <summary>Sets the stub of IJavaScriptProxyGenerator.GenerateProxy(String serviceUrl)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIJavaScriptProxyGenerator.mansrc::Microsoft#AspNet#SignalR#Hubs#IJavaScriptProxyGenerator#GenerateProxy(System.String)">
            <summary>Sets the stub of IJavaScriptProxyGenerator.GenerateProxy(String serviceUrl)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIMethodDescriptorProvider">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IMethodDescriptorProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIMethodDescriptorProvider.#ctor">
            <summary>Initializes a new instance of type StubIMethodDescriptorProvider</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIMethodDescriptorProvider.GetMethodsHubDescriptor">
            <summary>Sets the stub of IMethodDescriptorProvider.GetMethods(HubDescriptor hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIMethodDescriptorProvider.mansrc::Microsoft#AspNet#SignalR#Hubs#IMethodDescriptorProvider#GetMethods(Microsoft.AspNet.SignalR.Hubs.HubDescriptor)">
            <summary>Sets the stub of IMethodDescriptorProvider.GetMethods(HubDescriptor hub)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIMethodDescriptorProvider.mansrc::Microsoft#AspNet#SignalR#Hubs#IMethodDescriptorProvider#TryGetMethod(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String,Microsoft.AspNet.SignalR.Hubs.MethodDescriptor@,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
            <summary>Sets the stub of IMethodDescriptorProvider.TryGetMethod(HubDescriptor hub, String method, MethodDescriptor&amp; descriptor, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIMethodDescriptorProvider.TryGetMethodHubDescriptorStringMethodDescriptorOutIListOfIJsonValue">
            <summary>Sets the stub of IMethodDescriptorProvider.TryGetMethod(HubDescriptor hub, String method, MethodDescriptor&amp; descriptor, IList`1&lt;IJsonValue&gt; parameters)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIParameterResolver">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.IParameterResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIParameterResolver.#ctor">
            <summary>Initializes a new instance of type StubIParameterResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIParameterResolver.mansrc::Microsoft#AspNet#SignalR#Hubs#IParameterResolver#ResolveMethodParameters(Microsoft.AspNet.SignalR.Hubs.MethodDescriptor,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Json.IJsonValue})">
            <summary>Sets the stub of IParameterResolver.ResolveMethodParameters(MethodDescriptor method, IList`1&lt;IJsonValue&gt; values)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubIParameterResolver.ResolveMethodParametersMethodDescriptorIListOfIJsonValue">
            <summary>Sets the stub of IParameterResolver.ResolveMethodParameters(MethodDescriptor method, IList`1&lt;IJsonValue&gt; values)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.MethodDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToAttributes">
            <summary>Attaches delegates to emulate StubMethodDescriptor.Attributes as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToHub">
            <summary>Attaches delegates to emulate StubMethodDescriptor.Hub as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToInvoker">
            <summary>Attaches delegates to emulate StubMethodDescriptor.Invoker as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubMethodDescriptor.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToNameSpecified">
            <summary>Attaches delegates to emulate StubMethodDescriptor.NameSpecified as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToParameters">
            <summary>Attaches delegates to emulate StubMethodDescriptor.Parameters as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttachBackingFieldToReturnType">
            <summary>Attaches delegates to emulate StubMethodDescriptor.ReturnType as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttributesGet">
            <summary>Sets the stub of MethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.AttributesSetIEnumerableOfAttribute">
            <summary>Sets the stub of MethodDescriptor.set_Attributes(IEnumerable`1&lt;Attribute&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.HubGet">
            <summary>Sets the stub of MethodDescriptor.get_Hub()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.HubSetHubDescriptor">
            <summary>Sets the stub of MethodDescriptor.set_Hub(HubDescriptor value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubMethodDescriptor</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.InvokerGet">
            <summary>Sets the stub of MethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.InvokerSetFuncOfIHubObjectArrayObject">
            <summary>Sets the stub of MethodDescriptor.set_Invoker(Func`3&lt;IHub,Object[],Object&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.NameGet">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.NameSetString">
            <summary>Sets the stub of Descriptor.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.NameSpecifiedGet">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.NameSpecifiedSetBoolean">
            <summary>Sets the stub of Descriptor.set_NameSpecified(Boolean value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.ParametersGet">
            <summary>Sets the stub of MethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.ParametersSetIListOfParameterDescriptor">
            <summary>Sets the stub of MethodDescriptor.set_Parameters(IList`1&lt;ParameterDescriptor&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.ReturnTypeGet">
            <summary>Sets the stub of MethodDescriptor.get_ReturnType()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.ReturnTypeSetType">
            <summary>Sets the stub of MethodDescriptor.set_ReturnType(Type value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.Attributes">
            <summary>Sets the stub of MethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.Hub">
            <summary>Sets the stub of MethodDescriptor.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.Invoker">
            <summary>Sets the stub of MethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.Name">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.NameSpecified">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.Parameters">
            <summary>Sets the stub of MethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMethodDescriptor.ReturnType">
            <summary>Sets the stub of MethodDescriptor.get_ReturnType()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.MultipleSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.Collections.Generic.IList{System.String},System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.GetInvocationData(System.String,System.Object[])">
            <summary>Sets the stub of MultipleSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the stub of MultipleSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.InitializeStub">
            <summary>Initializes a new instance of type StubMultipleSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of MultipleSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of MultipleSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of MultipleSignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of MultipleSignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubMultipleSignalProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.NotAuthorizedException</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubNotAuthorizedException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubNotAuthorizedException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.InitializeStub">
            <summary>Initializes a new instance of type StubNotAuthorizedException</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNotAuthorizedException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullJavaScriptMinifier">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.NullJavaScriptMinifier</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullJavaScriptMinifier.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullJavaScriptMinifier.InitializeStub">
            <summary>Initializes a new instance of type StubNullJavaScriptMinifier</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullJavaScriptMinifier.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullJavaScriptMinifier.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullJavaScriptMinifier.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.NullMethodDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.#ctor(Microsoft.AspNet.SignalR.Hubs.HubDescriptor,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.AttachBackingFieldToHub">
            <summary>Attaches delegates to emulate StubNullMethodDescriptor.Hub as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubNullMethodDescriptor.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.AttachBackingFieldToNameSpecified">
            <summary>Attaches delegates to emulate StubNullMethodDescriptor.NameSpecified as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.AttachBackingFieldToReturnType">
            <summary>Attaches delegates to emulate StubNullMethodDescriptor.ReturnType as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.AttributesGet">
            <summary>Sets the stub of NullMethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.HubGet">
            <summary>Sets the stub of MethodDescriptor.get_Hub()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.HubSetHubDescriptor">
            <summary>Sets the stub of MethodDescriptor.set_Hub(HubDescriptor value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubNullMethodDescriptor</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.InvokerGet">
            <summary>Sets the stub of NullMethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.NameGet">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.NameSetString">
            <summary>Sets the stub of Descriptor.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.NameSpecifiedGet">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.NameSpecifiedSetBoolean">
            <summary>Sets the stub of Descriptor.set_NameSpecified(Boolean value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.ParametersGet">
            <summary>Sets the stub of NullMethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.ReturnTypeGet">
            <summary>Sets the stub of MethodDescriptor.get_ReturnType()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.ReturnTypeSetType">
            <summary>Sets the stub of MethodDescriptor.set_ReturnType(Type value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.Attributes">
            <summary>Sets the stub of NullMethodDescriptor.get_Attributes()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.Hub">
            <summary>Sets the stub of MethodDescriptor.get_Hub()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.Invoker">
            <summary>Sets the stub of NullMethodDescriptor.get_Invoker()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.Name">
            <summary>Sets the stub of Descriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.NameSpecified">
            <summary>Sets the stub of Descriptor.get_NameSpecified()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.Parameters">
            <summary>Sets the stub of NullMethodDescriptor.get_Parameters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubNullMethodDescriptor.ReturnType">
            <summary>Sets the stub of MethodDescriptor.get_ReturnType()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ParameterDescriptor</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.AttachBackingFieldToName">
            <summary>Attaches delegates to emulate StubParameterDescriptor.Name as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.AttachBackingFieldToParameterType">
            <summary>Attaches delegates to emulate StubParameterDescriptor.ParameterType as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.InitializeStub">
            <summary>Initializes a new instance of type StubParameterDescriptor</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.NameGet">
            <summary>Sets the stub of ParameterDescriptor.get_Name()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.NameSetString">
            <summary>Sets the stub of ParameterDescriptor.set_Name(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.ParameterTypeGet">
            <summary>Sets the stub of ParameterDescriptor.get_ParameterType()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.ParameterTypeSetType">
            <summary>Sets the stub of ParameterDescriptor.set_ParameterType(Type value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.Name">
            <summary>Sets the stub of ParameterDescriptor.get_Name()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubParameterDescriptor.ParameterType">
            <summary>Sets the stub of ParameterDescriptor.get_ParameterType()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedHubDescriptorProvider">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ReflectedHubDescriptorProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedHubDescriptorProvider.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedHubDescriptorProvider.InitializeStub">
            <summary>Initializes a new instance of type StubReflectedHubDescriptorProvider</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedHubDescriptorProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedHubDescriptorProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedHubDescriptorProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedMethodDescriptorProvider">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.ReflectedMethodDescriptorProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedMethodDescriptorProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedMethodDescriptorProvider.InitializeStub">
            <summary>Initializes a new instance of type StubReflectedMethodDescriptorProvider</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedMethodDescriptorProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedMethodDescriptorProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubReflectedMethodDescriptorProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.SignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,System.Collections.Generic.IList{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.GetInvocationData(System.String,System.Object[])">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.InitializeStub">
            <summary>Initializes a new instance of type StubSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubSignalProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.StateChangeTracker</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker.InitializeStub">
            <summary>Initializes a new instance of type StubStateChangeTracker</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStateChangeTracker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.StatefulSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String,System.String,Microsoft.AspNet.SignalR.Hubs.StateChangeTracker)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.GetInvocationData(System.String,System.Object[])">
            <summary>Sets the stub of StatefulSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the stub of StatefulSignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.InitializeStub">
            <summary>Initializes a new instance of type StubStatefulSignalProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of StatefulSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of StatefulSignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of StatefulSignalProxy.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of StatefulSignalProxy.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubStatefulSignalProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy">
            <summary>Stub type of Microsoft.AspNet.SignalR.Hubs.UserProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.#ctor(Microsoft.AspNet.SignalR.IConnection,Microsoft.AspNet.SignalR.Hubs.IHubPipelineInvoker,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.GetDynamicMemberNames">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.GetDynamicMemberNames01">
            <summary>Sets the stub of DynamicObject.GetDynamicMemberNames()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.GetInvocationData(System.String,System.Object[])">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.GetInvocationDataStringObjectArray">
            <summary>Sets the stub of SignalProxy.GetInvocationData(String method, Object[] args)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.GetMetaObject(System.Linq.Expressions.Expression)">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.GetMetaObjectExpression">
            <summary>Sets the stub of DynamicObject.GetMetaObject(Expression parameter)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.InitializeStub">
            <summary>Initializes a new instance of type StubUserProxy</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryBinaryOperationBinaryOperationBinderObjectObjectOut">
            <summary>Sets the stub of DynamicObject.TryBinaryOperation(BinaryOperationBinder binder, Object arg, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryConvertConvertBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryConvert(ConvertBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryCreateInstance(System.Dynamic.CreateInstanceBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryCreateInstanceCreateInstanceBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryCreateInstance(CreateInstanceBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryDeleteIndex(System.Dynamic.DeleteIndexBinder,System.Object[])">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryDeleteIndexDeleteIndexBinderObjectArray">
            <summary>Sets the stub of DynamicObject.TryDeleteIndex(DeleteIndexBinder binder, Object[] indexes)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryDeleteMemberDeleteMemberBinder">
            <summary>Sets the stub of DynamicObject.TryDeleteMember(DeleteMemberBinder binder)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryGetIndexGetIndexBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryGetIndex(GetIndexBinder binder, Object[] indexes, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryGetMemberGetMemberBinderObjectOut">
            <summary>Sets the stub of SignalProxy.TryGetMember(GetMemberBinder binder, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryInvoke(System.Dynamic.InvokeBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryInvokeInvokeBinderObjectArrayObjectOut">
            <summary>Sets the stub of DynamicObject.TryInvoke(InvokeBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryInvokeMember(System.Dynamic.InvokeMemberBinder,System.Object[],System.Object@)">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryInvokeMemberInvokeMemberBinderObjectArrayObjectOut">
            <summary>Sets the stub of SignalProxy.TryInvokeMember(InvokeMemberBinder binder, Object[] args, Object&amp; result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TrySetIndexSetIndexBinderObjectArrayObject">
            <summary>Sets the stub of DynamicObject.TrySetIndex(SetIndexBinder binder, Object[] indexes, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TrySetMemberSetMemberBinderObject">
            <summary>Sets the stub of DynamicObject.TrySetMember(SetMemberBinder binder, Object value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryUnaryOperation(System.Dynamic.UnaryOperationBinder,System.Object@)">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.TryUnaryOperationUnaryOperationBinderObjectOut">
            <summary>Sets the stub of DynamicObject.TryUnaryOperation(UnaryOperationBinder binder, Object&amp; result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Hubs.Fakes.StubUserProxy.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.AckHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.#ctor(Microsoft.AspNet.SignalR.Infrastructure.AckHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.Bind(Microsoft.AspNet.SignalR.Infrastructure.IAckHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.CheckAcks">
            <summary>Sets the shim of AckHandler.CheckAcks()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.Constructor">
            <summary>Sets the shim of AckHandler.AckHandler()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.ConstructorBooleanTimeSpanTimeSpan">
            <summary>Sets the shim of AckHandler.AckHandler(Boolean completeAcksOnTimeout, TimeSpan ackThreshold, TimeSpan ackInterval)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.CreateAckString">
            <summary>Sets the shim of AckHandler.CreateAck(String id)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.Dispose">
            <summary>Sets the shim of AckHandler.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.DisposeBoolean">
            <summary>Sets the shim of AckHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.TriggerAckString">
            <summary>Sets the shim of AckHandler.TriggerAck(String id)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler._ctorb__0Object">
            <summary>Sets the shim of AckHandler.&lt;.ctor&gt;b__0(Object _)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances.CheckAcks">
            <summary>Sets the shim of AckHandler.CheckAcks()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances.CreateAckString">
            <summary>Sets the shim of AckHandler.CreateAck(String id)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances.Dispose">
            <summary>Sets the shim of AckHandler.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances.DisposeBoolean">
            <summary>Sets the shim of AckHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances.TriggerAckString">
            <summary>Sets the shim of AckHandler.TriggerAck(String id)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimAckHandler.AllInstances._ctorb__0Object">
            <summary>Sets the shim of AckHandler.&lt;.ctor&gt;b__0(Object _)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.#ctor(Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.ConstructorArraySegmentOfByteEncoding">
            <summary>Sets the shim of ArraySegmentTextReader.ArraySegmentTextReader(ArraySegment`1&lt;Byte&gt; buffer, Encoding encoding)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.ReadCharArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentTextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimArraySegmentTextReader.AllInstances.ReadCharArrayInt32Int32">
            <summary>Sets the shim of ArraySegmentTextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.Connection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.#ctor(Microsoft.AspNet.SignalR.Infrastructure.Connection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.Bind(Microsoft.AspNet.SignalR.IConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.Bind(Microsoft.AspNet.SignalR.Messaging.ISubscriber)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.Bind(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.ConstructorIMessageBusJsonSerializerStringStringIListOfStringIListOfStringITraceManagerIAckHandlerIPerformanceCounterManagerIProtectedData">
            <summary>Sets the shim of Connection.Connection(IMessageBus newMessageBus, JsonSerializer jsonSerializer, String baseSignal, String connectionId, IList`1&lt;String&gt; signals, IList`1&lt;String&gt; groups, ITraceManager traceManager, IAckHandler ackHandler, IPerformanceCounterManager performanceCounterManager, IProtectedData protectedData)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.CreateMessageStringObject">
            <summary>Sets the shim of Connection.CreateMessage(String key, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.DefaultSignalGet">
            <summary>Sets the shim of Connection.get_DefaultSignal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.EventKeyAddedAddActionOfISubscriberString">
            <summary>Sets the shim of Connection.add_EventKeyAdded(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.EventKeyAddedRemoveActionOfISubscriberString">
            <summary>Sets the shim of Connection.remove_EventKeyAdded(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.EventKeyRemovedAddActionOfISubscriberString">
            <summary>Sets the shim of Connection.add_EventKeyRemoved(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.EventKeyRemovedRemoveActionOfISubscriberString">
            <summary>Sets the shim of Connection.remove_EventKeyRemoved(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.EventKeysMicrosoftAspNetSignalRMessagingISubscriberget">
            <summary>Sets the shim of Connection.Microsoft.AspNet.SignalR.Messaging.ISubscriber.get_EventKeys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.ExcludeMessageMessage">
            <summary>Sets the shim of Connection.ExcludeMessage(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.GetFilterIListOfString">
            <summary>Sets the shim of Connection.GetFilter(IList`1&lt;String&gt; excludedSignals)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.GetMessageBufferObject">
            <summary>Sets the shim of Connection.GetMessageBuffer(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.GetResponseMessageResult">
            <summary>Sets the shim of Connection.GetResponse(MessageResult result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.IdentityGet">
            <summary>Sets the shim of Connection.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.MessageBusCallbackMessageResultObject">
            <summary>Sets the shim of Connection.MessageBusCallback(MessageResult result, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.MultiSendIListOfStringObjectIListOfString">
            <summary>Sets the shim of Connection.MultiSend(IList`1&lt;String&gt; signals, Object value, IList`1&lt;String&gt; excludedSignals)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.PopulateResponseStatePersistentResponse">
            <summary>Sets the shim of Connection.PopulateResponseState(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.ProcessCommandCommand">
            <summary>Sets the shim of Connection.ProcessCommand(Command command)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.ProcessResultsMessageResult">
            <summary>Sets the shim of Connection.ProcessResults(MessageResult result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.ReceiveStringFuncOfPersistentResponseObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of Connection.Receive(String messageId, Func`3&lt;PersistentResponse,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.SendConnectionMessage">
            <summary>Sets the shim of Connection.Send(ConnectionMessage message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.SerializeMessageValueObject">
            <summary>Sets the shim of Connection.SerializeMessageValue(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.SubscriptionGet">
            <summary>Sets the shim of Connection.get_Subscription()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.SubscriptionSetSubscription">
            <summary>Sets the shim of Connection.set_Subscription(Subscription value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.TraceGet">
            <summary>Sets the shim of Connection.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.WriteCursorGet">
            <summary>Sets the shim of Connection.get_WriteCursor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.WriteCursorSetActionOfTextWriter">
            <summary>Sets the shim of Connection.set_WriteCursor(Action`1&lt;TextWriter&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection._ExcludeMessageb__6String">
            <summary>Sets the shim of Connection.&lt;ExcludeMessage&gt;b__6(String signal)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection._ProcessResultsb__7Message">
            <summary>Sets the shim of Connection.&lt;ProcessResults&gt;b__7(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection._ProcessResultsb__8ObjectMessage">
            <summary>Sets the shim of Connection.&lt;ProcessResults&gt;b__8(Object state, Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection._Receiveb__4MessageResultObject">
            <summary>Sets the shim of Connection.&lt;Receive&gt;b__4(MessageResult result, Object s)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection._Sendb__0Task">
            <summary>Sets the shim of Connection.&lt;Send&gt;b__0(Task task)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection._SerializeMessageValueb__2ArraySegmentOfByteObject">
            <summary>Sets the shim of Connection.&lt;SerializeMessageValue&gt;b__2(ArraySegment`1&lt;Byte&gt; buffer, Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.CreateMessageStringObject">
            <summary>Sets the shim of Connection.CreateMessage(String key, Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.DefaultSignalGet">
            <summary>Sets the shim of Connection.get_DefaultSignal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.EventKeyAddedAddActionOfISubscriberString">
            <summary>Sets the shim of Connection.add_EventKeyAdded(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.EventKeyAddedRemoveActionOfISubscriberString">
            <summary>Sets the shim of Connection.remove_EventKeyAdded(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.EventKeyRemovedAddActionOfISubscriberString">
            <summary>Sets the shim of Connection.add_EventKeyRemoved(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.EventKeyRemovedRemoveActionOfISubscriberString">
            <summary>Sets the shim of Connection.remove_EventKeyRemoved(Action`2&lt;ISubscriber,String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.EventKeysMicrosoftAspNetSignalRMessagingISubscriberget">
            <summary>Sets the shim of Connection.Microsoft.AspNet.SignalR.Messaging.ISubscriber.get_EventKeys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.ExcludeMessageMessage">
            <summary>Sets the shim of Connection.ExcludeMessage(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.GetMessageBufferObject">
            <summary>Sets the shim of Connection.GetMessageBuffer(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.GetResponseMessageResult">
            <summary>Sets the shim of Connection.GetResponse(MessageResult result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.IdentityGet">
            <summary>Sets the shim of Connection.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.MultiSendIListOfStringObjectIListOfString">
            <summary>Sets the shim of Connection.MultiSend(IList`1&lt;String&gt; signals, Object value, IList`1&lt;String&gt; excludedSignals)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.PopulateResponseStatePersistentResponse">
            <summary>Sets the shim of Connection.PopulateResponseState(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.ProcessCommandCommand">
            <summary>Sets the shim of Connection.ProcessCommand(Command command)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.ProcessResultsMessageResult">
            <summary>Sets the shim of Connection.ProcessResults(MessageResult result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.ReceiveStringFuncOfPersistentResponseObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of Connection.Receive(String messageId, Func`3&lt;PersistentResponse,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.SendConnectionMessage">
            <summary>Sets the shim of Connection.Send(ConnectionMessage message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.SerializeMessageValueObject">
            <summary>Sets the shim of Connection.SerializeMessageValue(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.SubscriptionGet">
            <summary>Sets the shim of Connection.get_Subscription()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.SubscriptionSetSubscription">
            <summary>Sets the shim of Connection.set_Subscription(Subscription value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.TraceGet">
            <summary>Sets the shim of Connection.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.WriteCursorGet">
            <summary>Sets the shim of Connection.get_WriteCursor()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances.WriteCursorSetActionOfTextWriter">
            <summary>Sets the shim of Connection.set_WriteCursor(Action`1&lt;TextWriter&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances._ExcludeMessageb__6String">
            <summary>Sets the shim of Connection.&lt;ExcludeMessage&gt;b__6(String signal)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnection.AllInstances._ProcessResultsb__8ObjectMessage">
            <summary>Sets the shim of Connection.&lt;ProcessResults&gt;b__8(Object state, Message message)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.#ctor(Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.Bind(Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.GetConnectionContextOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.IPersistentConnectionContext})">
            <summary>Sets the shim of ConnectionManager.GetConnectionContext()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.GetHubContextOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.IHubContext})">
            <summary>Sets the shim of ConnectionManager.GetHubContext()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.ConstructorIDependencyResolver">
            <summary>Sets the shim of ConnectionManager.ConnectionManager(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.GetConnectionCoreString">
            <summary>Sets the shim of ConnectionManager.GetConnectionCore(String connectionName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.GetConnectionType">
            <summary>Sets the shim of ConnectionManager.GetConnection(Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.GetHubContextString">
            <summary>Sets the shim of ConnectionManager.GetHubContext(String hubName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.AllInstances.GetConnectionContextOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager,Microsoft.AspNet.SignalR.IPersistentConnectionContext})">
            <summary>Sets the shim of ConnectionManager.GetConnectionContext()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.AllInstances.GetHubContextOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager,Microsoft.AspNet.SignalR.IHubContext})">
            <summary>Sets the shim of ConnectionManager.GetHubContext()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.AllInstances.GetConnectionCoreString">
            <summary>Sets the shim of ConnectionManager.GetConnectionCore(String connectionName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.AllInstances.GetConnectionType">
            <summary>Sets the shim of ConnectionManager.GetConnection(Type type)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimConnectionManager.AllInstances.GetHubContextString">
            <summary>Sets the shim of ConnectionManager.GetHubContext(String hubName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.#ctor(Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.Bind(Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.ConstructorIDataProtectionProvider">
            <summary>Sets the shim of DataProtectionProviderProtectedData.DataProtectionProviderProtectedData(IDataProtectionProvider provider)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.GetDataProtectorString">
            <summary>Sets the shim of DataProtectionProviderProtectedData.GetDataProtector(String purpose)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.ProtectStringString">
            <summary>Sets the shim of DataProtectionProviderProtectedData.Protect(String data, String purpose)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.StaticConstructor">
            <summary>Sets the shim of DataProtectionProviderProtectedData.DataProtectionProviderProtectedData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.UnprotectStringString">
            <summary>Sets the shim of DataProtectionProviderProtectedData.Unprotect(String protectedValue, String purpose)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.AllInstances.GetDataProtectorString">
            <summary>Sets the shim of DataProtectionProviderProtectedData.GetDataProtector(String purpose)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.AllInstances.ProtectStringString">
            <summary>Sets the shim of DataProtectionProviderProtectedData.Protect(String data, String purpose)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDataProtectionProviderProtectedData.AllInstances.UnprotectStringString">
            <summary>Sets the shim of DataProtectionProviderProtectedData.Unprotect(String protectedValue, String purpose)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.#ctor(Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.Bind(Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.Constructor">
            <summary>Sets the shim of DefaultProtectedData.DefaultProtectedData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.ProtectStringString">
            <summary>Sets the shim of DefaultProtectedData.Protect(String data, String purpose)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.StaticConstructor">
            <summary>Sets the shim of DefaultProtectedData.DefaultProtectedData()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.UnprotectStringString">
            <summary>Sets the shim of DefaultProtectedData.Unprotect(String protectedValue, String purpose)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.AllInstances.ProtectStringString">
            <summary>Sets the shim of DefaultProtectedData.Protect(String data, String purpose)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimDefaultProtectedData.AllInstances.UnprotectStringString">
            <summary>Sets the shim of DefaultProtectedData.Unprotect(String protectedValue, String purpose)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimInterlockedHelper">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.InterlockedHelper</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimInterlockedHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimInterlockedHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimInterlockedHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimInterlockedHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimInterlockedHelper.CompareExchangeOrInt32RefInt32Int32Int32">
            <summary>Sets the shim of InterlockedHelper.CompareExchangeOr(Int32&amp; location, Int32 value, Int32 comparandA, Int32 comparandB)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.Bind(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesReceivedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesReceivedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesReceivedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesReceivedTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesReceivedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesReceivedTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesReceivedTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesSentPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesSentPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesSentPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesSentPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesSentTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesSentTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionMessagesSentTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesSentTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsConnectedGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsConnectedSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsConnected(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsCurrentGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsCurrentSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsCurrent(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsDisconnectedGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsDisconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsDisconnectedSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsDisconnected(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsReconnectedGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsReconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConnectionsReconnectedSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsReconnected(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.Constructor">
            <summary>Sets the shim of PerformanceCounterManager.PerformanceCounterManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConstructorDefaultDependencyResolver">
            <summary>Sets the shim of PerformanceCounterManager.PerformanceCounterManager(DefaultDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ConstructorITraceManager">
            <summary>Sets the shim of PerformanceCounterManager.PerformanceCounterManager(ITraceManager traceManager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsAllPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsAllPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsAllPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsAllPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsAllTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsAllTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsAllTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsAllTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubInvocationPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubInvocationPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubInvocationPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubInvocationPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubInvocationTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubInvocationTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubInvocationTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubInvocationTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubResolutionPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubResolutionPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubResolutionPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubResolutionPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubResolutionTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubResolutionTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsHubResolutionTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubResolutionTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsTransportPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsTransportPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsTransportPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsTransportPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsTransportTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsTransportTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ErrorsTransportTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsTransportTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.GetCounterPropertyInfo">
            <summary>Sets the shim of PerformanceCounterManager.GetCounterPropertyInfo()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.InitNoOpCounters">
            <summary>Sets the shim of PerformanceCounterManager.InitNoOpCounters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.InitializeStringCancellationToken">
            <summary>Sets the shim of PerformanceCounterManager.Initialize(String instanceName, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.LoadCounterStringStringStringBoolean">
            <summary>Sets the shim of PerformanceCounterManager.LoadCounter(String categoryName, String counterName, String instanceName, Boolean isReadOnly)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusAllocatedWorkersGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusAllocatedWorkers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusAllocatedWorkersSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusAllocatedWorkers(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusBusyWorkersGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusBusyWorkers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusBusyWorkersSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusBusyWorkers(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesPublishedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesPublishedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesPublishedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesPublishedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesPublishedTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesPublishedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesPublishedTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesPublishedTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesReceivedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesReceivedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesReceivedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesReceivedTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesReceivedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusMessagesReceivedTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesReceivedTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusSubscribersCurrentGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusSubscribersCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusSubscribersCurrentSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusSubscribersCurrent(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusSubscribersPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusSubscribersPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusSubscribersPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusSubscribersPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusSubscribersTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusSubscribersTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusSubscribersTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusSubscribersTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusTopicsCurrentGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusTopicsCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.MessageBusTopicsCurrentSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusTopicsCurrent(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutErrorsPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutErrorsPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutErrorsPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutErrorsPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutErrorsTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutErrorsTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutErrorsTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutErrorsTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutMessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutMessageBusMessagesReceivedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutSendQueueLengthGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutSendQueueLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutSendQueueLengthSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutSendQueueLength(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutStreamCountBufferingGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutStreamCountBuffering()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutStreamCountBufferingSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutStreamCountBuffering(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutStreamCountOpenGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutStreamCountOpen()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutStreamCountOpenSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutStreamCountOpen(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutStreamCountTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutStreamCountTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.ScaleoutStreamCountTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutStreamCountTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.SetCounterPropertiesString">
            <summary>Sets the shim of PerformanceCounterManager.SetCounterProperties(String instanceName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.StaticConstructor">
            <summary>Sets the shim of PerformanceCounterManager.PerformanceCounterManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.UnloadCounters">
            <summary>Sets the shim of PerformanceCounterManager.UnloadCounters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager._GetCounterPropertyInfob__4PropertyInfo">
            <summary>Sets the shim of PerformanceCounterManager.&lt;GetCounterPropertyInfo&gt;b__4(PropertyInfo p)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager._UnloadCountersb__2PropertyInfo">
            <summary>Sets the shim of PerformanceCounterManager.&lt;UnloadCounters&gt;b__2(PropertyInfo p)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesReceivedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesReceivedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesReceivedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesReceivedTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesReceivedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesReceivedTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesReceivedTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesSentPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesSentPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesSentPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesSentPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesSentTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionMessagesSentTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionMessagesSentTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionMessagesSentTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsConnectedGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsConnectedSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsConnected(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsCurrentGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsCurrentSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsCurrent(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsDisconnectedGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsDisconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsDisconnectedSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsDisconnected(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsReconnectedGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ConnectionsReconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ConnectionsReconnectedSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ConnectionsReconnected(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsAllPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsAllPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsAllPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsAllPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsAllTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsAllTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsAllTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsAllTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubInvocationPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubInvocationPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubInvocationPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubInvocationPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubInvocationTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubInvocationTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubInvocationTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubInvocationTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubResolutionPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubResolutionPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubResolutionPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubResolutionPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubResolutionTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsHubResolutionTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsHubResolutionTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsHubResolutionTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsTransportPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsTransportPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsTransportPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsTransportPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsTransportTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ErrorsTransportTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ErrorsTransportTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ErrorsTransportTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.InitNoOpCounters">
            <summary>Sets the shim of PerformanceCounterManager.InitNoOpCounters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.InitializeStringCancellationToken">
            <summary>Sets the shim of PerformanceCounterManager.Initialize(String instanceName, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.LoadCounterStringStringStringBoolean">
            <summary>Sets the shim of PerformanceCounterManager.LoadCounter(String categoryName, String counterName, String instanceName, Boolean isReadOnly)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusAllocatedWorkersGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusAllocatedWorkers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusAllocatedWorkersSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusAllocatedWorkers(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusBusyWorkersGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusBusyWorkers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusBusyWorkersSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusBusyWorkers(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesPublishedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesPublishedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesPublishedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesPublishedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesPublishedTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesPublishedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesPublishedTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesPublishedTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesReceivedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesReceivedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesReceivedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesReceivedTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusMessagesReceivedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusMessagesReceivedTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusMessagesReceivedTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusSubscribersCurrentGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusSubscribersCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusSubscribersCurrentSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusSubscribersCurrent(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusSubscribersPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusSubscribersPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusSubscribersPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusSubscribersPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusSubscribersTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusSubscribersTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusSubscribersTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusSubscribersTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusTopicsCurrentGet">
            <summary>Sets the shim of PerformanceCounterManager.get_MessageBusTopicsCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.MessageBusTopicsCurrentSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_MessageBusTopicsCurrent(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutErrorsPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutErrorsPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutErrorsPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutErrorsPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutErrorsTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutErrorsTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutErrorsTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutErrorsTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutMessageBusMessagesReceivedPerSecGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutMessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutMessageBusMessagesReceivedPerSecSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutMessageBusMessagesReceivedPerSec(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutSendQueueLengthGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutSendQueueLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutSendQueueLengthSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutSendQueueLength(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutStreamCountBufferingGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutStreamCountBuffering()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutStreamCountBufferingSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutStreamCountBuffering(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutStreamCountOpenGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutStreamCountOpen()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutStreamCountOpenSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutStreamCountOpen(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutStreamCountTotalGet">
            <summary>Sets the shim of PerformanceCounterManager.get_ScaleoutStreamCountTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.ScaleoutStreamCountTotalSetIPerformanceCounter">
            <summary>Sets the shim of PerformanceCounterManager.set_ScaleoutStreamCountTotal(IPerformanceCounter value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.SetCounterPropertiesString">
            <summary>Sets the shim of PerformanceCounterManager.SetCounterProperties(String instanceName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPerformanceCounterManager.AllInstances.UnloadCounters">
            <summary>Sets the shim of PerformanceCounterManager.UnloadCounters()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.#ctor(Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.Bind(Microsoft.AspNet.SignalR.IUserIdProvider)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.Constructor">
            <summary>Sets the shim of PrincipalUserIdProvider.PrincipalUserIdProvider()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.GetUserIdIRequest">
            <summary>Sets the shim of PrincipalUserIdProvider.GetUserId(IRequest request)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPrincipalUserIdProvider.AllInstances.GetUserIdIRequest">
            <summary>Sets the shim of PrincipalUserIdProvider.GetUserId(IRequest request)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.#ctor(Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.Constructor">
            <summary>Sets the shim of ProtocolResolver.ProtocolResolver()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.ConstructorVersionVersion">
            <summary>Sets the shim of ProtocolResolver.ProtocolResolver(Version min, Version max)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.ResolveIRequest">
            <summary>Sets the shim of ProtocolResolver.Resolve(IRequest request)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimProtocolResolver.AllInstances.ResolveIRequest">
            <summary>Sets the shim of ProtocolResolver.Resolve(IRequest request)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPurposes">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.Purposes</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPurposes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPurposes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPurposes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimPurposes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.#ctor(Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.Bind(Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.Constructor">
            <summary>Sets the shim of ServerIdManager.ServerIdManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.ServerIdGet">
            <summary>Sets the shim of ServerIdManager.get_ServerId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.ServerIdSetString">
            <summary>Sets the shim of ServerIdManager.set_ServerId(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.AllInstances.ServerIdGet">
            <summary>Sets the shim of ServerIdManager.get_ServerId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.ShimServerIdManager.AllInstances.ServerIdSetString">
            <summary>Sets the shim of ServerIdManager.set_ServerId(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.AckHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.#ctor(System.Boolean,System.TimeSpan,System.TimeSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.Dispose(System.Boolean)">
            <summary>Sets the stub of AckHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.DisposeBoolean">
            <summary>Sets the stub of AckHandler.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.InitializeStub">
            <summary>Initializes a new instance of type StubAckHandler</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubAckHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.ArraySegmentTextReader</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.#ctor(System.ArraySegment{System.Byte},System.Text.Encoding)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Close">
            <summary>Sets the stub of TextReader.Close()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Close01">
            <summary>Sets the stub of TextReader.Close()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Dispose(System.Boolean)">
            <summary>Sets the stub of TextReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.DisposeBoolean">
            <summary>Sets the stub of TextReader.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.InitializeStub">
            <summary>Initializes a new instance of type StubArraySegmentTextReader</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Peek">
            <summary>Sets the stub of TextReader.Peek()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Peek01">
            <summary>Sets the stub of TextReader.Peek()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Read">
            <summary>Sets the stub of TextReader.Read()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Read(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of ArraySegmentTextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.Read01">
            <summary>Sets the stub of TextReader.Read()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadAsyncCharArrayInt32Int32">
            <summary>Sets the stub of TextReader.ReadAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadBlock(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)">
            <summary>Sets the stub of TextReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadBlockAsyncCharArrayInt32Int32">
            <summary>Sets the stub of TextReader.ReadBlockAsync(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadBlockCharArrayInt32Int32">
            <summary>Sets the stub of TextReader.ReadBlock(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadCharArrayInt32Int32">
            <summary>Sets the stub of ArraySegmentTextReader.Read(Char[] buffer, Int32 index, Int32 count)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadLine">
            <summary>Sets the stub of TextReader.ReadLine()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadLine01">
            <summary>Sets the stub of TextReader.ReadLine()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadLineAsync">
            <summary>Sets the stub of TextReader.ReadLineAsync()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadLineAsync01">
            <summary>Sets the stub of TextReader.ReadLineAsync()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadToEnd">
            <summary>Sets the stub of TextReader.ReadToEnd()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadToEnd01">
            <summary>Sets the stub of TextReader.ReadToEnd()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadToEndAsync">
            <summary>Sets the stub of TextReader.ReadToEndAsync()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.ReadToEndAsync01">
            <summary>Sets the stub of TextReader.ReadToEndAsync()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubArraySegmentTextReader.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnection">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.Connection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnection.#ctor(Microsoft.AspNet.SignalR.Messaging.IMessageBus,Newtonsoft.Json.JsonSerializer,System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String},Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IAckHandler,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Infrastructure.IProtectedData)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnection.InitializeStub">
            <summary>Initializes a new instance of type StubConnection</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnection.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnection.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnection.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnectionManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.ConnectionManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnectionManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnectionManager.InitializeStub">
            <summary>Initializes a new instance of type StubConnectionManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnectionManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnectionManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubConnectionManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDataProtectionProviderProtectedData">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.DataProtectionProviderProtectedData</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDataProtectionProviderProtectedData.#ctor(Microsoft.Owin.Security.DataProtection.IDataProtectionProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDataProtectionProviderProtectedData.InitializeStub">
            <summary>Initializes a new instance of type StubDataProtectionProviderProtectedData</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDataProtectionProviderProtectedData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDataProtectionProviderProtectedData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDataProtectionProviderProtectedData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDefaultProtectedData">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.DefaultProtectedData</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDefaultProtectedData.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDefaultProtectedData.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultProtectedData</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDefaultProtectedData.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDefaultProtectedData.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubDefaultProtectedData.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIAckHandler">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IAckHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIAckHandler.#ctor">
            <summary>Initializes a new instance of type StubIAckHandler</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIAckHandler.CreateAckString">
            <summary>Sets the stub of IAckHandler.CreateAck(String id)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIAckHandler.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IAckHandler#CreateAck(System.String)">
            <summary>Sets the stub of IAckHandler.CreateAck(String id)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIAckHandler.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IAckHandler#TriggerAck(System.String)">
            <summary>Sets the stub of IAckHandler.TriggerAck(String id)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIAckHandler.TriggerAckString">
            <summary>Sets the stub of IAckHandler.TriggerAck(String id)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIBinaryWriter">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IBinaryWriter</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIBinaryWriter.#ctor">
            <summary>Initializes a new instance of type StubIBinaryWriter</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIBinaryWriter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IBinaryWriter#Write(System.ArraySegment{System.Byte})">
            <summary>Sets the stub of IBinaryWriter.Write(ArraySegment`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIBinaryWriter.WriteArraySegmentOfByte">
            <summary>Sets the stub of IBinaryWriter.Write(ArraySegment`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IConnectionManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.#ctor">
            <summary>Initializes a new instance of type StubIConnectionManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.GetConnectionContextOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.IPersistentConnectionContext})">
            <summary>Sets stubs of GetConnectionContext()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.GetHubContextOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Microsoft.AspNet.SignalR.IHubContext})">
            <summary>Sets stubs of GetHubContext()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.GetHubContextString">
            <summary>Sets the stub of IConnectionManager.GetHubContext(String hubName)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IConnectionManager#GetConnectionContext``1">
            <summary>Sets the stub of IConnectionManager.GetConnectionContext()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IConnectionManager#GetHubContext``1">
            <summary>Sets the stub of IConnectionManager.GetHubContext()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIConnectionManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IConnectionManager#GetHubContext(System.String)">
            <summary>Sets the stub of IConnectionManager.GetHubContext(String hubName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounter</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.#ctor">
            <summary>Initializes a new instance of type StubIPerformanceCounter</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.AttachBackingFieldToRawValue">
            <summary>Attaches delegates to emulate StubIPerformanceCounter.RawValue as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.Close">
            <summary>Sets the stub of IPerformanceCounter.Close()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.CounterNameGet">
            <summary>Sets the stub of IPerformanceCounter.get_CounterName()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.Decrement">
            <summary>Sets the stub of IPerformanceCounter.Decrement()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.Increment">
            <summary>Sets the stub of IPerformanceCounter.Increment()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.IncrementByInt64">
            <summary>Sets the stub of IPerformanceCounter.IncrementBy(Int64 value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#Close">
            <summary>Sets the stub of IPerformanceCounter.Close()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#Decrement">
            <summary>Sets the stub of IPerformanceCounter.Decrement()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#Increment">
            <summary>Sets the stub of IPerformanceCounter.Increment()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#IncrementBy(System.Int64)">
            <summary>Sets the stub of IPerformanceCounter.IncrementBy(Int64 value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#NextSample">
            <summary>Sets the stub of IPerformanceCounter.NextSample()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#RemoveInstance">
            <summary>Sets the stub of IPerformanceCounter.RemoveInstance()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.NextSample">
            <summary>Sets the stub of IPerformanceCounter.NextSample()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.RawValueGet">
            <summary>Sets the stub of IPerformanceCounter.get_RawValue()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.RawValueSetInt64">
            <summary>Sets the stub of IPerformanceCounter.set_RawValue(Int64 value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.RemoveInstance">
            <summary>Sets the stub of IPerformanceCounter.RemoveInstance()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#CounterName">
            <summary>Sets the stub of IPerformanceCounter.get_CounterName()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounter.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounter#RawValue">
            <summary>Sets the stub of IPerformanceCounter.get_RawValue()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.#ctor">
            <summary>Initializes a new instance of type StubIPerformanceCounterManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionMessagesReceivedPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesReceivedPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionMessagesReceivedTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesReceivedTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionMessagesSentPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesSentPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionMessagesSentTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesSentTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionsConnectedGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsConnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionsCurrentGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsCurrent()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionsDisconnectedGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsDisconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ConnectionsReconnectedGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsReconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsAllPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsAllPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsAllTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsAllTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsHubInvocationPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubInvocationPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsHubInvocationTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubInvocationTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsHubResolutionPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubResolutionPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsHubResolutionTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubResolutionTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsTransportPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsTransportPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ErrorsTransportTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsTransportTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.InitializeStringCancellationToken">
            <summary>Sets the stub of IPerformanceCounterManager.Initialize(String instanceName, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.LoadCounterStringStringStringBoolean">
            <summary>Sets the stub of IPerformanceCounterManager.LoadCounter(String categoryName, String counterName, String instanceName, Boolean isReadOnly)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusAllocatedWorkersGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusAllocatedWorkers()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusBusyWorkersGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusBusyWorkers()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusMessagesPublishedPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesPublishedPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusMessagesPublishedTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesPublishedTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusMessagesReceivedPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusMessagesReceivedTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesReceivedTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusSubscribersCurrentGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusSubscribersCurrent()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusSubscribersPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusSubscribersPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusSubscribersTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusSubscribersTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.MessageBusTopicsCurrentGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusTopicsCurrent()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#Initialize(System.String,System.Threading.CancellationToken)">
            <summary>Sets the stub of IPerformanceCounterManager.Initialize(String instanceName, CancellationToken hostShutdownToken)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#LoadCounter(System.String,System.String,System.String,System.Boolean)">
            <summary>Sets the stub of IPerformanceCounterManager.LoadCounter(String categoryName, String counterName, String instanceName, Boolean isReadOnly)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutErrorsPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutErrorsPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutErrorsTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutErrorsTotal()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutMessageBusMessagesReceivedPerSecGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutMessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutSendQueueLengthGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutSendQueueLength()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutStreamCountBufferingGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutStreamCountBuffering()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutStreamCountOpenGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutStreamCountOpen()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.ScaleoutStreamCountTotalGet">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutStreamCountTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionMessagesReceivedPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionMessagesReceivedTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesReceivedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionMessagesSentPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesSentPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionMessagesSentTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionMessagesSentTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionsConnected">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionsCurrent">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionsDisconnected">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsDisconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ConnectionsReconnected">
            <summary>Sets the stub of IPerformanceCounterManager.get_ConnectionsReconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsAllPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsAllPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsAllTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsAllTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsHubInvocationPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubInvocationPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsHubInvocationTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubInvocationTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsHubResolutionPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubResolutionPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsHubResolutionTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsHubResolutionTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsTransportPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsTransportPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ErrorsTransportTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ErrorsTransportTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusAllocatedWorkers">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusAllocatedWorkers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusBusyWorkers">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusBusyWorkers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusMessagesPublishedPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesPublishedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusMessagesPublishedTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesPublishedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusMessagesReceivedPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusMessagesReceivedTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusMessagesReceivedTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusSubscribersCurrent">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusSubscribersCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusSubscribersPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusSubscribersPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusSubscribersTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusSubscribersTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#MessageBusTopicsCurrent">
            <summary>Sets the stub of IPerformanceCounterManager.get_MessageBusTopicsCurrent()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutErrorsPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutErrorsPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutErrorsTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutErrorsTotal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutMessageBusMessagesReceivedPerSec">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutMessageBusMessagesReceivedPerSec()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutSendQueueLength">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutSendQueueLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutStreamCountBuffering">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutStreamCountBuffering()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutStreamCountOpen">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutStreamCountOpen()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIPerformanceCounterManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IPerformanceCounterManager#ScaleoutStreamCountTotal">
            <summary>Sets the stub of IPerformanceCounterManager.get_ScaleoutStreamCountTotal()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIProtectedData">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IProtectedData</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIProtectedData.#ctor">
            <summary>Initializes a new instance of type StubIProtectedData</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIProtectedData.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IProtectedData#Protect(System.String,System.String)">
            <summary>Sets the stub of IProtectedData.Protect(String data, String purpose)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIProtectedData.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IProtectedData#Unprotect(System.String,System.String)">
            <summary>Sets the stub of IProtectedData.Unprotect(String protectedValue, String purpose)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIProtectedData.ProtectStringString">
            <summary>Sets the stub of IProtectedData.Protect(String data, String purpose)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIProtectedData.UnprotectStringString">
            <summary>Sets the stub of IProtectedData.Unprotect(String protectedValue, String purpose)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIServerIdManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IServerIdManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIServerIdManager.#ctor">
            <summary>Initializes a new instance of type StubIServerIdManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIServerIdManager.ServerIdGet">
            <summary>Sets the stub of IServerIdManager.get_ServerId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIServerIdManager.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IServerIdManager#ServerId">
            <summary>Sets the stub of IServerIdManager.get_ServerId()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.#ctor">
            <summary>Initializes a new instance of type StubIStringMinifier</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IStringMinifier#Minify(System.String)">
            <summary>Sets the stub of IStringMinifier.Minify(String value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IStringMinifier#RemoveUnminified(System.String)">
            <summary>Sets the stub of IStringMinifier.RemoveUnminified(String value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.mansrc::Microsoft#AspNet#SignalR#Infrastructure#IStringMinifier#Unminify(System.String)">
            <summary>Sets the stub of IStringMinifier.Unminify(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.MinifyString">
            <summary>Sets the stub of IStringMinifier.Minify(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.RemoveUnminifiedString">
            <summary>Sets the stub of IStringMinifier.RemoveUnminified(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubIStringMinifier.UnminifyString">
            <summary>Sets the stub of IStringMinifier.Unminify(String value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.PerformanceCounterManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.DefaultDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.#ctor(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.InitializeStub">
            <summary>Initializes a new instance of type StubPerformanceCounterManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPerformanceCounterManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPrincipalUserIdProvider">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.PrincipalUserIdProvider</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPrincipalUserIdProvider.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPrincipalUserIdProvider.InitializeStub">
            <summary>Initializes a new instance of type StubPrincipalUserIdProvider</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPrincipalUserIdProvider.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPrincipalUserIdProvider.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubPrincipalUserIdProvider.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.ProtocolResolver</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver.#ctor(System.Version,System.Version)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver.InitializeStub">
            <summary>Initializes a new instance of type StubProtocolResolver</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubProtocolResolver.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubServerIdManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Infrastructure.ServerIdManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubServerIdManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubServerIdManager.InitializeStub">
            <summary>Initializes a new instance of type StubServerIdManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubServerIdManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubServerIdManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Infrastructure.Fakes.StubServerIdManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.Json.JsonSerializerExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.ParseOf1JsonSerializerArraySegmentOfByteEncoding``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.JsonSerializer,System.ArraySegment{System.Byte},System.Text.Encoding,``0})">
            <summary>Sets the shim of JsonSerializerExtensions.Parse(JsonSerializer serializer, ArraySegment`1&lt;Byte&gt; jsonBuffer, Encoding encoding)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.ParseOf1JsonSerializerString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.JsonSerializer,System.String,``0})">
            <summary>Sets the shim of JsonSerializerExtensions.Parse(JsonSerializer serializer, String json)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.SerializeJsonSerializerObjectTextWriter">
            <summary>Sets the shim of JsonSerializerExtensions.Serialize(JsonSerializer serializer, Object value, TextWriter writer)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonSerializerExtensions.StringifyJsonSerializerObject">
            <summary>Sets the shim of JsonSerializerExtensions.Stringify(JsonSerializer serializer, Object value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility">
            <summary>Shim type of Microsoft.AspNet.SignalR.Json.JsonUtility</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.CamelCaseString">
            <summary>Sets the shim of JsonUtility.CamelCase(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.CreateDefaultSerializer">
            <summary>Sets the shim of JsonUtility.CreateDefaultSerializer()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.CreateDefaultSerializerSettings">
            <summary>Sets the shim of JsonUtility.CreateDefaultSerializerSettings()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.CreateJsonpCallbackStringString">
            <summary>Sets the shim of JsonUtility.CreateJsonpCallback(String callback, String payload)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.IsJavaScriptReservedWordString">
            <summary>Sets the shim of JsonUtility.IsJavaScriptReservedWord(String word)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.IsValidJavaScriptCallbackString">
            <summary>Sets the shim of JsonUtility.IsValidJavaScriptCallback(String callback)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.IsValidJavaScriptFunctionNameString">
            <summary>Sets the shim of JsonUtility.IsValidJavaScriptFunctionName(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.IsValidJavaScriptIdenfitierNonStartCharChar">
            <summary>Sets the shim of JsonUtility.IsValidJavaScriptIdenfitierNonStartChar(Char identifierChar)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.IsValidJavaScriptIdentifierStartCharChar">
            <summary>Sets the shim of JsonUtility.IsValidJavaScriptIdentifierStartChar(Char startChar)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.JavaScriptMimeTypeGet">
            <summary>Sets the shim of JsonUtility.get_JavaScriptMimeType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.JsonMimeTypeGet">
            <summary>Sets the shim of JsonUtility.get_JsonMimeType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.StaticConstructor">
            <summary>Sets the shim of JsonUtility.JsonUtility()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility.TryRejectJSONPRequestConnectionConfigurationIOwinContext">
            <summary>Sets the shim of JsonUtility.TryRejectJSONPRequest(ConnectionConfiguration config, IOwinContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Json.Fakes.ShimJsonUtility._CamelCaseb__0String">
            <summary>Sets the shim of JsonUtility.&lt;CamelCase&gt;b__0(String n)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonValue">
            <summary>Stub type of Microsoft.AspNet.SignalR.Json.IJsonValue</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonValue.#ctor">
            <summary>Initializes a new instance of type StubIJsonValue</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonValue.CanConvertToType">
            <summary>Sets the stub of IJsonValue.CanConvertTo(Type type)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonValue.ConvertToType">
            <summary>Sets the stub of IJsonValue.ConvertTo(Type type)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonValue.mansrc::Microsoft#AspNet#SignalR#Json#IJsonValue#CanConvertTo(System.Type)">
            <summary>Sets the stub of IJsonValue.CanConvertTo(Type type)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonValue.mansrc::Microsoft#AspNet#SignalR#Json#IJsonValue#ConvertTo(System.Type)">
            <summary>Sets the stub of IJsonValue.ConvertTo(Type type)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonWritable">
            <summary>Stub type of Microsoft.AspNet.SignalR.Json.IJsonWritable</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonWritable.#ctor">
            <summary>Initializes a new instance of type StubIJsonWritable</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonWritable.mansrc::Microsoft#AspNet#SignalR#Json#IJsonWritable#WriteJson(System.IO.TextWriter)">
            <summary>Sets the stub of IJsonWritable.WriteJson(TextWriter writer)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Json.Fakes.StubIJsonWritable.WriteJsonTextWriter">
            <summary>Sets the stub of IJsonWritable.WriteJson(TextWriter writer)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.Command</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.#ctor(Microsoft.AspNet.SignalR.Messaging.Command)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.CommandTypeGet">
            <summary>Sets the shim of Command.get_CommandType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.CommandTypeSetCommandType">
            <summary>Sets the shim of Command.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.Constructor">
            <summary>Sets the shim of Command.Command()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.IdGet">
            <summary>Sets the shim of Command.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.IdSetString">
            <summary>Sets the shim of Command.set_Id(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.ValueGet">
            <summary>Sets the shim of Command.get_Value()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.ValueSetString">
            <summary>Sets the shim of Command.set_Value(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.WaitForAckGet">
            <summary>Sets the shim of Command.get_WaitForAck()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.WaitForAckSetBoolean">
            <summary>Sets the shim of Command.set_WaitForAck(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.CommandTypeGet">
            <summary>Sets the shim of Command.get_CommandType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.CommandTypeSetCommandType">
            <summary>Sets the shim of Command.set_CommandType(CommandType value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.IdGet">
            <summary>Sets the shim of Command.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.IdSetString">
            <summary>Sets the shim of Command.set_Id(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.ValueGet">
            <summary>Sets the shim of Command.get_Value()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.ValueSetString">
            <summary>Sets the shim of Command.set_Value(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.WaitForAckGet">
            <summary>Sets the shim of Command.get_WaitForAck()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimCommand.AllInstances.WaitForAckSetBoolean">
            <summary>Sets the shim of Command.set_WaitForAck(Boolean value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.#ctor(Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.ConstructorStringUInt64MessageStoreOfMessage">
            <summary>Sets the shim of LocalEventKeyInfo.LocalEventKeyInfo(String key, UInt64 id, MessageStore`1&lt;Message&gt; store)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.IdGet">
            <summary>Sets the shim of LocalEventKeyInfo.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.IdSetUInt64">
            <summary>Sets the shim of LocalEventKeyInfo.set_Id(UInt64 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.KeyGet">
            <summary>Sets the shim of LocalEventKeyInfo.get_Key()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.KeySetString">
            <summary>Sets the shim of LocalEventKeyInfo.set_Key(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.MessageStoreGet">
            <summary>Sets the shim of LocalEventKeyInfo.get_MessageStore()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.AllInstances.IdGet">
            <summary>Sets the shim of LocalEventKeyInfo.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.AllInstances.IdSetUInt64">
            <summary>Sets the shim of LocalEventKeyInfo.set_Id(UInt64 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.AllInstances.KeyGet">
            <summary>Sets the shim of LocalEventKeyInfo.get_Key()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.AllInstances.KeySetString">
            <summary>Sets the shim of LocalEventKeyInfo.set_Key(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimLocalEventKeyInfo.AllInstances.MessageStoreGet">
            <summary>Sets the shim of LocalEventKeyInfo.get_MessageStore()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.Message</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.#ctor(Microsoft.AspNet.SignalR.Messaging.Message)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.CommandIdGet">
            <summary>Sets the shim of Message.get_CommandId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.CommandIdSetString">
            <summary>Sets the shim of Message.set_CommandId(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.Constructor">
            <summary>Sets the shim of Message.Message()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.ConstructorStringStringArraySegmentOfByte">
            <summary>Sets the shim of Message.Message(String source, String key, ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.ConstructorStringStringString">
            <summary>Sets the shim of Message.Message(String source, String key, String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.EncodingGet">
            <summary>Sets the shim of Message.get_Encoding()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.EncodingSetEncoding">
            <summary>Sets the shim of Message.set_Encoding(Encoding value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.FilterGet">
            <summary>Sets the shim of Message.get_Filter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.FilterSetString">
            <summary>Sets the shim of Message.set_Filter(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.GetString">
            <summary>Sets the shim of Message.GetString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.IsAckGet">
            <summary>Sets the shim of Message.get_IsAck()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.IsAckSetBoolean">
            <summary>Sets the shim of Message.set_IsAck(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.IsCommandGet">
            <summary>Sets the shim of Message.get_IsCommand()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.KeyGet">
            <summary>Sets the shim of Message.get_Key()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.KeySetString">
            <summary>Sets the shim of Message.set_Key(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.MappingIdGet">
            <summary>Sets the shim of Message.get_MappingId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.MappingIdSetUInt64">
            <summary>Sets the shim of Message.set_MappingId(UInt64 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.ReadFromStream">
            <summary>Sets the shim of Message.ReadFrom(Stream stream)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.SourceGet">
            <summary>Sets the shim of Message.get_Source()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.SourceSetString">
            <summary>Sets the shim of Message.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.StaticConstructor">
            <summary>Sets the shim of Message.Message()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.StreamIndexGet">
            <summary>Sets the shim of Message.get_StreamIndex()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.StreamIndexSetInt32">
            <summary>Sets the shim of Message.set_StreamIndex(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.ValueGet">
            <summary>Sets the shim of Message.get_Value()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.ValueSetArraySegmentOfByte">
            <summary>Sets the shim of Message.set_Value(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.WaitForAckGet">
            <summary>Sets the shim of Message.get_WaitForAck()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.WaitForAckSetBoolean">
            <summary>Sets the shim of Message.set_WaitForAck(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.WriteToStream">
            <summary>Sets the shim of Message.WriteTo(Stream stream)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.CommandIdGet">
            <summary>Sets the shim of Message.get_CommandId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.CommandIdSetString">
            <summary>Sets the shim of Message.set_CommandId(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.EncodingGet">
            <summary>Sets the shim of Message.get_Encoding()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.EncodingSetEncoding">
            <summary>Sets the shim of Message.set_Encoding(Encoding value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.FilterGet">
            <summary>Sets the shim of Message.get_Filter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.FilterSetString">
            <summary>Sets the shim of Message.set_Filter(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.GetString">
            <summary>Sets the shim of Message.GetString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.IsAckGet">
            <summary>Sets the shim of Message.get_IsAck()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.IsAckSetBoolean">
            <summary>Sets the shim of Message.set_IsAck(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.IsCommandGet">
            <summary>Sets the shim of Message.get_IsCommand()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.KeyGet">
            <summary>Sets the shim of Message.get_Key()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.KeySetString">
            <summary>Sets the shim of Message.set_Key(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.MappingIdGet">
            <summary>Sets the shim of Message.get_MappingId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.MappingIdSetUInt64">
            <summary>Sets the shim of Message.set_MappingId(UInt64 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.SourceGet">
            <summary>Sets the shim of Message.get_Source()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.SourceSetString">
            <summary>Sets the shim of Message.set_Source(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.StreamIndexGet">
            <summary>Sets the shim of Message.get_StreamIndex()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.StreamIndexSetInt32">
            <summary>Sets the shim of Message.set_StreamIndex(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.ValueGet">
            <summary>Sets the shim of Message.get_Value()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.ValueSetArraySegmentOfByte">
            <summary>Sets the shim of Message.set_Value(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.WaitForAckGet">
            <summary>Sets the shim of Message.get_WaitForAck()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.WaitForAckSetBoolean">
            <summary>Sets the shim of Message.set_WaitForAck(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessage.AllInstances.WriteToStream">
            <summary>Sets the shim of Message.WriteTo(Stream stream)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.MessageBroker</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.#ctor(Microsoft.AspNet.SignalR.Messaging.MessageBroker)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.ConstructorIPerformanceCounterManager">
            <summary>Sets the shim of MessageBroker.MessageBroker(IPerformanceCounterManager performanceCounterManager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.Dispose">
            <summary>Sets the shim of MessageBroker.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.DisposeBoolean">
            <summary>Sets the shim of MessageBroker.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.ScheduleISubscription">
            <summary>Sets the shim of MessageBroker.Schedule(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.ScheduleWorkISubscription">
            <summary>Sets the shim of MessageBroker.ScheduleWork(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.TraceGet">
            <summary>Sets the shim of MessageBroker.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.TraceSetTraceSource">
            <summary>Sets the shim of MessageBroker.set_Trace(TraceSource value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker._ScheduleWorkb__0Object">
            <summary>Sets the shim of MessageBroker.&lt;ScheduleWork&gt;b__0(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances.Dispose">
            <summary>Sets the shim of MessageBroker.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MessageBroker.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances.ScheduleISubscription">
            <summary>Sets the shim of MessageBroker.Schedule(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances.ScheduleWorkISubscription">
            <summary>Sets the shim of MessageBroker.ScheduleWork(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances.TraceGet">
            <summary>Sets the shim of MessageBroker.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBroker.AllInstances.TraceSetTraceSource">
            <summary>Sets the shim of MessageBroker.set_Trace(TraceSource value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.MessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.#ctor(Microsoft.AspNet.SignalR.Messaging.MessageBus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.Bind(Microsoft.AspNet.SignalR.Messaging.IMessageBus)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AddEventISubscriberString">
            <summary>Sets the shim of MessageBus.AddEvent(ISubscriber subscriber, String eventKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.ConstructorIDependencyResolver">
            <summary>Sets the shim of MessageBus.MessageBus(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.ConstructorIStringMinifierITraceManagerIPerformanceCounterManagerIConfigurationManagerInt32">
            <summary>Sets the shim of MessageBus.MessageBus(IStringMinifier stringMinifier, ITraceManager traceManager, IPerformanceCounterManager performanceCounterManager, IConfigurationManager configurationManager, Int32 maxTopicsWithNoSubscriptions)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.CountersGet">
            <summary>Sets the shim of MessageBus.get_Counters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.CountersSetIPerformanceCounterManager">
            <summary>Sets the shim of MessageBus.set_Counters(IPerformanceCounterManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.CreateSubscriptionISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of MessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.CreateTopicString">
            <summary>Sets the shim of MessageBus.CreateTopic(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.DestroyTopicCoreStringTopic">
            <summary>Sets the shim of MessageBus.DestroyTopicCore(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.DestroyTopicStringTopic">
            <summary>Sets the shim of MessageBus.DestroyTopic(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.Dispose">
            <summary>Sets the shim of MessageBus.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.DisposeBoolean">
            <summary>Sets the shim of MessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.DisposeSubscriptionObject">
            <summary>Sets the shim of MessageBus.DisposeSubscription(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.GarbageCollectTopics">
            <summary>Sets the shim of MessageBus.GarbageCollectTopics()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.GetTopicString">
            <summary>Sets the shim of MessageBus.GetTopic(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.PublishMessage">
            <summary>Sets the shim of MessageBus.Publish(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.RemoveEventISubscriberString">
            <summary>Sets the shim of MessageBus.RemoveEvent(ISubscriber subscriber, String eventKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.SaveMessage">
            <summary>Sets the shim of MessageBus.Save(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.ScheduleEventString">
            <summary>Sets the shim of MessageBus.ScheduleEvent(String eventKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.ScheduleTopicTopic">
            <summary>Sets the shim of MessageBus.ScheduleTopic(Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.StaticConstructor">
            <summary>Sets the shim of MessageBus.MessageBus()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.SubscribeISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of MessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.SubscribeTopicString">
            <summary>Sets the shim of MessageBus.SubscribeTopic(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.TopicsGet">
            <summary>Sets the shim of MessageBus.get_Topics()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.TopicsSetTopicLookup">
            <summary>Sets the shim of MessageBus.set_Topics(TopicLookup value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.TraceGet">
            <summary>Sets the shim of MessageBus.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus._GarbageCollectTopicsb__3KeyValuePairOfStringTopicKeyValuePairOfStringTopic">
            <summary>Sets the shim of MessageBus.&lt;GarbageCollectTopics&gt;b__3(KeyValuePair`2&lt;String,Topic&gt; leftPair, KeyValuePair`2&lt;String,Topic&gt; rightPair)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus._ctorb__1Object">
            <summary>Sets the shim of MessageBus.&lt;.ctor&gt;b__1(Object _)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.AddEventISubscriberString">
            <summary>Sets the shim of MessageBus.AddEvent(ISubscriber subscriber, String eventKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.CountersGet">
            <summary>Sets the shim of MessageBus.get_Counters()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.CountersSetIPerformanceCounterManager">
            <summary>Sets the shim of MessageBus.set_Counters(IPerformanceCounterManager value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.CreateSubscriptionISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of MessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.CreateTopicString">
            <summary>Sets the shim of MessageBus.CreateTopic(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.DestroyTopicCoreStringTopic">
            <summary>Sets the shim of MessageBus.DestroyTopicCore(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.DestroyTopicStringTopic">
            <summary>Sets the shim of MessageBus.DestroyTopic(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.Dispose">
            <summary>Sets the shim of MessageBus.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.DisposeSubscriptionObject">
            <summary>Sets the shim of MessageBus.DisposeSubscription(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.GarbageCollectTopics">
            <summary>Sets the shim of MessageBus.GarbageCollectTopics()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.GetTopicString">
            <summary>Sets the shim of MessageBus.GetTopic(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.PublishMessage">
            <summary>Sets the shim of MessageBus.Publish(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.RemoveEventISubscriberString">
            <summary>Sets the shim of MessageBus.RemoveEvent(ISubscriber subscriber, String eventKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.SaveMessage">
            <summary>Sets the shim of MessageBus.Save(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.ScheduleEventString">
            <summary>Sets the shim of MessageBus.ScheduleEvent(String eventKey)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.ScheduleTopicTopic">
            <summary>Sets the shim of MessageBus.ScheduleTopic(Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.SubscribeISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of MessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.SubscribeTopicString">
            <summary>Sets the shim of MessageBus.SubscribeTopic(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.TopicsGet">
            <summary>Sets the shim of MessageBus.get_Topics()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.TopicsSetTopicLookup">
            <summary>Sets the shim of MessageBus.set_Topics(TopicLookup value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances.TraceGet">
            <summary>Sets the shim of MessageBus.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBus.AllInstances._ctorb__1Object">
            <summary>Sets the shim of MessageBus.&lt;.ctor&gt;b__1(Object _)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.MessageBusExtensions</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.EnumerateOf1IListOfArraySegmentOfMessageFuncOfMessageBooleanActionOfM0MessageM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Func{Microsoft.AspNet.SignalR.Messaging.Message,System.Boolean},System.Action{``0,Microsoft.AspNet.SignalR.Messaging.Message},``0})">
            <summary>Sets the shim of MessageBusExtensions.Enumerate(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; messages, Func`2&lt;Message,Boolean&gt; filter, Action`2&lt;!!0,Message&gt; onMessage, !!0 state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.AckIMessageBusStringString">
            <summary>Sets the shim of MessageBusExtensions.Ack(IMessageBus bus, String connectionId, String commandId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.EnumerateIListOfArraySegmentOfMessageActionOfMessage">
            <summary>Sets the shim of MessageBusExtensions.Enumerate(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; messages, Action`1&lt;Message&gt; onMessage)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions.PublishIMessageBusStringStringString">
            <summary>Sets the shim of MessageBusExtensions.Publish(IMessageBus bus, String source, String key, String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageBusExtensions._Enumerateb__0Message">
            <summary>Sets the shim of MessageBusExtensions.&lt;Enumerate&gt;b__0(Message message)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.MessageResult</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult.StaticConstructor">
            <summary>Sets the shim of MessageResult.MessageResult()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.MessageStore`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.#ctor(Microsoft.AspNet.SignalR.Messaging.MessageStore{`0})">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AddT0">
            <summary>Sets the shim of MessageStore`1.Add(!0 message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.ConstructorUInt32">
            <summary>Sets the shim of MessageStore`1.MessageStore`1(UInt32 capacity)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.ConstructorUInt32UInt32">
            <summary>Sets the shim of MessageStore`1.MessageStore`1(UInt32 capacity, UInt32 offset)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.GetMessageCount">
            <summary>Sets the shim of MessageStore`1.GetMessageCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.GetMessageIdUInt64UInt32">
            <summary>Sets the shim of MessageStore`1.GetMessageId(UInt64 fragmentNum, UInt32 offset)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.GetMessagesImplUInt64Int32">
            <summary>Sets the shim of MessageStore`1.GetMessagesImpl(UInt64 firstMessageIdRequestedByClient, Int32 maxMessages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.GetMessagesUInt64Int32">
            <summary>Sets the shim of MessageStore`1.GetMessages(UInt64 firstMessageId, Int32 maxMessages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.StaticConstructor">
            <summary>Sets the shim of MessageStore`1.MessageStore`1()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.TryAddImplT0UInt64Out">
            <summary>Sets the shim of MessageStore`1.TryAddImpl(!0 message, UInt64&amp; newMessageId)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.AddT0">
            <summary>Sets the shim of MessageStore`1.Add(!0 message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.GetFragmentOffsetsUInt64UInt64OutInt32OutInt32Out">
            <summary>Sets the shim of MessageStore`1.GetFragmentOffsets(UInt64 messageId, UInt64&amp; fragmentNum, Int32&amp; idxIntoFragmentsArray, Int32&amp; idxIntoFragment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.GetMessageCount">
            <summary>Sets the shim of MessageStore`1.GetMessageCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.GetMessageIdUInt64UInt32">
            <summary>Sets the shim of MessageStore`1.GetMessageId(UInt64 fragmentNum, UInt32 offset)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.GetMessagesImplUInt64Int32">
            <summary>Sets the shim of MessageStore`1.GetMessagesImpl(UInt64 firstMessageIdRequestedByClient, Int32 maxMessages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.GetMessagesUInt64Int32">
            <summary>Sets the shim of MessageStore`1.GetMessages(UInt64 firstMessageId, Int32 maxMessages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStore`1.AllInstances.TryAddImplT0UInt64Out">
            <summary>Sets the shim of MessageStore`1.TryAddImpl(!0 message, UInt64&amp; newMessageId)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStoreResult`1">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.MessageStoreResult`1</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStoreResult`1.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStoreResult`1.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStoreResult`1.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStoreResult`1.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimMessageStoreResult`1.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.Constructor">
            <summary>Sets the shim of ScaleoutConfiguration.ScaleoutConfiguration()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.MaxQueueLengthGet">
            <summary>Sets the shim of ScaleoutConfiguration.get_MaxQueueLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.MaxQueueLengthSetInt32">
            <summary>Sets the shim of ScaleoutConfiguration.set_MaxQueueLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.QueueBehaviorGet">
            <summary>Sets the shim of ScaleoutConfiguration.get_QueueBehavior()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.QueueBehaviorSetQueuingBehavior">
            <summary>Sets the shim of ScaleoutConfiguration.set_QueueBehavior(QueuingBehavior value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.AllInstances.MaxQueueLengthGet">
            <summary>Sets the shim of ScaleoutConfiguration.get_MaxQueueLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.AllInstances.MaxQueueLengthSetInt32">
            <summary>Sets the shim of ScaleoutConfiguration.set_MaxQueueLength(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.AllInstances.QueueBehaviorGet">
            <summary>Sets the shim of ScaleoutConfiguration.get_QueueBehavior()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutConfiguration.AllInstances.QueueBehaviorSetQueuingBehavior">
            <summary>Sets the shim of ScaleoutConfiguration.set_QueueBehavior(QueuingBehavior value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.ConstructorUInt64ScaleoutMessage">
            <summary>Sets the shim of ScaleoutMapping.ScaleoutMapping(UInt64 id, ScaleoutMessage message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.ConstructorUInt64ScaleoutMessageIListOfLocalEventKeyInfo">
            <summary>Sets the shim of ScaleoutMapping.ScaleoutMapping(UInt64 id, ScaleoutMessage message, IList`1&lt;LocalEventKeyInfo&gt; localKeyInfo)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.IdGet">
            <summary>Sets the shim of ScaleoutMapping.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.IdSetUInt64">
            <summary>Sets the shim of ScaleoutMapping.set_Id(UInt64 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.LocalKeyInfoGet">
            <summary>Sets the shim of ScaleoutMapping.get_LocalKeyInfo()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.LocalKeyInfoSetIListOfLocalEventKeyInfo">
            <summary>Sets the shim of ScaleoutMapping.set_LocalKeyInfo(IList`1&lt;LocalEventKeyInfo&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.ServerCreationTimeGet">
            <summary>Sets the shim of ScaleoutMapping.get_ServerCreationTime()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.ServerCreationTimeSetDateTime">
            <summary>Sets the shim of ScaleoutMapping.set_ServerCreationTime(DateTime value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances.IdGet">
            <summary>Sets the shim of ScaleoutMapping.get_Id()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances.IdSetUInt64">
            <summary>Sets the shim of ScaleoutMapping.set_Id(UInt64 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances.LocalKeyInfoGet">
            <summary>Sets the shim of ScaleoutMapping.get_LocalKeyInfo()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances.LocalKeyInfoSetIListOfLocalEventKeyInfo">
            <summary>Sets the shim of ScaleoutMapping.set_LocalKeyInfo(IList`1&lt;LocalEventKeyInfo&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances.ServerCreationTimeGet">
            <summary>Sets the shim of ScaleoutMapping.get_ServerCreationTime()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMapping.AllInstances.ServerCreationTimeSetDateTime">
            <summary>Sets the shim of ScaleoutMapping.set_ServerCreationTime(DateTime value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.AddUInt64ScaleoutMessageIListOfLocalEventKeyInfo">
            <summary>Sets the shim of ScaleoutMappingStore.Add(UInt64 id, ScaleoutMessage message, IList`1&lt;LocalEventKeyInfo&gt; localKeyInfo)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.Constructor">
            <summary>Sets the shim of ScaleoutMappingStore.ScaleoutMappingStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.GetEnumeratorUInt64">
            <summary>Sets the shim of ScaleoutMappingStore.GetEnumerator(UInt64 id)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.MaxMappingGet">
            <summary>Sets the shim of ScaleoutMappingStore.get_MaxMapping()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.AllInstances.AddUInt64ScaleoutMessageIListOfLocalEventKeyInfo">
            <summary>Sets the shim of ScaleoutMappingStore.Add(UInt64 id, ScaleoutMessage message, IList`1&lt;LocalEventKeyInfo&gt; localKeyInfo)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.AllInstances.GetEnumeratorUInt64">
            <summary>Sets the shim of ScaleoutMappingStore.GetEnumerator(UInt64 id)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMappingStore.AllInstances.MaxMappingGet">
            <summary>Sets the shim of ScaleoutMappingStore.get_MaxMapping()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.Constructor">
            <summary>Sets the shim of ScaleoutMessage.ScaleoutMessage()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.ConstructorIListOfMessage">
            <summary>Sets the shim of ScaleoutMessage.ScaleoutMessage(IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.FromBytesByteArray">
            <summary>Sets the shim of ScaleoutMessage.FromBytes(Byte[] data)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.MessagesGet">
            <summary>Sets the shim of ScaleoutMessage.get_Messages()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.MessagesSetIListOfMessage">
            <summary>Sets the shim of ScaleoutMessage.set_Messages(IList`1&lt;Message&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.ServerCreationTimeGet">
            <summary>Sets the shim of ScaleoutMessage.get_ServerCreationTime()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.ServerCreationTimeSetDateTime">
            <summary>Sets the shim of ScaleoutMessage.set_ServerCreationTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.ToBytes">
            <summary>Sets the shim of ScaleoutMessage.ToBytes()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.AllInstances.MessagesGet">
            <summary>Sets the shim of ScaleoutMessage.get_Messages()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.AllInstances.MessagesSetIListOfMessage">
            <summary>Sets the shim of ScaleoutMessage.set_Messages(IList`1&lt;Message&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.AllInstances.ServerCreationTimeGet">
            <summary>Sets the shim of ScaleoutMessage.get_ServerCreationTime()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.AllInstances.ServerCreationTimeSetDateTime">
            <summary>Sets the shim of ScaleoutMessage.set_ServerCreationTime(DateTime value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessage.AllInstances.ToBytes">
            <summary>Sets the shim of ScaleoutMessage.ToBytes()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.Bind(Microsoft.AspNet.SignalR.Messaging.IMessageBus)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.CloseInt32">
            <summary>Sets the shim of ScaleoutMessageBus.Close(Int32 streamIndex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.ConstructorIDependencyResolverScaleoutConfiguration">
            <summary>Sets the shim of ScaleoutMessageBus.ScaleoutMessageBus(IDependencyResolver resolver, ScaleoutConfiguration configuration)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.CreateSubscriptionISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of ScaleoutMessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.DisposeBoolean">
            <summary>Sets the shim of ScaleoutMessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.OnErrorInt32Exception">
            <summary>Sets the shim of ScaleoutMessageBus.OnError(Int32 streamIndex, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.OnReceivedCoreInt32UInt64ScaleoutMessage">
            <summary>Sets the shim of ScaleoutMessageBus.OnReceivedCore(Int32 streamIndex, UInt64 id, ScaleoutMessage scaleoutMessage)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.OnReceivedInt32UInt64ScaleoutMessage">
            <summary>Sets the shim of ScaleoutMessageBus.OnReceived(Int32 streamIndex, UInt64 id, ScaleoutMessage message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.OpenInt32">
            <summary>Sets the shim of ScaleoutMessageBus.Open(Int32 streamIndex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.PublishMessage">
            <summary>Sets the shim of ScaleoutMessageBus.Publish(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.SendIListOfMessage">
            <summary>Sets the shim of ScaleoutMessageBus.Send(IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.SendImplIEnumeratorOfIGroupingOfStringMessageTaskCompletionSourceOfObject">
            <summary>Sets the shim of ScaleoutMessageBus.SendImpl(IEnumerator`1&lt;IGrouping`2&lt;String,Message&gt;&gt; enumerator, TaskCompletionSource`1&lt;Object&gt; taskCompletionSource)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.SendInt32IListOfMessage">
            <summary>Sets the shim of ScaleoutMessageBus.Send(Int32 streamIndex, IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.StreamCountGet">
            <summary>Sets the shim of ScaleoutMessageBus.get_StreamCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus._SendImplb__bIEnumeratorOfIGroupingOfStringMessageTaskCompletionSourceOfObject">
            <summary>Sets the shim of ScaleoutMessageBus.&lt;SendImpl&gt;b__b(IEnumerator`1&lt;IGrouping`2&lt;String,Message&gt;&gt; enumer, TaskCompletionSource`1&lt;Object&gt; tcs)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus._Sendb__9Message">
            <summary>Sets the shim of ScaleoutMessageBus.&lt;Send&gt;b__9(Message m)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.CloseInt32">
            <summary>Sets the shim of ScaleoutMessageBus.Close(Int32 streamIndex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.CreateSubscriptionISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the shim of ScaleoutMessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ScaleoutMessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.OnErrorInt32Exception">
            <summary>Sets the shim of ScaleoutMessageBus.OnError(Int32 streamIndex, Exception exception)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.OnReceivedCoreInt32UInt64ScaleoutMessage">
            <summary>Sets the shim of ScaleoutMessageBus.OnReceivedCore(Int32 streamIndex, UInt64 id, ScaleoutMessage scaleoutMessage)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.OnReceivedInt32UInt64ScaleoutMessage">
            <summary>Sets the shim of ScaleoutMessageBus.OnReceived(Int32 streamIndex, UInt64 id, ScaleoutMessage message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.OpenInt32">
            <summary>Sets the shim of ScaleoutMessageBus.Open(Int32 streamIndex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.PublishMessage">
            <summary>Sets the shim of ScaleoutMessageBus.Publish(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.SendIListOfMessage">
            <summary>Sets the shim of ScaleoutMessageBus.Send(IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.SendImplIEnumeratorOfIGroupingOfStringMessageTaskCompletionSourceOfObject">
            <summary>Sets the shim of ScaleoutMessageBus.SendImpl(IEnumerator`1&lt;IGrouping`2&lt;String,Message&gt;&gt; enumerator, TaskCompletionSource`1&lt;Object&gt; taskCompletionSource)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.SendInt32IListOfMessage">
            <summary>Sets the shim of ScaleoutMessageBus.Send(Int32 streamIndex, IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances.StreamCountGet">
            <summary>Sets the shim of ScaleoutMessageBus.get_StreamCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutMessageBus.AllInstances._SendImplb__bIEnumeratorOfIGroupingOfStringMessageTaskCompletionSourceOfObject">
            <summary>Sets the shim of ScaleoutMessageBus.&lt;SendImpl&gt;b__b(IEnumerator`1&lt;IGrouping`2&lt;String,Message&gt;&gt; enumer, TaskCompletionSource`1&lt;Object&gt; tcs)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutStore</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutStore)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AddScaleoutMapping">
            <summary>Sets the shim of ScaleoutStore.Add(ScaleoutMapping mapping)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.ConstructorUInt32">
            <summary>Sets the shim of ScaleoutStore.ScaleoutStore(UInt32 capacity)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.FragmentCountGet">
            <summary>Sets the shim of ScaleoutStore.get_FragmentCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.FragmentSizeGet">
            <summary>Sets the shim of ScaleoutStore.get_FragmentSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.GetAllMessagesUInt64">
            <summary>Sets the shim of ScaleoutStore.GetAllMessages(UInt64 minMessageId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.GetFragmentOffsetUInt64">
            <summary>Sets the shim of ScaleoutStore.GetFragmentOffset(UInt64 messageId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.GetMessageIdUInt64UInt32">
            <summary>Sets the shim of ScaleoutStore.GetMessageId(UInt64 fragmentNum, UInt32 offset)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.GetMessagesByMappingIdUInt64">
            <summary>Sets the shim of ScaleoutStore.GetMessagesByMappingId(UInt64 mappingId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.GetMessagesUInt64">
            <summary>Sets the shim of ScaleoutStore.GetMessages(UInt64 firstMessageIdRequestedByClient)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.MaxMappingGet">
            <summary>Sets the shim of ScaleoutStore.get_MaxMapping()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.MinMappingIdGet">
            <summary>Sets the shim of ScaleoutStore.get_MinMappingId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.StaticConstructor">
            <summary>Sets the shim of ScaleoutStore.ScaleoutStore()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.TryAddImplScaleoutMappingUInt64Out">
            <summary>Sets the shim of ScaleoutStore.TryAddImpl(ScaleoutMapping mapping, UInt64&amp; newMessageId)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.AddScaleoutMapping">
            <summary>Sets the shim of ScaleoutStore.Add(ScaleoutMapping mapping)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.FragmentCountGet">
            <summary>Sets the shim of ScaleoutStore.get_FragmentCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.FragmentSizeGet">
            <summary>Sets the shim of ScaleoutStore.get_FragmentSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.GetAllMessagesUInt64">
            <summary>Sets the shim of ScaleoutStore.GetAllMessages(UInt64 minMessageId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.GetFragmentOffsetUInt64">
            <summary>Sets the shim of ScaleoutStore.GetFragmentOffset(UInt64 messageId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.GetFragmentOffsetsUInt64UInt64OutInt32OutInt32Out">
            <summary>Sets the shim of ScaleoutStore.GetFragmentOffsets(UInt64 messageId, UInt64&amp; fragmentNum, Int32&amp; idxIntoFragmentsArray, Int32&amp; idxIntoFragment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.GetMessageIdUInt64UInt32">
            <summary>Sets the shim of ScaleoutStore.GetMessageId(UInt64 fragmentNum, UInt32 offset)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.GetMessagesByMappingIdUInt64">
            <summary>Sets the shim of ScaleoutStore.GetMessagesByMappingId(UInt64 mappingId)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.GetMessagesUInt64">
            <summary>Sets the shim of ScaleoutStore.GetMessages(UInt64 firstMessageIdRequestedByClient)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.MaxMappingGet">
            <summary>Sets the shim of ScaleoutStore.get_MaxMapping()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.MinMappingIdGet">
            <summary>Sets the shim of ScaleoutStore.get_MinMappingId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutStore.AllInstances.TryAddImplScaleoutMappingUInt64Out">
            <summary>Sets the shim of ScaleoutStore.TryAddImpl(ScaleoutMapping mapping, UInt64&amp; newMessageId)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.#ctor(Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.Bind(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.BeforeInvokeObject">
            <summary>Sets the shim of ScaleoutSubscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.ConstructorStringIListOfStringStringIListOfScaleoutMappingStoreFuncOfMessageResultObjectTaskOfBooleanInt32IPerformanceCounterManagerObject">
            <summary>Sets the shim of ScaleoutSubscription.ScaleoutSubscription(String identity, IList`1&lt;String&gt; eventKeys, String cursor, IList`1&lt;ScaleoutMappingStore&gt; streams, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, IPerformanceCounterManager counters, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.ExtractMessagesInt32ScaleoutMappingIListOfArraySegmentOfMessageInt32Ref">
            <summary>Sets the shim of ScaleoutSubscription.ExtractMessages(Int32 streamIndex, ScaleoutMapping mapping, IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.GetMappings">
            <summary>Sets the shim of ScaleoutSubscription.GetMappings()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.PerformWorkIListOfArraySegmentOfMessageInt32OutObjectOut">
            <summary>Sets the shim of ScaleoutSubscription.PerformWork(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount, Object&amp; state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.WriteCursorTextWriter">
            <summary>Sets the shim of ScaleoutSubscription.WriteCursor(TextWriter textWriter)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.AllInstances.BeforeInvokeObject">
            <summary>Sets the shim of ScaleoutSubscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.AllInstances.ExtractMessagesInt32ScaleoutMappingIListOfArraySegmentOfMessageInt32Ref">
            <summary>Sets the shim of ScaleoutSubscription.ExtractMessages(Int32 streamIndex, ScaleoutMapping mapping, IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.AllInstances.GetMappings">
            <summary>Sets the shim of ScaleoutSubscription.GetMappings()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.AllInstances.PerformWorkIListOfArraySegmentOfMessageInt32OutObjectOut">
            <summary>Sets the shim of ScaleoutSubscription.PerformWork(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount, Object&amp; state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimScaleoutSubscription.AllInstances.WriteCursorTextWriter">
            <summary>Sets the shim of ScaleoutSubscription.WriteCursor(TextWriter textWriter)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.Subscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.#ctor(Microsoft.AspNet.SignalR.Messaging.Subscription)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.Bind(Microsoft.AspNet.SignalR.Messaging.ISubscription)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AddEventCoreString">
            <summary>Sets the shim of Subscription.AddEventCore(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AddEventStringTopic">
            <summary>Sets the shim of Subscription.AddEvent(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AliveGet">
            <summary>Sets the shim of Subscription.get_Alive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.BeforeInvokeObject">
            <summary>Sets the shim of Subscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.ConstructorStringIListOfStringFuncOfMessageResultObjectTaskOfBooleanInt32IPerformanceCounterManagerObject">
            <summary>Sets the shim of Subscription.Subscription(String identity, IList`1&lt;String&gt; eventKeys, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, IPerformanceCounterManager counters, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.DisposableGet">
            <summary>Sets the shim of Subscription.get_Disposable()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.DisposableSetIDisposable">
            <summary>Sets the shim of Subscription.set_Disposable(IDisposable value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.Dispose">
            <summary>Sets the shim of Subscription.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.DisposeBoolean">
            <summary>Sets the shim of Subscription.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.EventKeysGet">
            <summary>Sets the shim of Subscription.get_EventKeys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.EventKeysSetIListOfString">
            <summary>Sets the shim of Subscription.set_EventKeys(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.IdentityGet">
            <summary>Sets the shim of Subscription.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.IdentitySetString">
            <summary>Sets the shim of Subscription.set_Identity(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.InvokeMessageResult">
            <summary>Sets the shim of Subscription.Invoke(MessageResult result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.InvokeMessageResultActionOfObjectObject">
            <summary>Sets the shim of Subscription.Invoke(MessageResult result, Action`1&lt;Object&gt; beforeInvoke, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.MaxMessagesGet">
            <summary>Sets the shim of Subscription.get_MaxMessages()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.MaxMessagesSetInt32">
            <summary>Sets the shim of Subscription.set_MaxMessages(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.RemoveEventString">
            <summary>Sets the shim of Subscription.RemoveEvent(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.SetEventTopicStringTopic">
            <summary>Sets the shim of Subscription.SetEventTopic(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.SetQueued">
            <summary>Sets the shim of Subscription.SetQueued()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.UnsetQueued">
            <summary>Sets the shim of Subscription.UnsetQueued()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.Work">
            <summary>Sets the shim of Subscription.Work()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription._Invokeb__0Object">
            <summary>Sets the shim of Subscription.&lt;Invoke&gt;b__0(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription._Workb__6Object">
            <summary>Sets the shim of Subscription.&lt;Work&gt;b__6(Object s)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.AddEventCoreString">
            <summary>Sets the shim of Subscription.AddEventCore(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.AddEventStringTopic">
            <summary>Sets the shim of Subscription.AddEvent(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.AliveGet">
            <summary>Sets the shim of Subscription.get_Alive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.BeforeInvokeObject">
            <summary>Sets the shim of Subscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.DisposableGet">
            <summary>Sets the shim of Subscription.get_Disposable()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.DisposableSetIDisposable">
            <summary>Sets the shim of Subscription.set_Disposable(IDisposable value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.Dispose">
            <summary>Sets the shim of Subscription.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Subscription.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.EventKeysGet">
            <summary>Sets the shim of Subscription.get_EventKeys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.EventKeysSetIListOfString">
            <summary>Sets the shim of Subscription.set_EventKeys(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.IdentityGet">
            <summary>Sets the shim of Subscription.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.IdentitySetString">
            <summary>Sets the shim of Subscription.set_Identity(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.InvokeMessageResult">
            <summary>Sets the shim of Subscription.Invoke(MessageResult result)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.InvokeMessageResultActionOfObjectObject">
            <summary>Sets the shim of Subscription.Invoke(MessageResult result, Action`1&lt;Object&gt; beforeInvoke, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.MaxMessagesGet">
            <summary>Sets the shim of Subscription.get_MaxMessages()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.MaxMessagesSetInt32">
            <summary>Sets the shim of Subscription.set_MaxMessages(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.RemoveEventString">
            <summary>Sets the shim of Subscription.RemoveEvent(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.SetEventTopicStringTopic">
            <summary>Sets the shim of Subscription.SetEventTopic(String key, Topic topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.SetQueued">
            <summary>Sets the shim of Subscription.SetQueued()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.UnsetQueued">
            <summary>Sets the shim of Subscription.UnsetQueued()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances.Work">
            <summary>Sets the shim of Subscription.Work()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimSubscription.AllInstances._Workb__6Object">
            <summary>Sets the shim of Subscription.&lt;Work&gt;b__6(Object s)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.Topic</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.#ctor(Microsoft.AspNet.SignalR.Messaging.Topic)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AddSubscriptionISubscription">
            <summary>Sets the shim of Topic.AddSubscription(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.ConstructorUInt32TimeSpan">
            <summary>Sets the shim of Topic.Topic(UInt32 storeSize, TimeSpan lifespan)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.IsExpiredGet">
            <summary>Sets the shim of Topic.get_IsExpired()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.LastUsedGet">
            <summary>Sets the shim of Topic.get_LastUsed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.MarkUsed">
            <summary>Sets the shim of Topic.MarkUsed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.RemoveSubscriptionISubscription">
            <summary>Sets the shim of Topic.RemoveSubscription(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.StoreGet">
            <summary>Sets the shim of Topic.get_Store()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.StoreSetMessageStoreOfMessage">
            <summary>Sets the shim of Topic.set_Store(MessageStore`1&lt;Message&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.SubscriptionLockGet">
            <summary>Sets the shim of Topic.get_SubscriptionLock()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.SubscriptionLockSetReaderWriterLockSlim">
            <summary>Sets the shim of Topic.set_SubscriptionLock(ReaderWriterLockSlim value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.SubscriptionsGet">
            <summary>Sets the shim of Topic.get_Subscriptions()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.SubscriptionsSetIListOfISubscription">
            <summary>Sets the shim of Topic.set_Subscriptions(IList`1&lt;ISubscription&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.AddSubscriptionISubscription">
            <summary>Sets the shim of Topic.AddSubscription(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.IsExpiredGet">
            <summary>Sets the shim of Topic.get_IsExpired()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.LastUsedGet">
            <summary>Sets the shim of Topic.get_LastUsed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.MarkUsed">
            <summary>Sets the shim of Topic.MarkUsed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.RemoveSubscriptionISubscription">
            <summary>Sets the shim of Topic.RemoveSubscription(ISubscription subscription)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.StoreGet">
            <summary>Sets the shim of Topic.get_Store()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.StoreSetMessageStoreOfMessage">
            <summary>Sets the shim of Topic.set_Store(MessageStore`1&lt;Message&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.SubscriptionLockGet">
            <summary>Sets the shim of Topic.get_SubscriptionLock()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.SubscriptionLockSetReaderWriterLockSlim">
            <summary>Sets the shim of Topic.set_SubscriptionLock(ReaderWriterLockSlim value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.SubscriptionsGet">
            <summary>Sets the shim of Topic.get_Subscriptions()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopic.AllInstances.SubscriptionsSetIListOfISubscription">
            <summary>Sets the shim of Topic.set_Subscriptions(IList`1&lt;ISubscription&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup">
            <summary>Shim type of Microsoft.AspNet.SignalR.Messaging.TopicLookup</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.#ctor(Microsoft.AspNet.SignalR.Messaging.TopicLookup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Microsoft.AspNet.SignalR.Messaging.Topic}})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.Clear">
            <summary>Sets the shim of TopicLookup.Clear()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.Constructor">
            <summary>Sets the shim of TopicLookup.TopicLookup()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.ContainsKeyString">
            <summary>Sets the shim of TopicLookup.ContainsKey(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.CountGet">
            <summary>Sets the shim of TopicLookup.get_Count()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.GetEnumerator">
            <summary>Sets the shim of TopicLookup.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.GetOrAddStringFuncOfStringTopic">
            <summary>Sets the shim of TopicLookup.GetOrAdd(String key, Func`2&lt;String,Topic&gt; factory)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.ItemGetString">
            <summary>Sets the shim of TopicLookup.get_Item(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TopicLookup.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.TryGetValueStringTopicOut">
            <summary>Sets the shim of TopicLookup.TryGetValue(String key, Topic&amp; topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.TryRemoveString">
            <summary>Sets the shim of TopicLookup.TryRemove(String key)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.Clear">
            <summary>Sets the shim of TopicLookup.Clear()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.ContainsKeyString">
            <summary>Sets the shim of TopicLookup.ContainsKey(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.CountGet">
            <summary>Sets the shim of TopicLookup.get_Count()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.GetEnumerator">
            <summary>Sets the shim of TopicLookup.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.GetOrAddStringFuncOfStringTopic">
            <summary>Sets the shim of TopicLookup.GetOrAdd(String key, Func`2&lt;String,Topic&gt; factory)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.ItemGetString">
            <summary>Sets the shim of TopicLookup.get_Item(String key)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>Sets the shim of TopicLookup.System.Collections.IEnumerable.GetEnumerator()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.TryGetValueStringTopicOut">
            <summary>Sets the shim of TopicLookup.TryGetValue(String key, Topic&amp; topic)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.ShimTopicLookup.AllInstances.TryRemoveString">
            <summary>Sets the shim of TopicLookup.TryRemove(String key)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubCommand">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.Command</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubCommand.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubCommand.InitializeStub">
            <summary>Initializes a new instance of type StubCommand</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubCommand.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubCommand.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubCommand.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubIMessageBus">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.IMessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubIMessageBus.#ctor">
            <summary>Initializes a new instance of type StubIMessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubIMessageBus.mansrc::Microsoft#AspNet#SignalR#Messaging#IMessageBus#Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
            <summary>Sets the stub of IMessageBus.Publish(Message message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubIMessageBus.mansrc::Microsoft#AspNet#SignalR#Messaging#IMessageBus#Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
            <summary>Sets the stub of IMessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubIMessageBus.PublishMessage">
            <summary>Sets the stub of IMessageBus.Publish(Message message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubIMessageBus.SubscribeISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the stub of IMessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ISubscriber</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.#ctor">
            <summary>Initializes a new instance of type StubISubscriber</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.AttachBackingFieldToSubscription">
            <summary>Attaches delegates to emulate StubISubscriber.Subscription as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.AttachBackingFieldToWriteCursor">
            <summary>Attaches delegates to emulate StubISubscriber.WriteCursor as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.EventKeysGet">
            <summary>Sets the stub of ISubscriber.get_EventKeys()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.IdentityGet">
            <summary>Sets the stub of ISubscriber.get_Identity()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.SubscriptionGet">
            <summary>Sets the stub of ISubscriber.get_Subscription()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.SubscriptionSetSubscription">
            <summary>Sets the stub of ISubscriber.set_Subscription(Subscription value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.WriteCursorGet">
            <summary>Sets the stub of ISubscriber.get_WriteCursor()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.WriteCursorSetActionOfTextWriter">
            <summary>Sets the stub of ISubscriber.set_WriteCursor(Action`1&lt;TextWriter&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscriber#EventKeys">
            <summary>Sets the stub of ISubscriber.get_EventKeys()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscriber#Identity">
            <summary>Sets the stub of ISubscriber.get_Identity()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscriber#Subscription">
            <summary>Sets the stub of ISubscriber.get_Subscription()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscriber.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscriber#WriteCursor">
            <summary>Sets the stub of ISubscriber.get_WriteCursor()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ISubscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.#ctor">
            <summary>Initializes a new instance of type StubISubscription</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.IdentityGet">
            <summary>Sets the stub of ISubscription.get_Identity()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscription#SetQueued">
            <summary>Sets the stub of ISubscription.SetQueued()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscription#UnsetQueued">
            <summary>Sets the stub of ISubscription.UnsetQueued()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscription#Work">
            <summary>Sets the stub of ISubscription.Work()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.SetQueued">
            <summary>Sets the stub of ISubscription.SetQueued()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.UnsetQueued">
            <summary>Sets the stub of ISubscription.UnsetQueued()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.Work">
            <summary>Sets the stub of ISubscription.Work()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubISubscription.mansrc::Microsoft#AspNet#SignalR#Messaging#ISubscription#Identity">
            <summary>Sets the stub of ISubscription.get_Identity()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubLocalEventKeyInfo">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubLocalEventKeyInfo.#ctor(System.String,System.UInt64,Microsoft.AspNet.SignalR.Messaging.MessageStore{Microsoft.AspNet.SignalR.Messaging.Message})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubLocalEventKeyInfo.InitializeStub">
            <summary>Initializes a new instance of type StubLocalEventKeyInfo</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubLocalEventKeyInfo.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubLocalEventKeyInfo.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubLocalEventKeyInfo.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.Message</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.#ctor(System.String,System.String,System.ArraySegment{System.Byte})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.#ctor(System.String,System.String,System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.InitializeStub">
            <summary>Initializes a new instance of type StubMessage</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.MessageBroker</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.Dispose(System.Boolean)">
            <summary>Sets the stub of MessageBroker.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.DisposeBoolean">
            <summary>Sets the stub of MessageBroker.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.InitializeStub">
            <summary>Initializes a new instance of type StubMessageBroker</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBroker.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.MessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.#ctor(Microsoft.AspNet.SignalR.Infrastructure.IStringMinifier,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
            <summary>Sets the stub of MessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.CreateSubscriptionISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the stub of MessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.CreateTopic(System.String)">
            <summary>Sets the stub of MessageBus.CreateTopic(String key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.CreateTopicString">
            <summary>Sets the stub of MessageBus.CreateTopic(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.Dispose(System.Boolean)">
            <summary>Sets the stub of MessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.DisposeBoolean">
            <summary>Sets the stub of MessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.InitializeStub">
            <summary>Initializes a new instance of type StubMessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
            <summary>Sets the stub of MessageBus.Publish(Message message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.PublishMessage">
            <summary>Sets the stub of MessageBus.Publish(Message message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
            <summary>Sets the stub of MessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.SubscribeISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the stub of MessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.TraceGet">
            <summary>Sets the stub of MessageBus.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubMessageBus.Trace">
            <summary>Sets the stub of MessageBus.get_Trace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.AttachBackingFieldToMaxQueueLength">
            <summary>Attaches delegates to emulate StubScaleoutConfiguration.MaxQueueLength as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.AttachBackingFieldToQueueBehavior">
            <summary>Attaches delegates to emulate StubScaleoutConfiguration.QueueBehavior as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.InitializeStub">
            <summary>Initializes a new instance of type StubScaleoutConfiguration</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.MaxQueueLengthGet">
            <summary>Sets the stub of ScaleoutConfiguration.get_MaxQueueLength()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.MaxQueueLengthSetInt32">
            <summary>Sets the stub of ScaleoutConfiguration.set_MaxQueueLength(Int32 value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.QueueBehaviorGet">
            <summary>Sets the stub of ScaleoutConfiguration.get_QueueBehavior()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.QueueBehaviorSetQueuingBehavior">
            <summary>Sets the stub of ScaleoutConfiguration.set_QueueBehavior(QueuingBehavior value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.MaxQueueLength">
            <summary>Sets the stub of ScaleoutConfiguration.get_MaxQueueLength()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutConfiguration.QueueBehavior">
            <summary>Sets the stub of ScaleoutConfiguration.get_QueueBehavior()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMapping</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping.#ctor(System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.LocalEventKeyInfo})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping.InitializeStub">
            <summary>Initializes a new instance of type StubScaleoutMapping</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMapping.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMappingStore">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMappingStore.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMappingStore.InitializeStub">
            <summary>Initializes a new instance of type StubScaleoutMappingStore</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMappingStore.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMappingStore.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMappingStore.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage.#ctor(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage.InitializeStub">
            <summary>Initializes a new instance of type StubScaleoutMessage</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessage.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ScaleoutMessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver,Microsoft.AspNet.SignalR.Messaging.ScaleoutConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.CreateSubscription(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
            <summary>Sets the stub of ScaleoutMessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.CreateSubscriptionISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the stub of ScaleoutMessageBus.CreateSubscription(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 messageBufferSize, Object state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.CreateTopic(System.String)">
            <summary>Sets the stub of MessageBus.CreateTopic(String key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.CreateTopicString">
            <summary>Sets the stub of MessageBus.CreateTopic(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.Dispose(System.Boolean)">
            <summary>Sets the stub of ScaleoutMessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.DisposeBoolean">
            <summary>Sets the stub of ScaleoutMessageBus.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.InitializeStub">
            <summary>Initializes a new instance of type StubScaleoutMessageBus</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.OnReceived(System.Int32,System.UInt64,Microsoft.AspNet.SignalR.Messaging.ScaleoutMessage)">
            <summary>Sets the stub of ScaleoutMessageBus.OnReceived(Int32 streamIndex, UInt64 id, ScaleoutMessage message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.OnReceivedInt32UInt64ScaleoutMessage">
            <summary>Sets the stub of ScaleoutMessageBus.OnReceived(Int32 streamIndex, UInt64 id, ScaleoutMessage message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.Publish(Microsoft.AspNet.SignalR.Messaging.Message)">
            <summary>Sets the stub of ScaleoutMessageBus.Publish(Message message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.PublishMessage">
            <summary>Sets the stub of ScaleoutMessageBus.Publish(Message message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.Send(System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
            <summary>Sets the stub of ScaleoutMessageBus.Send(IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.Send(System.Int32,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.Message})">
            <summary>Sets the stub of ScaleoutMessageBus.Send(Int32 streamIndex, IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.SendIListOfMessage">
            <summary>Sets the stub of ScaleoutMessageBus.Send(IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.SendInt32IListOfMessage">
            <summary>Sets the stub of ScaleoutMessageBus.Send(Int32 streamIndex, IList`1&lt;Message&gt; messages)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.StreamCountGet">
            <summary>Sets the stub of ScaleoutMessageBus.get_StreamCount()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.Subscribe(Microsoft.AspNet.SignalR.Messaging.ISubscriber,System.String,System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
            <summary>Sets the stub of MessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.SubscribeISubscriberStringFuncOfMessageResultObjectTaskOfBooleanInt32Object">
            <summary>Sets the stub of MessageBus.Subscribe(ISubscriber subscriber, String cursor, Func`3&lt;MessageResult,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.TraceGet">
            <summary>Sets the stub of MessageBus.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.StreamCount">
            <summary>Sets the stub of ScaleoutMessageBus.get_StreamCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutMessageBus.Trace">
            <summary>Sets the stub of MessageBus.get_Trace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.ScaleoutSubscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.String,System.Collections.Generic.IList{Microsoft.AspNet.SignalR.Messaging.ScaleoutMappingStore},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)">
            <summary>Sets the stub of Subscription.AddEvent(String key, Topic topic)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.AddEventStringTopic">
            <summary>Sets the stub of Subscription.AddEvent(String key, Topic topic)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.BeforeInvoke(System.Object)">
            <summary>Sets the stub of ScaleoutSubscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.BeforeInvokeObject">
            <summary>Sets the stub of ScaleoutSubscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.Dispose(System.Boolean)">
            <summary>Sets the stub of Subscription.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.DisposeBoolean">
            <summary>Sets the stub of Subscription.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.InitializeStub">
            <summary>Initializes a new instance of type StubScaleoutSubscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)">
            <summary>Sets the stub of Subscription.Invoke(MessageResult result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.InvokeMessageResult">
            <summary>Sets the stub of Subscription.Invoke(MessageResult result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)">
            <summary>Sets the stub of ScaleoutSubscription.PerformWork(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount, Object&amp; state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.PerformWorkIListOfArraySegmentOfMessageInt32OutObjectOut">
            <summary>Sets the stub of ScaleoutSubscription.PerformWork(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount, Object&amp; state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.RemoveEvent(System.String)">
            <summary>Sets the stub of Subscription.RemoveEvent(String key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.RemoveEventString">
            <summary>Sets the stub of Subscription.RemoveEvent(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)">
            <summary>Sets the stub of Subscription.SetEventTopic(String key, Topic topic)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.SetEventTopicStringTopic">
            <summary>Sets the stub of Subscription.SetEventTopic(String key, Topic topic)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.WriteCursor(System.IO.TextWriter)">
            <summary>Sets the stub of ScaleoutSubscription.WriteCursor(TextWriter textWriter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.WriteCursorTextWriter">
            <summary>Sets the stub of ScaleoutSubscription.WriteCursor(TextWriter textWriter)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubScaleoutSubscription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.Subscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.#ctor(System.String,System.Collections.Generic.IList{System.String},System.Func{Microsoft.AspNet.SignalR.Messaging.MessageResult,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,System.Object)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.AddEvent(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)">
            <summary>Sets the stub of Subscription.AddEvent(String key, Topic topic)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.AddEventStringTopic">
            <summary>Sets the stub of Subscription.AddEvent(String key, Topic topic)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.BeforeInvoke(System.Object)">
            <summary>Sets the stub of Subscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.BeforeInvokeObject">
            <summary>Sets the stub of Subscription.BeforeInvoke(Object state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.Dispose(System.Boolean)">
            <summary>Sets the stub of Subscription.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.DisposeBoolean">
            <summary>Sets the stub of Subscription.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.InitializeStub">
            <summary>Initializes a new instance of type StubSubscription</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.Invoke(Microsoft.AspNet.SignalR.Messaging.MessageResult)">
            <summary>Sets the stub of Subscription.Invoke(MessageResult result)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.InvokeMessageResult">
            <summary>Sets the stub of Subscription.Invoke(MessageResult result)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.PerformWork(System.Collections.Generic.IList{System.ArraySegment{Microsoft.AspNet.SignalR.Messaging.Message}},System.Int32@,System.Object@)">
            <summary>Sets the stub of Subscription.PerformWork(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount, Object&amp; state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.PerformWorkIListOfArraySegmentOfMessageInt32OutObjectOut">
            <summary>Sets the stub of Subscription.PerformWork(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; items, Int32&amp; totalCount, Object&amp; state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.RemoveEvent(System.String)">
            <summary>Sets the stub of Subscription.RemoveEvent(String key)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.RemoveEventString">
            <summary>Sets the stub of Subscription.RemoveEvent(String key)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.SetEventTopic(System.String,Microsoft.AspNet.SignalR.Messaging.Topic)">
            <summary>Sets the stub of Subscription.SetEventTopic(String key, Topic topic)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.SetEventTopicStringTopic">
            <summary>Sets the stub of Subscription.SetEventTopic(String key, Topic topic)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.WriteCursor(System.IO.TextWriter)">
            <summary>Sets the stub of Subscription.WriteCursor(TextWriter textWriter)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.WriteCursorTextWriter">
            <summary>Sets the stub of Subscription.WriteCursor(TextWriter textWriter)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubSubscription.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic">
            <summary>Stub type of Microsoft.AspNet.SignalR.Messaging.Topic</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.#ctor(System.UInt32,System.TimeSpan)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.InitializeStub">
            <summary>Initializes a new instance of type StubTopic</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.IsExpiredGet">
            <summary>Sets the stub of Topic.get_IsExpired()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Messaging.Fakes.StubTopic.IsExpired">
            <summary>Sets the stub of Topic.get_IsExpired()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest">
            <summary>Shim type of Microsoft.AspNet.SignalR.Owin.ServerRequest</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.#ctor(Microsoft.AspNet.SignalR.Owin.ServerRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.Bind(Microsoft.AspNet.SignalR.IRequest)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of ServerRequest.ServerRequest(IDictionary`2&lt;String,Object&gt; environment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.CookiesGet">
            <summary>Sets the shim of ServerRequest.get_Cookies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.EnvironmentGet">
            <summary>Sets the shim of ServerRequest.get_Environment()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.HeadersGet">
            <summary>Sets the shim of ServerRequest.get_Headers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.LocalPathGet">
            <summary>Sets the shim of ServerRequest.get_LocalPath()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.QueryStringGet">
            <summary>Sets the shim of ServerRequest.get_QueryString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.ReadForm">
            <summary>Sets the shim of ServerRequest.ReadForm()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.UrlGet">
            <summary>Sets the shim of ServerRequest.get_Url()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.UserGet">
            <summary>Sets the shim of ServerRequest.get_User()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest._get_Cookiesb__2">
            <summary>Sets the shim of ServerRequest.&lt;get_Cookies&gt;b__2()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest._get_Headersb__1">
            <summary>Sets the shim of ServerRequest.&lt;get_Headers&gt;b__1()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest._get_QueryStringb__0">
            <summary>Sets the shim of ServerRequest.&lt;get_QueryString&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.CookiesGet">
            <summary>Sets the shim of ServerRequest.get_Cookies()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.EnvironmentGet">
            <summary>Sets the shim of ServerRequest.get_Environment()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.HeadersGet">
            <summary>Sets the shim of ServerRequest.get_Headers()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.LocalPathGet">
            <summary>Sets the shim of ServerRequest.get_LocalPath()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.QueryStringGet">
            <summary>Sets the shim of ServerRequest.get_QueryString()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.ReadForm">
            <summary>Sets the shim of ServerRequest.ReadForm()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.UrlGet">
            <summary>Sets the shim of ServerRequest.get_Url()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances.UserGet">
            <summary>Sets the shim of ServerRequest.get_User()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances._get_Cookiesb__2">
            <summary>Sets the shim of ServerRequest.&lt;get_Cookies&gt;b__2()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances._get_Headersb__1">
            <summary>Sets the shim of ServerRequest.&lt;get_Headers&gt;b__1()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerRequest.AllInstances._get_QueryStringb__0">
            <summary>Sets the shim of ServerRequest.&lt;get_QueryString&gt;b__0()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse">
            <summary>Shim type of Microsoft.AspNet.SignalR.Owin.ServerResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.#ctor(Microsoft.AspNet.SignalR.Owin.ServerResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.Bind(Microsoft.AspNet.SignalR.Hosting.IResponse)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.CancellationTokenGet">
            <summary>Sets the shim of ServerResponse.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.ConstructorIDictionaryOfStringObject">
            <summary>Sets the shim of ServerResponse.ServerResponse(IDictionary`2&lt;String,Object&gt; environment)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.ContentTypeGet">
            <summary>Sets the shim of ServerResponse.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.ContentTypeSetString">
            <summary>Sets the shim of ServerResponse.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.Flush">
            <summary>Sets the shim of ServerResponse.Flush()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.StatusCodeGet">
            <summary>Sets the shim of ServerResponse.get_StatusCode()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.StatusCodeSetInt32">
            <summary>Sets the shim of ServerResponse.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.WriteArraySegmentOfByte">
            <summary>Sets the shim of ServerResponse.Write(ArraySegment`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.CancellationTokenGet">
            <summary>Sets the shim of ServerResponse.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.ContentTypeGet">
            <summary>Sets the shim of ServerResponse.get_ContentType()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.ContentTypeSetString">
            <summary>Sets the shim of ServerResponse.set_ContentType(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.Flush">
            <summary>Sets the shim of ServerResponse.Flush()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.StatusCodeGet">
            <summary>Sets the shim of ServerResponse.get_StatusCode()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.StatusCodeSetInt32">
            <summary>Sets the shim of ServerResponse.set_StatusCode(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.ShimServerResponse.AllInstances.WriteArraySegmentOfByte">
            <summary>Sets the shim of ServerResponse.Write(ArraySegment`1&lt;Byte&gt; data)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerRequest">
            <summary>Stub type of Microsoft.AspNet.SignalR.Owin.ServerRequest</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerRequest.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerRequest.InitializeStub">
            <summary>Initializes a new instance of type StubServerRequest</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerResponse">
            <summary>Stub type of Microsoft.AspNet.SignalR.Owin.ServerResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerResponse.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerResponse.InitializeStub">
            <summary>Initializes a new instance of type StubServerResponse</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Fakes.StubServerResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware">
            <summary>Shim type of Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.#ctor(Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.ConstructorOwinMiddlewareHubConfiguration">
            <summary>Sets the shim of HubDispatcherMiddleware.HubDispatcherMiddleware(OwinMiddleware next, HubConfiguration configuration)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.InvokeIOwinContext">
            <summary>Sets the shim of HubDispatcherMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimHubDispatcherMiddleware.AllInstances.InvokeIOwinContext">
            <summary>Sets the shim of HubDispatcherMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware">
            <summary>Shim type of Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.#ctor(Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.ConstructorOwinMiddlewareTypeConnectionConfiguration">
            <summary>Sets the shim of PersistentConnectionMiddleware.PersistentConnectionMiddleware(OwinMiddleware next, Type connectionType, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.InvokeIOwinContext">
            <summary>Sets the shim of PersistentConnectionMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.ShimPersistentConnectionMiddleware.AllInstances.InvokeIOwinContext">
            <summary>Sets the shim of PersistentConnectionMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware">
            <summary>Stub type of Microsoft.AspNet.SignalR.Owin.Middleware.HubDispatcherMiddleware</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,Microsoft.AspNet.SignalR.HubConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.InitializeStub">
            <summary>Initializes a new instance of type StubHubDispatcherMiddleware</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>Sets the stub of HubDispatcherMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.InvokeIOwinContext">
            <summary>Sets the stub of HubDispatcherMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubHubDispatcherMiddleware.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware">
            <summary>Stub type of Microsoft.AspNet.SignalR.Owin.Middleware.PersistentConnectionMiddleware</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.#ctor(Microsoft.Owin.OwinMiddleware,System.Type,Microsoft.AspNet.SignalR.ConnectionConfiguration)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.InitializeStub">
            <summary>Initializes a new instance of type StubPersistentConnectionMiddleware</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.Invoke(Microsoft.Owin.IOwinContext)">
            <summary>Sets the stub of PersistentConnectionMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.InvokeIOwinContext">
            <summary>Sets the stub of PersistentConnectionMiddleware.Invoke(IOwinContext context)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Owin.Middleware.Fakes.StubPersistentConnectionMiddleware.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Tracing.TraceManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.#ctor(Microsoft.AspNet.SignalR.Tracing.TraceManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.Bind(Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.Constructor">
            <summary>Sets the shim of TraceManager.TraceManager()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.ConstructorTextWriterTraceListener">
            <summary>Sets the shim of TraceManager.TraceManager(TextWriterTraceListener hostTraceListener)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.CreateTraceSourceString">
            <summary>Sets the shim of TraceManager.CreateTraceSource(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.ItemGetString">
            <summary>Sets the shim of TraceManager.get_Item(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.SwitchGet">
            <summary>Sets the shim of TraceManager.get_Switch()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.SwitchSetSourceSwitch">
            <summary>Sets the shim of TraceManager.set_Switch(SourceSwitch value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager._get_Itemb__0String">
            <summary>Sets the shim of TraceManager.&lt;get_Item&gt;b__0(String key)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.AllInstances.CreateTraceSourceString">
            <summary>Sets the shim of TraceManager.CreateTraceSource(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.AllInstances.ItemGetString">
            <summary>Sets the shim of TraceManager.get_Item(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.AllInstances.SwitchGet">
            <summary>Sets the shim of TraceManager.get_Switch()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.AllInstances.SwitchSetSourceSwitch">
            <summary>Sets the shim of TraceManager.set_Switch(SourceSwitch value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.ShimTraceManager.AllInstances._get_Itemb__0String">
            <summary>Sets the shim of TraceManager.&lt;get_Item&gt;b__0(String key)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Tracing.Fakes.StubITraceManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Tracing.ITraceManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.StubITraceManager.#ctor">
            <summary>Initializes a new instance of type StubITraceManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Tracing.Fakes.StubITraceManager.ItemGetString">
            <summary>Sets the stub of ITraceManager.get_Item(String name)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Tracing.Fakes.StubITraceManager.SwitchGet">
            <summary>Sets the stub of ITraceManager.get_Switch()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.StubITraceManager.Microsoft#AspNet#SignalR#Tracing#ITraceManager#Item(System.String)">
            <summary>Sets the stub of ITraceManager.get_Item(String name)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.StubITraceManager.mansrc::Microsoft#AspNet#SignalR#Tracing#ITraceManager#Switch">
            <summary>Sets the stub of ITraceManager.get_Switch()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Tracing.TraceManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager.#ctor(System.Diagnostics.TextWriterTraceListener)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager.InitializeStub">
            <summary>Initializes a new instance of type StubTraceManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Tracing.Fakes.StubTraceManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITransport)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.ConstructorHostContextIDependencyResolver">
            <summary>Sets the shim of ForeverFrameTransport.ForeverFrameTransport(HostContext context, IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.InitializeObject">
            <summary>Sets the shim of ForeverFrameTransport.Initialize(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.InitializeResponseITransportConnection">
            <summary>Sets the shim of ForeverFrameTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.KeepAlive">
            <summary>Sets the shim of ForeverFrameTransport.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.OutputWriterGet">
            <summary>Sets the shim of ForeverFrameTransport.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.PerformKeepAliveObject">
            <summary>Sets the shim of ForeverFrameTransport.PerformKeepAlive(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.PerformSendObject">
            <summary>Sets the shim of ForeverFrameTransport.PerformSend(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.SendPersistentResponse">
            <summary>Sets the shim of ForeverFrameTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport._KeepAliveb__38Object">
            <summary>Sets the shim of ForeverFrameTransport.&lt;KeepAlive&gt;b__38(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport._Sendb__3aObject">
            <summary>Sets the shim of ForeverFrameTransport.&lt;Send&gt;b__3a(Object s)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.AllInstances.InitializeResponseITransportConnection">
            <summary>Sets the shim of ForeverFrameTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.AllInstances.KeepAlive">
            <summary>Sets the shim of ForeverFrameTransport.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.AllInstances.OutputWriterGet">
            <summary>Sets the shim of ForeverFrameTransport.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverFrameTransport.AllInstances.SendPersistentResponse">
            <summary>Sets the shim of ForeverFrameTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.ForeverTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.#ctor(Microsoft.AspNet.SignalR.Transports.ForeverTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITransport)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.CancelObject">
            <summary>Sets the shim of ForeverTransport.Cancel(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ConnectedGet">
            <summary>Sets the shim of ForeverTransport.get_Connected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ConnectedSetFuncOfTask">
            <summary>Sets the shim of ForeverTransport.set_Connected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ConstructorHostContextIDependencyResolver">
            <summary>Sets the shim of ForeverTransport.ForeverTransport(HostContext context, IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ConstructorHostContextJsonSerializerITransportHeartbeatIPerformanceCounterManagerITraceManager">
            <summary>Sets the shim of ForeverTransport.ForeverTransport(HostContext context, JsonSerializer jsonSerializer, ITransportHeartbeat heartbeat, IPerformanceCounterManager performanceCounterWriter, ITraceManager traceManager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the shim of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.InitializePersistentState">
            <summary>Sets the shim of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.InitializeResponseITransportConnection">
            <summary>Sets the shim of ForeverTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.InitializeTcsGet">
            <summary>Sets the shim of ForeverTransport.get_InitializeTcs()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.InitializeTcsSetTaskCompletionSourceOfObject">
            <summary>Sets the shim of ForeverTransport.set_InitializeTcs(TaskCompletionSource`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.JsonSerializerGet">
            <summary>Sets the shim of ForeverTransport.get_JsonSerializer()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.LastMessageIdGet">
            <summary>Sets the shim of ForeverTransport.get_LastMessageId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.OnErrorAggregateExceptionObject">
            <summary>Sets the shim of ForeverTransport.OnError(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.OnErrorException">
            <summary>Sets the shim of ForeverTransport.OnError(Exception ex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.OnMessageReceivedPersistentResponseObject">
            <summary>Sets the shim of ForeverTransport.OnMessageReceived(PersistentResponse response, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.OnSendingResponsePersistentResponse">
            <summary>Sets the shim of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.OnSendingString">
            <summary>Sets the shim of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.PerformSendObject">
            <summary>Sets the shim of ForeverTransport.PerformSend(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ProcessMessagesITransportConnectionFuncOfTask">
            <summary>Sets the shim of ForeverTransport.ProcessMessages(ITransportConnection connection, Func`1&lt;Task&gt; initialize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ProcessReceiveRequestITransportConnection">
            <summary>Sets the shim of ForeverTransport.ProcessReceiveRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ProcessRequestCoreITransportConnection">
            <summary>Sets the shim of ForeverTransport.ProcessRequestCore(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ProcessRequestITransportConnection">
            <summary>Sets the shim of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ProcessSendRequest">
            <summary>Sets the shim of ForeverTransport.ProcessSendRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ReceivedGet">
            <summary>Sets the shim of ForeverTransport.get_Received()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ReceivedSetFuncOfStringTask">
            <summary>Sets the shim of ForeverTransport.set_Received(Func`2&lt;String,Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ReconnectedGet">
            <summary>Sets the shim of ForeverTransport.get_Reconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.ReconnectedSetFuncOfTask">
            <summary>Sets the shim of ForeverTransport.set_Reconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.SendObject">
            <summary>Sets the shim of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.TransportConnectedGet">
            <summary>Sets the shim of ForeverTransport.get_TransportConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.TransportConnectedSetFuncOfTask">
            <summary>Sets the shim of ForeverTransport.set_TransportConnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._OnMessageReceivedb__31">
            <summary>Sets the shim of ForeverTransport.&lt;OnMessageReceived&gt;b__31()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._OnMessageReceivedb__32">
            <summary>Sets the shim of ForeverTransport.&lt;OnMessageReceived&gt;b__32()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._OnMessageReceivedb__33">
            <summary>Sets the shim of ForeverTransport.&lt;OnMessageReceived&gt;b__33()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessMessagesb__24Object">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__24(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessMessagesb__25Object">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__25(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessMessagesb__26AggregateExceptionObject">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__26(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessMessagesb__27PersistentResponseObject">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__27(PersistentResponse response, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessMessagesb__28TaskCompletionSourceOfObject">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__28(TaskCompletionSource`1&lt;Object&gt; tcs)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessMessagesb__29AggregateExceptionObject">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__29(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessReceiveRequestb__19Object">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessReceiveRequest&gt;b__19(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._ProcessReceiveRequestb__1aObject">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessReceiveRequest&gt;b__1a(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport._Sendb__eObject">
            <summary>Sets the shim of ForeverTransport.&lt;Send&gt;b__e(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ConnectedGet">
            <summary>Sets the shim of ForeverTransport.get_Connected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ConnectedSetFuncOfTask">
            <summary>Sets the shim of ForeverTransport.set_Connected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the shim of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.InitializePersistentState">
            <summary>Sets the shim of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.InitializeResponseITransportConnection">
            <summary>Sets the shim of ForeverTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.InitializeTcsGet">
            <summary>Sets the shim of ForeverTransport.get_InitializeTcs()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.InitializeTcsSetTaskCompletionSourceOfObject">
            <summary>Sets the shim of ForeverTransport.set_InitializeTcs(TaskCompletionSource`1&lt;Object&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.JsonSerializerGet">
            <summary>Sets the shim of ForeverTransport.get_JsonSerializer()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.LastMessageIdGet">
            <summary>Sets the shim of ForeverTransport.get_LastMessageId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.OnErrorException">
            <summary>Sets the shim of ForeverTransport.OnError(Exception ex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.OnSendingResponsePersistentResponse">
            <summary>Sets the shim of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.OnSendingString">
            <summary>Sets the shim of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ProcessMessagesITransportConnectionFuncOfTask">
            <summary>Sets the shim of ForeverTransport.ProcessMessages(ITransportConnection connection, Func`1&lt;Task&gt; initialize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ProcessReceiveRequestITransportConnection">
            <summary>Sets the shim of ForeverTransport.ProcessReceiveRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ProcessRequestCoreITransportConnection">
            <summary>Sets the shim of ForeverTransport.ProcessRequestCore(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ProcessRequestITransportConnection">
            <summary>Sets the shim of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ProcessSendRequest">
            <summary>Sets the shim of ForeverTransport.ProcessSendRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ReceivedGet">
            <summary>Sets the shim of ForeverTransport.get_Received()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ReceivedSetFuncOfStringTask">
            <summary>Sets the shim of ForeverTransport.set_Received(Func`2&lt;String,Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ReconnectedGet">
            <summary>Sets the shim of ForeverTransport.get_Reconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.ReconnectedSetFuncOfTask">
            <summary>Sets the shim of ForeverTransport.set_Reconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.SendObject">
            <summary>Sets the shim of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.TransportConnectedGet">
            <summary>Sets the shim of ForeverTransport.get_TransportConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances.TransportConnectedSetFuncOfTask">
            <summary>Sets the shim of ForeverTransport.set_TransportConnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimForeverTransport.AllInstances._ProcessMessagesb__25Object">
            <summary>Sets the shim of ForeverTransport.&lt;ProcessMessages&gt;b__25(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.LongPollingTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Transports.LongPollingTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITransport)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AddTransportDataPersistentResponse">
            <summary>Sets the shim of LongPollingTransport.AddTransportData(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.CancelObject">
            <summary>Sets the shim of LongPollingTransport.Cancel(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ConnectedGet">
            <summary>Sets the shim of LongPollingTransport.get_Connected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ConnectedSetFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.set_Connected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ConstructorHostContextIDependencyResolver">
            <summary>Sets the shim of LongPollingTransport.LongPollingTransport(HostContext context, IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ConstructorHostContextJsonSerializerITransportHeartbeatIPerformanceCounterManagerITraceManagerIConfigurationManager">
            <summary>Sets the shim of LongPollingTransport.LongPollingTransport(HostContext context, JsonSerializer jsonSerializer, ITransportHeartbeat heartbeat, IPerformanceCounterManager performanceCounterManager, ITraceManager traceManager, IConfigurationManager configurationManager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.DisconnectThresholdGet">
            <summary>Sets the shim of LongPollingTransport.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.IsConnectRequestGet">
            <summary>Sets the shim of LongPollingTransport.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.IsJsonpGet">
            <summary>Sets the shim of LongPollingTransport.get_IsJsonp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.IsReconnectRequestGet">
            <summary>Sets the shim of LongPollingTransport.get_IsReconnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.IsSendRequestGet">
            <summary>Sets the shim of LongPollingTransport.get_IsSendRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.JsonpCallbackGet">
            <summary>Sets the shim of LongPollingTransport.get_JsonpCallback()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.MessageIdGet">
            <summary>Sets the shim of LongPollingTransport.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.OnErrorAggregateExceptionObject">
            <summary>Sets the shim of LongPollingTransport.OnError(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.OnMessageReceivedPersistentResponseObject">
            <summary>Sets the shim of LongPollingTransport.OnMessageReceived(PersistentResponse response, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.PerformSendObject">
            <summary>Sets the shim of LongPollingTransport.PerformSend(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ProcessMessagesITransportConnectionFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.ProcessMessages(ITransportConnection connection, Func`1&lt;Task&gt; initialize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ProcessReceiveRequestITransportConnection">
            <summary>Sets the shim of LongPollingTransport.ProcessReceiveRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ProcessRequestITransportConnection">
            <summary>Sets the shim of LongPollingTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ProcessSendRequest">
            <summary>Sets the shim of LongPollingTransport.ProcessSendRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ReceivedGet">
            <summary>Sets the shim of LongPollingTransport.get_Received()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ReceivedSetFuncOfStringTask">
            <summary>Sets the shim of LongPollingTransport.set_Received(Func`2&lt;String,Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ReconnectedGet">
            <summary>Sets the shim of LongPollingTransport.get_Reconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.ReconnectedSetFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.set_Reconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.SendObject">
            <summary>Sets the shim of LongPollingTransport.Send(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.SendPersistentResponse">
            <summary>Sets the shim of LongPollingTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.SupportsKeepAliveGet">
            <summary>Sets the shim of LongPollingTransport.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.TransportConnectedGet">
            <summary>Sets the shim of LongPollingTransport.get_TransportConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.TransportConnectedSetFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.set_TransportConnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._OnMessageReceivedb__20">
            <summary>Sets the shim of LongPollingTransport.&lt;OnMessageReceived&gt;b__20()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._ProcessMessagesb__16Object">
            <summary>Sets the shim of LongPollingTransport.&lt;ProcessMessages&gt;b__16(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._ProcessMessagesb__17PersistentResponseObject">
            <summary>Sets the shim of LongPollingTransport.&lt;ProcessMessages&gt;b__17(PersistentResponse response, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._ProcessMessagesb__18AggregateExceptionObject">
            <summary>Sets the shim of LongPollingTransport.&lt;ProcessMessages&gt;b__18(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._ProcessReceiveRequestb__bObject">
            <summary>Sets the shim of LongPollingTransport.&lt;ProcessReceiveRequest&gt;b__b(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._ProcessReceiveRequestb__cObject">
            <summary>Sets the shim of LongPollingTransport.&lt;ProcessReceiveRequest&gt;b__c(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport._Sendb__0Object">
            <summary>Sets the shim of LongPollingTransport.&lt;Send&gt;b__0(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.AddTransportDataPersistentResponse">
            <summary>Sets the shim of LongPollingTransport.AddTransportData(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ConnectedGet">
            <summary>Sets the shim of LongPollingTransport.get_Connected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ConnectedSetFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.set_Connected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.DisconnectThresholdGet">
            <summary>Sets the shim of LongPollingTransport.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.IsConnectRequestGet">
            <summary>Sets the shim of LongPollingTransport.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.IsJsonpGet">
            <summary>Sets the shim of LongPollingTransport.get_IsJsonp()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.IsReconnectRequestGet">
            <summary>Sets the shim of LongPollingTransport.get_IsReconnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.IsSendRequestGet">
            <summary>Sets the shim of LongPollingTransport.get_IsSendRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.JsonpCallbackGet">
            <summary>Sets the shim of LongPollingTransport.get_JsonpCallback()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.MessageIdGet">
            <summary>Sets the shim of LongPollingTransport.get_MessageId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ProcessMessagesITransportConnectionFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.ProcessMessages(ITransportConnection connection, Func`1&lt;Task&gt; initialize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ProcessReceiveRequestITransportConnection">
            <summary>Sets the shim of LongPollingTransport.ProcessReceiveRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ProcessRequestITransportConnection">
            <summary>Sets the shim of LongPollingTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ProcessSendRequest">
            <summary>Sets the shim of LongPollingTransport.ProcessSendRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ReceivedGet">
            <summary>Sets the shim of LongPollingTransport.get_Received()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ReceivedSetFuncOfStringTask">
            <summary>Sets the shim of LongPollingTransport.set_Received(Func`2&lt;String,Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ReconnectedGet">
            <summary>Sets the shim of LongPollingTransport.get_Reconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.ReconnectedSetFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.set_Reconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.SendObject">
            <summary>Sets the shim of LongPollingTransport.Send(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.SendPersistentResponse">
            <summary>Sets the shim of LongPollingTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.SupportsKeepAliveGet">
            <summary>Sets the shim of LongPollingTransport.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.TransportConnectedGet">
            <summary>Sets the shim of LongPollingTransport.get_TransportConnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimLongPollingTransport.AllInstances.TransportConnectedSetFuncOfTask">
            <summary>Sets the shim of LongPollingTransport.set_TransportConnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.PersistentResponse</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.#ctor(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.Bind(Microsoft.AspNet.SignalR.Json.IJsonWritable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AbortedGet">
            <summary>Sets the shim of PersistentResponse.get_Aborted()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AbortedSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Aborted(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.Constructor">
            <summary>Sets the shim of PersistentResponse.PersistentResponse()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.ConstructorFuncOfMessageBooleanActionOfTextWriter">
            <summary>Sets the shim of PersistentResponse.PersistentResponse(Func`2&lt;Message,Boolean&gt; exclude, Action`1&lt;TextWriter&gt; writeCursor)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.DisconnectGet">
            <summary>Sets the shim of PersistentResponse.get_Disconnect()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.DisconnectSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Disconnect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.GroupsTokenGet">
            <summary>Sets the shim of PersistentResponse.get_GroupsToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.GroupsTokenSetString">
            <summary>Sets the shim of PersistentResponse.set_GroupsToken(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.InitializingGet">
            <summary>Sets the shim of PersistentResponse.get_Initializing()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.InitializingSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Initializing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.LongPollDelayGet">
            <summary>Sets the shim of PersistentResponse.get_LongPollDelay()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.LongPollDelaySetNullableOfInt64">
            <summary>Sets the shim of PersistentResponse.set_LongPollDelay(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.MessagesGet">
            <summary>Sets the shim of PersistentResponse.get_Messages()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.MessagesSetIListOfArraySegmentOfMessage">
            <summary>Sets the shim of PersistentResponse.set_Messages(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.MicrosoftAspNetSignalRJsonIJsonWritableWriteJsonTextWriter">
            <summary>Sets the shim of PersistentResponse.Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(TextWriter writer)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.ReconnectGet">
            <summary>Sets the shim of PersistentResponse.get_Reconnect()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.ReconnectSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Reconnect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.TerminalGet">
            <summary>Sets the shim of PersistentResponse.get_Terminal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.TerminalSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Terminal(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.TotalCountGet">
            <summary>Sets the shim of PersistentResponse.get_TotalCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.TotalCountSetInt32">
            <summary>Sets the shim of PersistentResponse.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.WriteMessagesTextWriterJsonTextWriter">
            <summary>Sets the shim of PersistentResponse.WriteMessages(TextWriter writer, JsonTextWriter jsonWriter)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse._ctorb__0Message">
            <summary>Sets the shim of PersistentResponse.&lt;.ctor&gt;b__0(Message message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse._ctorb__1TextWriter">
            <summary>Sets the shim of PersistentResponse.&lt;.ctor&gt;b__1(TextWriter writer)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.AbortedGet">
            <summary>Sets the shim of PersistentResponse.get_Aborted()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.AbortedSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Aborted(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.DisconnectGet">
            <summary>Sets the shim of PersistentResponse.get_Disconnect()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.DisconnectSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Disconnect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.GroupsTokenGet">
            <summary>Sets the shim of PersistentResponse.get_GroupsToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.GroupsTokenSetString">
            <summary>Sets the shim of PersistentResponse.set_GroupsToken(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.InitializingGet">
            <summary>Sets the shim of PersistentResponse.get_Initializing()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.InitializingSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Initializing(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.LongPollDelayGet">
            <summary>Sets the shim of PersistentResponse.get_LongPollDelay()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.LongPollDelaySetNullableOfInt64">
            <summary>Sets the shim of PersistentResponse.set_LongPollDelay(Nullable`1&lt;Int64&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.MessagesGet">
            <summary>Sets the shim of PersistentResponse.get_Messages()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.MessagesSetIListOfArraySegmentOfMessage">
            <summary>Sets the shim of PersistentResponse.set_Messages(IList`1&lt;ArraySegment`1&lt;Message&gt;&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.MicrosoftAspNetSignalRJsonIJsonWritableWriteJsonTextWriter">
            <summary>Sets the shim of PersistentResponse.Microsoft.AspNet.SignalR.Json.IJsonWritable.WriteJson(TextWriter writer)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.ReconnectGet">
            <summary>Sets the shim of PersistentResponse.get_Reconnect()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.ReconnectSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Reconnect(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.TerminalGet">
            <summary>Sets the shim of PersistentResponse.get_Terminal()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.TerminalSetBoolean">
            <summary>Sets the shim of PersistentResponse.set_Terminal(Boolean value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.TotalCountGet">
            <summary>Sets the shim of PersistentResponse.get_TotalCount()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.TotalCountSetInt32">
            <summary>Sets the shim of PersistentResponse.set_TotalCount(Int32 value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimPersistentResponse.AllInstances.WriteMessagesTextWriterJsonTextWriter">
            <summary>Sets the shim of PersistentResponse.WriteMessages(TextWriter writer, JsonTextWriter jsonWriter)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITransport)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.ConstructorHostContextIDependencyResolver">
            <summary>Sets the shim of ServerSentEventsTransport.ServerSentEventsTransport(HostContext context, IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.InitializeResponseITransportConnection">
            <summary>Sets the shim of ServerSentEventsTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.KeepAlive">
            <summary>Sets the shim of ServerSentEventsTransport.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.PerformKeepAliveObject">
            <summary>Sets the shim of ServerSentEventsTransport.PerformKeepAlive(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.PerformSendObject">
            <summary>Sets the shim of ServerSentEventsTransport.PerformSend(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.SendPersistentResponse">
            <summary>Sets the shim of ServerSentEventsTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.WriteInitServerSentEventsTransport">
            <summary>Sets the shim of ServerSentEventsTransport.WriteInit(ServerSentEventsTransport transport)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport._InitializeResponseb__4ServerSentEventsTransport">
            <summary>Sets the shim of ServerSentEventsTransport.&lt;InitializeResponse&gt;b__4(ServerSentEventsTransport s)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport._KeepAliveb__0Object">
            <summary>Sets the shim of ServerSentEventsTransport.&lt;KeepAlive&gt;b__0(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport._Sendb__2Object">
            <summary>Sets the shim of ServerSentEventsTransport.&lt;Send&gt;b__2(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.AllInstances.InitializeResponseITransportConnection">
            <summary>Sets the shim of ServerSentEventsTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.AllInstances.KeepAlive">
            <summary>Sets the shim of ServerSentEventsTransport.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimServerSentEventsTransport.AllInstances.SendPersistentResponse">
            <summary>Sets the shim of ServerSentEventsTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Bind(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Abort">
            <summary>Sets the shim of TransportDisconnectBase.Abort()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AbortBoolean">
            <summary>Sets the shim of TransportDisconnectBase.Abort(Boolean clean)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ApplyStateTransportConnectionStates">
            <summary>Sets the shim of TransportDisconnectBase.ApplyState(TransportConnectionStates states)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.CancellationTokenGet">
            <summary>Sets the shim of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConnectTaskGet">
            <summary>Sets the shim of TransportDisconnectBase.get_ConnectTask()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConnectionEndTokenGet">
            <summary>Sets the shim of TransportDisconnectBase.get_ConnectionEndToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConnectionGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConnectionIdGet">
            <summary>Sets the shim of TransportDisconnectBase.get_ConnectionId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConnectionIdSetString">
            <summary>Sets the shim of TransportDisconnectBase.set_ConnectionId(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConnectionSetITransportConnection">
            <summary>Sets the shim of TransportDisconnectBase.set_Connection(ITransportConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ConstructorHostContextITransportHeartbeatIPerformanceCounterManagerITraceManager">
            <summary>Sets the shim of TransportDisconnectBase.TransportDisconnectBase(HostContext context, ITransportHeartbeat heartbeat, IPerformanceCounterManager performanceCounterManager, ITraceManager traceManager)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.ContextGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Context()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.CreateResponseWriter">
            <summary>Sets the shim of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Disconnect">
            <summary>Sets the shim of TransportDisconnectBase.Disconnect()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.DisconnectThresholdGet">
            <summary>Sets the shim of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.DisconnectedGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Disconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.DisconnectedSetFuncOfTask">
            <summary>Sets the shim of TransportDisconnectBase.set_Disconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Dispose">
            <summary>Sets the shim of TransportDisconnectBase.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.DisposeBoolean">
            <summary>Sets the shim of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.End">
            <summary>Sets the shim of TransportDisconnectBase.End()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the shim of TransportDisconnectBase.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.EnqueueOperationFuncOfTask">
            <summary>Sets the shim of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.HeartbeatGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Heartbeat()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.HostShutdownTokenGet">
            <summary>Sets the shim of TransportDisconnectBase.get_HostShutdownToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.IncrementErrors">
            <summary>Sets the shim of TransportDisconnectBase.IncrementErrors()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.InitializePersistentState">
            <summary>Sets the shim of TransportDisconnectBase.InitializePersistentState()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.IsAbortRequestGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsAbortRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.IsAliveGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.IsConnectRequestGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.IsTimedOutGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsTimedOut()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.KeepAlive">
            <summary>Sets the shim of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.OnDisconnectErrorAggregateExceptionObject">
            <summary>Sets the shim of TransportDisconnectBase.OnDisconnectError(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.OutputWriterGet">
            <summary>Sets the shim of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.StaticConstructor">
            <summary>Sets the shim of TransportDisconnectBase.TransportDisconnectBase()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.SupportsKeepAliveGet">
            <summary>Sets the shim of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.Timeout">
            <summary>Sets the shim of TransportDisconnectBase.Timeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.TraceGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.UrlGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Url()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._Abortb__2AggregateExceptionObject">
            <summary>Sets the shim of TransportDisconnectBase.&lt;Abort&gt;b__2(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._Abortb__3IPerformanceCounterManager">
            <summary>Sets the shim of TransportDisconnectBase.&lt;Abort&gt;b__3(IPerformanceCounterManager counters)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._Disconnectb__0TransportDisconnectBase">
            <summary>Sets the shim of TransportDisconnectBase.&lt;Disconnect&gt;b__0(TransportDisconnectBase transport)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._EnqueueOperationb__6Object">
            <summary>Sets the shim of TransportDisconnectBase.&lt;EnqueueOperation&gt;b__6(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._InitializePersistentStateb__8Object">
            <summary>Sets the shim of TransportDisconnectBase.&lt;InitializePersistentState&gt;b__8(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._InitializePersistentStateb__9Object">
            <summary>Sets the shim of TransportDisconnectBase.&lt;InitializePersistentState&gt;b__9(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase._cctorb__c">
            <summary>Sets the shim of TransportDisconnectBase.&lt;.cctor&gt;b__c()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.Abort">
            <summary>Sets the shim of TransportDisconnectBase.Abort()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.AbortBoolean">
            <summary>Sets the shim of TransportDisconnectBase.Abort(Boolean clean)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ApplyStateTransportConnectionStates">
            <summary>Sets the shim of TransportDisconnectBase.ApplyState(TransportConnectionStates states)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.CancellationTokenGet">
            <summary>Sets the shim of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ConnectTaskGet">
            <summary>Sets the shim of TransportDisconnectBase.get_ConnectTask()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ConnectionEndTokenGet">
            <summary>Sets the shim of TransportDisconnectBase.get_ConnectionEndToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ConnectionGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Connection()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ConnectionIdGet">
            <summary>Sets the shim of TransportDisconnectBase.get_ConnectionId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ConnectionIdSetString">
            <summary>Sets the shim of TransportDisconnectBase.set_ConnectionId(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ConnectionSetITransportConnection">
            <summary>Sets the shim of TransportDisconnectBase.set_Connection(ITransportConnection value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.ContextGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Context()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.CreateResponseWriter">
            <summary>Sets the shim of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.Disconnect">
            <summary>Sets the shim of TransportDisconnectBase.Disconnect()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.DisconnectThresholdGet">
            <summary>Sets the shim of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.DisconnectedGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Disconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.DisconnectedSetFuncOfTask">
            <summary>Sets the shim of TransportDisconnectBase.set_Disconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.Dispose">
            <summary>Sets the shim of TransportDisconnectBase.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.End">
            <summary>Sets the shim of TransportDisconnectBase.End()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the shim of TransportDisconnectBase.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.EnqueueOperationFuncOfTask">
            <summary>Sets the shim of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.HeartbeatGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Heartbeat()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.HostShutdownTokenGet">
            <summary>Sets the shim of TransportDisconnectBase.get_HostShutdownToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.IncrementErrors">
            <summary>Sets the shim of TransportDisconnectBase.IncrementErrors()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.InitializePersistentState">
            <summary>Sets the shim of TransportDisconnectBase.InitializePersistentState()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.IsAbortRequestGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsAbortRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.IsAliveGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.IsConnectRequestGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.IsTimedOutGet">
            <summary>Sets the shim of TransportDisconnectBase.get_IsTimedOut()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.KeepAlive">
            <summary>Sets the shim of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.OutputWriterGet">
            <summary>Sets the shim of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.SupportsKeepAliveGet">
            <summary>Sets the shim of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.Timeout">
            <summary>Sets the shim of TransportDisconnectBase.Timeout()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.TraceGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportDisconnectBase.AllInstances.UrlGet">
            <summary>Sets the shim of TransportDisconnectBase.get_Url()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.TransportHeartbeat</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.Transports.TransportHeartbeat)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.Bind(Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AddOrUpdateConnectionITrackingConnection">
            <summary>Sets the shim of TransportHeartbeat.AddOrUpdateConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.BeatObject">
            <summary>Sets the shim of TransportHeartbeat.Beat(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.ConstructorIDependencyResolver">
            <summary>Sets the shim of TransportHeartbeat.TransportHeartbeat(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.Dispose">
            <summary>Sets the shim of TransportHeartbeat.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.DisposeBoolean">
            <summary>Sets the shim of TransportHeartbeat.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.GetConnections">
            <summary>Sets the shim of TransportHeartbeat.GetConnections()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.MarkConnectionITrackingConnection">
            <summary>Sets the shim of TransportHeartbeat.MarkConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.OnKeepAliveErrorAggregateExceptionObject">
            <summary>Sets the shim of TransportHeartbeat.OnKeepAliveError(AggregateException ex, Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.RemoveConnectionITrackingConnection">
            <summary>Sets the shim of TransportHeartbeat.RemoveConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.TraceGet">
            <summary>Sets the shim of TransportHeartbeat.get_Trace()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat._CheckTimeoutAndKeepAliveb__8AggregateExceptionObject">
            <summary>Sets the shim of TransportHeartbeat.&lt;CheckTimeoutAndKeepAlive&gt;b__8(AggregateException ex, Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.AddOrUpdateConnectionITrackingConnection">
            <summary>Sets the shim of TransportHeartbeat.AddOrUpdateConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.BeatObject">
            <summary>Sets the shim of TransportHeartbeat.Beat(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.Dispose">
            <summary>Sets the shim of TransportHeartbeat.Dispose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.DisposeBoolean">
            <summary>Sets the shim of TransportHeartbeat.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.GetConnections">
            <summary>Sets the shim of TransportHeartbeat.GetConnections()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.MarkConnectionITrackingConnection">
            <summary>Sets the shim of TransportHeartbeat.MarkConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.RemoveConnectionITrackingConnection">
            <summary>Sets the shim of TransportHeartbeat.RemoveConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportHeartbeat.AllInstances.TraceGet">
            <summary>Sets the shim of TransportHeartbeat.get_Trace()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.TransportManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.#ctor(Microsoft.AspNet.SignalR.Transports.TransportManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.Bind(Microsoft.AspNet.SignalR.Transports.ITransportManager)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.ConstructorIDependencyResolver">
            <summary>Sets the shim of TransportManager.TransportManager(IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.GetTransportHostContext">
            <summary>Sets the shim of TransportManager.GetTransport(HostContext hostContext)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.RegisterStringFuncOfHostContextITransport">
            <summary>Sets the shim of TransportManager.Register(String transportName, Func`2&lt;HostContext,ITransport&gt; transportFactory)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.RemoveString">
            <summary>Sets the shim of TransportManager.Remove(String transportName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.SupportsTransportString">
            <summary>Sets the shim of TransportManager.SupportsTransport(String transportName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.AllInstances.GetTransportHostContext">
            <summary>Sets the shim of TransportManager.GetTransport(HostContext hostContext)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.AllInstances.RegisterStringFuncOfHostContextITransport">
            <summary>Sets the shim of TransportManager.Register(String transportName, Func`2&lt;HostContext,ITransport&gt; transportFactory)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.AllInstances.RemoveString">
            <summary>Sets the shim of TransportManager.Remove(String transportName)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimTransportManager.AllInstances.SupportsTransportString">
            <summary>Sets the shim of TransportManager.SupportsTransport(String transportName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport">
            <summary>Shim type of Microsoft.AspNet.SignalR.Transports.WebSocketTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Transports.WebSocketTransport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.Bind(Microsoft.AspNet.SignalR.Transports.ITransport)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.CancellationTokenGet">
            <summary>Sets the shim of WebSocketTransport.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.ConstructorHostContextIDependencyResolver">
            <summary>Sets the shim of WebSocketTransport.WebSocketTransport(HostContext context, IDependencyResolver resolver)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.ConstructorHostContextJsonSerializerITransportHeartbeatIPerformanceCounterManagerITraceManagerNullableOfInt32">
            <summary>Sets the shim of WebSocketTransport.WebSocketTransport(HostContext context, JsonSerializer serializer, ITransportHeartbeat heartbeat, IPerformanceCounterManager performanceCounterWriter, ITraceManager traceManager, Nullable`1&lt;Int32&gt; maxIncomingMessageSize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.CreateResponseWriter">
            <summary>Sets the shim of WebSocketTransport.CreateResponseWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.IsAliveGet">
            <summary>Sets the shim of WebSocketTransport.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.KeepAlive">
            <summary>Sets the shim of WebSocketTransport.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.OnClosed">
            <summary>Sets the shim of WebSocketTransport.OnClosed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.OnMessageString">
            <summary>Sets the shim of WebSocketTransport.OnMessage(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.OnSocketErrorException">
            <summary>Sets the shim of WebSocketTransport.OnSocketError(Exception error)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.PerformSendObject">
            <summary>Sets the shim of WebSocketTransport.PerformSend(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.ProcessRequestITransportConnection">
            <summary>Sets the shim of WebSocketTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.SendObject">
            <summary>Sets the shim of WebSocketTransport.Send(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.SendPersistentResponse">
            <summary>Sets the shim of WebSocketTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport._KeepAliveb__0Object">
            <summary>Sets the shim of WebSocketTransport.&lt;KeepAlive&gt;b__0(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport._Sendb__6Object">
            <summary>Sets the shim of WebSocketTransport.&lt;Send&gt;b__6(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.CancellationTokenGet">
            <summary>Sets the shim of WebSocketTransport.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.CreateResponseWriter">
            <summary>Sets the shim of WebSocketTransport.CreateResponseWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.IsAliveGet">
            <summary>Sets the shim of WebSocketTransport.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.KeepAlive">
            <summary>Sets the shim of WebSocketTransport.KeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.OnClosed">
            <summary>Sets the shim of WebSocketTransport.OnClosed()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.OnMessageString">
            <summary>Sets the shim of WebSocketTransport.OnMessage(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.OnSocketErrorException">
            <summary>Sets the shim of WebSocketTransport.OnSocketError(Exception error)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.ProcessRequestITransportConnection">
            <summary>Sets the shim of WebSocketTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.SendObject">
            <summary>Sets the shim of WebSocketTransport.Send(Object value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.ShimWebSocketTransport.AllInstances.SendPersistentResponse">
            <summary>Sets the shim of WebSocketTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ForeverFrameTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.CancellationTokenGet">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.CreateResponseWriter">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.CreateResponseWriter01">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.DisconnectThresholdGet">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.DisposeBoolean">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.EnqueueOperationFuncOfTask">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InitializePersistentState">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InitializePersistentState01">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ForeverFrameTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InitializeResponseITransportConnection">
            <summary>Sets the stub of ForeverFrameTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InitializeStub">
            <summary>Initializes a new instance of type StubForeverFrameTransport</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.IsAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.IsConnectRequestGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.KeepAlive">
            <summary>Sets the stub of ForeverFrameTransport.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.KeepAlive01">
            <summary>Sets the stub of ForeverFrameTransport.KeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.OnSending(System.String)">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.OnSendingResponsePersistentResponse">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.OnSendingString">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.OutputWriterGet">
            <summary>Sets the stub of ForeverFrameTransport.get_OutputWriter()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.ProcessRequestITransportConnection">
            <summary>Sets the stub of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ForeverFrameTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.Send(System.Object)">
            <summary>Sets the stub of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.SendObject">
            <summary>Sets the stub of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.SendPersistentResponse">
            <summary>Sets the stub of ForeverFrameTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.SupportsKeepAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.CancellationToken">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.DisconnectThreshold">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.IsAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.IsConnectRequest">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.OutputWriter">
            <summary>Sets the stub of ForeverFrameTransport.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverFrameTransport.SupportsKeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ForeverTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.CancellationTokenGet">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.CreateResponseWriter">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.CreateResponseWriter01">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.DisconnectThresholdGet">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.DisposeBoolean">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.EnqueueOperationFuncOfTask">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InitializePersistentState">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InitializePersistentState01">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ForeverTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InitializeResponseITransportConnection">
            <summary>Sets the stub of ForeverTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InitializeStub">
            <summary>Initializes a new instance of type StubForeverTransport</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.IsAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.IsConnectRequestGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.KeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.KeepAlive01">
            <summary>Sets the stub of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.OnSending(System.String)">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.OnSendingResponsePersistentResponse">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.OnSendingString">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.OutputWriterGet">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.ProcessRequestITransportConnection">
            <summary>Sets the stub of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ForeverTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.Send(System.Object)">
            <summary>Sets the stub of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.SendObject">
            <summary>Sets the stub of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.SendPersistentResponse">
            <summary>Sets the stub of ForeverTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.SupportsKeepAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.CancellationToken">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.DisconnectThreshold">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.IsAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.IsConnectRequest">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.OutputWriter">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubForeverTransport.SupportsKeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ITrackingConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.#ctor">
            <summary>Initializes a new instance of type StubITrackingConnection</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.ApplyStateTransportConnectionStates">
            <summary>Sets the stub of ITrackingConnection.ApplyState(TransportConnectionStates states)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.CancellationTokenGet">
            <summary>Sets the stub of ITrackingConnection.get_CancellationToken()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.ConnectTaskGet">
            <summary>Sets the stub of ITrackingConnection.get_ConnectTask()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.ConnectionIdGet">
            <summary>Sets the stub of ITrackingConnection.get_ConnectionId()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.Disconnect">
            <summary>Sets the stub of ITrackingConnection.Disconnect()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.DisconnectThresholdGet">
            <summary>Sets the stub of ITrackingConnection.get_DisconnectThreshold()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.End">
            <summary>Sets the stub of ITrackingConnection.End()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.IsAliveGet">
            <summary>Sets the stub of ITrackingConnection.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.IsTimedOutGet">
            <summary>Sets the stub of ITrackingConnection.get_IsTimedOut()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.KeepAlive">
            <summary>Sets the stub of ITrackingConnection.KeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#ApplyState(Microsoft.AspNet.SignalR.Transports.TransportConnectionStates)">
            <summary>Sets the stub of ITrackingConnection.ApplyState(TransportConnectionStates states)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#Disconnect">
            <summary>Sets the stub of ITrackingConnection.Disconnect()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#End">
            <summary>Sets the stub of ITrackingConnection.End()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#KeepAlive">
            <summary>Sets the stub of ITrackingConnection.KeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#Timeout">
            <summary>Sets the stub of ITrackingConnection.Timeout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.SupportsKeepAliveGet">
            <summary>Sets the stub of ITrackingConnection.get_SupportsKeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.Timeout">
            <summary>Sets the stub of ITrackingConnection.Timeout()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.UrlGet">
            <summary>Sets the stub of ITrackingConnection.get_Url()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#CancellationToken">
            <summary>Sets the stub of ITrackingConnection.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#ConnectTask">
            <summary>Sets the stub of ITrackingConnection.get_ConnectTask()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#ConnectionId">
            <summary>Sets the stub of ITrackingConnection.get_ConnectionId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#DisconnectThreshold">
            <summary>Sets the stub of ITrackingConnection.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#IsAlive">
            <summary>Sets the stub of ITrackingConnection.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#IsTimedOut">
            <summary>Sets the stub of ITrackingConnection.get_IsTimedOut()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#SupportsKeepAlive">
            <summary>Sets the stub of ITrackingConnection.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITrackingConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITrackingConnection#Url">
            <summary>Sets the stub of ITrackingConnection.get_Url()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ITransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.#ctor">
            <summary>Initializes a new instance of type StubITransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.AttachBackingFieldToConnected">
            <summary>Attaches delegates to emulate StubITransport.Connected as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.AttachBackingFieldToConnectionId">
            <summary>Attaches delegates to emulate StubITransport.ConnectionId as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.AttachBackingFieldToDisconnected">
            <summary>Attaches delegates to emulate StubITransport.Disconnected as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.AttachBackingFieldToReceived">
            <summary>Attaches delegates to emulate StubITransport.Received as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.AttachBackingFieldToReconnected">
            <summary>Attaches delegates to emulate StubITransport.Reconnected as a property with a backing field.</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.AttachBackingFieldToTransportConnected">
            <summary>Attaches delegates to emulate StubITransport.TransportConnected as a property with a backing field.</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ConnectedGet">
            <summary>Sets the stub of ITransport.get_Connected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ConnectedSetFuncOfTask">
            <summary>Sets the stub of ITransport.set_Connected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ConnectionIdGet">
            <summary>Sets the stub of ITransport.get_ConnectionId()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ConnectionIdSetString">
            <summary>Sets the stub of ITransport.set_ConnectionId(String value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.DisconnectedGet">
            <summary>Sets the stub of ITransport.get_Disconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.DisconnectedSetFuncOfTask">
            <summary>Sets the stub of ITransport.set_Disconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ITransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#Send(System.Object)">
            <summary>Sets the stub of ITransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ProcessRequestITransportConnection">
            <summary>Sets the stub of ITransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ReceivedGet">
            <summary>Sets the stub of ITransport.get_Received()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ReceivedSetFuncOfStringTask">
            <summary>Sets the stub of ITransport.set_Received(Func`2&lt;String,Task&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ReconnectedGet">
            <summary>Sets the stub of ITransport.get_Reconnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.ReconnectedSetFuncOfTask">
            <summary>Sets the stub of ITransport.set_Reconnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.SendObject">
            <summary>Sets the stub of ITransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.TransportConnectedGet">
            <summary>Sets the stub of ITransport.get_TransportConnected()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.TransportConnectedSetFuncOfTask">
            <summary>Sets the stub of ITransport.set_TransportConnected(Func`1&lt;Task&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#Connected">
            <summary>Sets the stub of ITransport.get_Connected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#ConnectionId">
            <summary>Sets the stub of ITransport.get_ConnectionId()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#Disconnected">
            <summary>Sets the stub of ITransport.get_Disconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#Received">
            <summary>Sets the stub of ITransport.get_Received()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#Reconnected">
            <summary>Sets the stub of ITransport.get_Reconnected()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransport.mansrc::Microsoft#AspNet#SignalR#Transports#ITransport#TransportConnected">
            <summary>Sets the stub of ITransport.get_TransportConnected()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportConnection">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ITransportConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportConnection.#ctor">
            <summary>Initializes a new instance of type StubITransportConnection</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportConnection#Receive(System.String,System.Func{Microsoft.AspNet.SignalR.Transports.PersistentResponse,System.Object,System.Threading.Tasks.Task{System.Boolean}},System.Int32,System.Object)">
            <summary>Sets the stub of ITransportConnection.Receive(String messageId, Func`3&lt;PersistentResponse,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportConnection.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportConnection#Send(Microsoft.AspNet.SignalR.ConnectionMessage)">
            <summary>Sets the stub of ITransportConnection.Send(ConnectionMessage message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportConnection.ReceiveStringFuncOfPersistentResponseObjectTaskOfBooleanInt32Object">
            <summary>Sets the stub of ITransportConnection.Receive(String messageId, Func`3&lt;PersistentResponse,Object,Task`1&lt;Boolean&gt;&gt; callback, Int32 maxMessages, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportConnection.SendConnectionMessage">
            <summary>Sets the stub of ITransportConnection.Send(ConnectionMessage message)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.#ctor">
            <summary>Initializes a new instance of type StubITransportHeartbeat</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.AddOrUpdateConnectionITrackingConnection">
            <summary>Sets the stub of ITransportHeartbeat.AddOrUpdateConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.GetConnections">
            <summary>Sets the stub of ITransportHeartbeat.GetConnections()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.MarkConnectionITrackingConnection">
            <summary>Sets the stub of ITransportHeartbeat.MarkConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportHeartbeat#AddOrUpdateConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Sets the stub of ITransportHeartbeat.AddOrUpdateConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportHeartbeat#GetConnections">
            <summary>Sets the stub of ITransportHeartbeat.GetConnections()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportHeartbeat#MarkConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Sets the stub of ITransportHeartbeat.MarkConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportHeartbeat#RemoveConnection(Microsoft.AspNet.SignalR.Transports.ITrackingConnection)">
            <summary>Sets the stub of ITransportHeartbeat.RemoveConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportHeartbeat.RemoveConnectionITrackingConnection">
            <summary>Sets the stub of ITransportHeartbeat.RemoveConnection(ITrackingConnection connection)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ITransportManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportManager.#ctor">
            <summary>Initializes a new instance of type StubITransportManager</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportManager.GetTransportHostContext">
            <summary>Sets the stub of ITransportManager.GetTransport(HostContext hostContext)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportManager.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportManager#GetTransport(Microsoft.AspNet.SignalR.Hosting.HostContext)">
            <summary>Sets the stub of ITransportManager.GetTransport(HostContext hostContext)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportManager.mansrc::Microsoft#AspNet#SignalR#Transports#ITransportManager#SupportsTransport(System.String)">
            <summary>Sets the stub of ITransportManager.SupportsTransport(String transportName)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubITransportManager.SupportsTransportString">
            <summary>Sets the stub of ITransportManager.SupportsTransport(String transportName)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.LongPollingTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,Microsoft.AspNet.SignalR.Configuration.IConfigurationManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.CancellationTokenGet">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.CreateResponseWriter">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.CreateResponseWriter01">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.DisconnectThresholdGet">
            <summary>Sets the stub of LongPollingTransport.get_DisconnectThreshold()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.DisposeBoolean">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.EnqueueOperationFuncOfTask">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.InitializePersistentState">
            <summary>Sets the stub of TransportDisconnectBase.InitializePersistentState()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.InitializePersistentState01">
            <summary>Sets the stub of TransportDisconnectBase.InitializePersistentState()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.InitializeStub">
            <summary>Initializes a new instance of type StubLongPollingTransport</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.IsAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.IsConnectRequestGet">
            <summary>Sets the stub of LongPollingTransport.get_IsConnectRequest()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.KeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.KeepAlive01">
            <summary>Sets the stub of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.OutputWriterGet">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.SupportsKeepAliveGet">
            <summary>Sets the stub of LongPollingTransport.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.CancellationToken">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.DisconnectThreshold">
            <summary>Sets the stub of LongPollingTransport.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.IsAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.IsConnectRequest">
            <summary>Sets the stub of LongPollingTransport.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.OutputWriter">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubLongPollingTransport.SupportsKeepAlive">
            <summary>Sets the stub of LongPollingTransport.get_SupportsKeepAlive()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.ServerSentEventsTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.CancellationTokenGet">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.CreateResponseWriter">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.CreateResponseWriter01">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.DisconnectThresholdGet">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.DisposeBoolean">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.EnqueueOperationFuncOfTask">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InitializePersistentState">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InitializePersistentState01">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ServerSentEventsTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InitializeResponseITransportConnection">
            <summary>Sets the stub of ServerSentEventsTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InitializeStub">
            <summary>Initializes a new instance of type StubServerSentEventsTransport</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.IsAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.IsConnectRequestGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.KeepAlive">
            <summary>Sets the stub of ServerSentEventsTransport.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.KeepAlive01">
            <summary>Sets the stub of ServerSentEventsTransport.KeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.OnSending(System.String)">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.OnSendingResponsePersistentResponse">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.OnSendingString">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.OutputWriterGet">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.ProcessRequestITransportConnection">
            <summary>Sets the stub of ForeverTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ServerSentEventsTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.Send(System.Object)">
            <summary>Sets the stub of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.SendObject">
            <summary>Sets the stub of ForeverTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.SendPersistentResponse">
            <summary>Sets the stub of ServerSentEventsTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.SupportsKeepAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.CancellationToken">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.DisconnectThreshold">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.IsAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.IsConnectRequest">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.OutputWriter">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubServerSentEventsTransport.SupportsKeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.TransportDisconnectBase</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.CancellationTokenGet">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.CreateResponseWriter">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.CreateResponseWriter01">
            <summary>Sets the stub of TransportDisconnectBase.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.DisconnectThresholdGet">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.DisposeBoolean">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.EnqueueOperationFuncOfTask">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.InitializePersistentState">
            <summary>Sets the stub of TransportDisconnectBase.InitializePersistentState()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.InitializePersistentState01">
            <summary>Sets the stub of TransportDisconnectBase.InitializePersistentState()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.InitializeStub">
            <summary>Initializes a new instance of type StubTransportDisconnectBase</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.IsAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.IsConnectRequestGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.KeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.KeepAlive01">
            <summary>Sets the stub of TransportDisconnectBase.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.OutputWriterGet">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.SupportsKeepAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.CancellationToken">
            <summary>Sets the stub of TransportDisconnectBase.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.DisconnectThreshold">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.IsAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.IsConnectRequest">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.OutputWriter">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportDisconnectBase.SupportsKeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.TransportHeartbeat</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportHeartbeat.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.DisposeBoolean">
            <summary>Sets the stub of TransportHeartbeat.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.InitializeStub">
            <summary>Initializes a new instance of type StubTransportHeartbeat</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportHeartbeat.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportManager">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.TransportManager</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportManager.#ctor(Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportManager.InitializeStub">
            <summary>Initializes a new instance of type StubTransportManager</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportManager.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportManager.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubTransportManager.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport">
            <summary>Stub type of Microsoft.AspNet.SignalR.Transports.WebSocketTransport</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Microsoft.AspNet.SignalR.IDependencyResolver)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.#ctor(Microsoft.AspNet.SignalR.Hosting.HostContext,Newtonsoft.Json.JsonSerializer,Microsoft.AspNet.SignalR.Transports.ITransportHeartbeat,Microsoft.AspNet.SignalR.Infrastructure.IPerformanceCounterManager,Microsoft.AspNet.SignalR.Tracing.ITraceManager,System.Nullable{System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.CancellationTokenGet">
            <summary>Sets the stub of WebSocketTransport.get_CancellationToken()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.CreateResponseWriter">
            <summary>Sets the stub of WebSocketTransport.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.CreateResponseWriter01">
            <summary>Sets the stub of WebSocketTransport.CreateResponseWriter()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.DisconnectThresholdGet">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.Dispose(System.Boolean)">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.DisposeBoolean">
            <summary>Sets the stub of TransportDisconnectBase.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.EnqueueOperation(System.Func{System.Threading.Tasks.Task})">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.EnqueueOperation(System.Func{System.Object,System.Threading.Tasks.Task},System.Object)">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.EnqueueOperationFuncOfObjectTaskObject">
            <summary>Sets the stub of ForeverTransport.EnqueueOperation(Func`2&lt;Object,Task&gt; writeAsync, Object state)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.EnqueueOperationFuncOfTask">
            <summary>Sets the stub of TransportDisconnectBase.EnqueueOperation(Func`1&lt;Task&gt; writeAsync)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InitializePersistentState">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InitializePersistentState01">
            <summary>Sets the stub of ForeverTransport.InitializePersistentState()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InitializeResponse(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of ForeverTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InitializeResponseITransportConnection">
            <summary>Sets the stub of ForeverTransport.InitializeResponse(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketTransport</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.IsAliveGet">
            <summary>Sets the stub of WebSocketTransport.get_IsAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.IsConnectRequestGet">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.KeepAlive">
            <summary>Sets the stub of WebSocketTransport.KeepAlive()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.KeepAlive01">
            <summary>Sets the stub of WebSocketTransport.KeepAlive()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.OnSending(System.String)">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.OnSendingResponse(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.OnSendingResponsePersistentResponse">
            <summary>Sets the stub of ForeverTransport.OnSendingResponse(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.OnSendingString">
            <summary>Sets the stub of ForeverTransport.OnSending(String payload)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.OutputWriterGet">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.ProcessRequest(Microsoft.AspNet.SignalR.Transports.ITransportConnection)">
            <summary>Sets the stub of WebSocketTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.ProcessRequestITransportConnection">
            <summary>Sets the stub of WebSocketTransport.ProcessRequest(ITransportConnection connection)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.Send(Microsoft.AspNet.SignalR.Transports.PersistentResponse)">
            <summary>Sets the stub of WebSocketTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.Send(System.Object)">
            <summary>Sets the stub of WebSocketTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.SendObject">
            <summary>Sets the stub of WebSocketTransport.Send(Object value)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.SendPersistentResponse">
            <summary>Sets the stub of WebSocketTransport.Send(PersistentResponse response)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.SupportsKeepAliveGet">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.CancellationToken">
            <summary>Sets the stub of WebSocketTransport.get_CancellationToken()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.DisconnectThreshold">
            <summary>Sets the stub of TransportDisconnectBase.get_DisconnectThreshold()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.IsAlive">
            <summary>Sets the stub of WebSocketTransport.get_IsAlive()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.IsConnectRequest">
            <summary>Sets the stub of TransportDisconnectBase.get_IsConnectRequest()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.OutputWriter">
            <summary>Sets the stub of TransportDisconnectBase.get_OutputWriter()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.Transports.Fakes.StubWebSocketTransport.SupportsKeepAlive">
            <summary>Sets the stub of TransportDisconnectBase.get_SupportsKeepAlive()</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler">
            <summary>Shim type of Microsoft.AspNet.SignalR.WebSockets.DefaultWebSocketHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.#ctor(Microsoft.AspNet.SignalR.WebSockets.DefaultWebSocketHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.CloseAsync">
            <summary>Sets the shim of DefaultWebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.ConstructorNullableOfInt32">
            <summary>Sets the shim of DefaultWebSocketHandler.DefaultWebSocketHandler(Nullable`1&lt;Int32&gt; maxIncomingMessageSize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.Flush">
            <summary>Sets the shim of DefaultWebSocketHandler.Flush()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.MicrosoftAspNetSignalRHostingIWebSocketSendString">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.Send(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.NextMessageToSendGet">
            <summary>Sets the shim of DefaultWebSocketHandler.get_NextMessageToSend()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.NextMessageToSendSetArraySegmentOfByte">
            <summary>Sets the shim of DefaultWebSocketHandler.set_NextMessageToSend(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnClose">
            <summary>Sets the shim of DefaultWebSocketHandler.OnClose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnCloseMicrosoftAspNetSignalRHostingIWebSocketget">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.get_OnClose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnCloseMicrosoftAspNetSignalRHostingIWebSocketsetAction">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.set_OnClose(Action value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnError">
            <summary>Sets the shim of DefaultWebSocketHandler.OnError()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnErrorMicrosoftAspNetSignalRHostingIWebSocketget">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.get_OnError()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnErrorMicrosoftAspNetSignalRHostingIWebSocketsetActionOfException">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.set_OnError(Action`1&lt;Exception&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnMessageMicrosoftAspNetSignalRHostingIWebSocketget">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.get_OnMessage()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnMessageMicrosoftAspNetSignalRHostingIWebSocketsetActionOfString">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.set_OnMessage(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.OnMessageString">
            <summary>Sets the shim of DefaultWebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.SendChunkArraySegmentOfByte">
            <summary>Sets the shim of DefaultWebSocketHandler.SendChunk(ArraySegment`1&lt;Byte&gt; message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.SendString">
            <summary>Sets the shim of DefaultWebSocketHandler.Send(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler._ctorb__15">
            <summary>Sets the shim of DefaultWebSocketHandler.&lt;.ctor&gt;b__15()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler._ctorb__16Exception">
            <summary>Sets the shim of DefaultWebSocketHandler.&lt;.ctor&gt;b__16(Exception e)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler._ctorb__17String">
            <summary>Sets the shim of DefaultWebSocketHandler.&lt;.ctor&gt;b__17(String msg)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.CloseAsync">
            <summary>Sets the shim of DefaultWebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.Flush">
            <summary>Sets the shim of DefaultWebSocketHandler.Flush()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.MicrosoftAspNetSignalRHostingIWebSocketSendString">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.Send(String value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.NextMessageToSendGet">
            <summary>Sets the shim of DefaultWebSocketHandler.get_NextMessageToSend()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.NextMessageToSendSetArraySegmentOfByte">
            <summary>Sets the shim of DefaultWebSocketHandler.set_NextMessageToSend(ArraySegment`1&lt;Byte&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnClose">
            <summary>Sets the shim of DefaultWebSocketHandler.OnClose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnCloseMicrosoftAspNetSignalRHostingIWebSocketget">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.get_OnClose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnCloseMicrosoftAspNetSignalRHostingIWebSocketsetAction">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.set_OnClose(Action value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnError">
            <summary>Sets the shim of DefaultWebSocketHandler.OnError()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnErrorMicrosoftAspNetSignalRHostingIWebSocketget">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.get_OnError()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnErrorMicrosoftAspNetSignalRHostingIWebSocketsetActionOfException">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.set_OnError(Action`1&lt;Exception&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnMessageMicrosoftAspNetSignalRHostingIWebSocketget">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.get_OnMessage()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnMessageMicrosoftAspNetSignalRHostingIWebSocketsetActionOfString">
            <summary>Sets the shim of DefaultWebSocketHandler.Microsoft.AspNet.SignalR.Hosting.IWebSocket.set_OnMessage(Action`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.OnMessageString">
            <summary>Sets the shim of DefaultWebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.SendChunkArraySegmentOfByte">
            <summary>Sets the shim of DefaultWebSocketHandler.SendChunk(ArraySegment`1&lt;Byte&gt; message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimDefaultWebSocketHandler.AllInstances.SendString">
            <summary>Sets the shim of DefaultWebSocketHandler.Send(String message)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler">
            <summary>Shim type of Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.#ctor(Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.CloseAsync">
            <summary>Sets the shim of WebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.ConstructorNullableOfInt32">
            <summary>Sets the shim of WebSocketHandler.WebSocketHandler(Nullable`1&lt;Int32&gt; maxIncomingMessageSize)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.ErrorGet">
            <summary>Sets the shim of WebSocketHandler.get_Error()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.ErrorSetException">
            <summary>Sets the shim of WebSocketHandler.set_Error(Exception value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.IsClosedOrClosedSentWebSocket">
            <summary>Sets the shim of WebSocketHandler.IsClosedOrClosedSent(WebSocket webSocket)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.IsFatalExceptionException">
            <summary>Sets the shim of WebSocketHandler.IsFatalException(Exception ex)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.MaxIncomingMessageSizeGet">
            <summary>Sets the shim of WebSocketHandler.get_MaxIncomingMessageSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.OnClose">
            <summary>Sets the shim of WebSocketHandler.OnClose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.OnError">
            <summary>Sets the shim of WebSocketHandler.OnError()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.OnMessageByteArray">
            <summary>Sets the shim of WebSocketHandler.OnMessage(Byte[] message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.OnMessageString">
            <summary>Sets the shim of WebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.OnOpen">
            <summary>Sets the shim of WebSocketHandler.OnOpen()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.ProcessWebSocketRequestAsyncWebSocketCancellationToken">
            <summary>Sets the shim of WebSocketHandler.ProcessWebSocketRequestAsync(WebSocket webSocket, CancellationToken disconnectToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.SendAsyncArraySegmentOfByteWebSocketMessageTypeBoolean">
            <summary>Sets the shim of WebSocketHandler.SendAsync(ArraySegment`1&lt;Byte&gt; message, WebSocketMessageType messageType, Boolean endOfMessage)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.SendAsyncString">
            <summary>Sets the shim of WebSocketHandler.SendAsync(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.SendString">
            <summary>Sets the shim of WebSocketHandler.Send(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.StaticConstructor">
            <summary>Sets the shim of WebSocketHandler.WebSocketHandler()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.WebSocketGet">
            <summary>Sets the shim of WebSocketHandler.get_WebSocket()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.WebSocketSetWebSocket">
            <summary>Sets the shim of WebSocketHandler.set_WebSocket(WebSocket value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler._CloseAsyncb__6Object">
            <summary>Sets the shim of WebSocketHandler.&lt;CloseAsync&gt;b__6(Object state)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler._SendAsyncb__0Object">
            <summary>Sets the shim of WebSocketHandler.&lt;SendAsync&gt;b__0(Object state)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.CloseAsync">
            <summary>Sets the shim of WebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.ErrorGet">
            <summary>Sets the shim of WebSocketHandler.get_Error()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.ErrorSetException">
            <summary>Sets the shim of WebSocketHandler.set_Error(Exception value)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.MaxIncomingMessageSizeGet">
            <summary>Sets the shim of WebSocketHandler.get_MaxIncomingMessageSize()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.OnClose">
            <summary>Sets the shim of WebSocketHandler.OnClose()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.OnError">
            <summary>Sets the shim of WebSocketHandler.OnError()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.OnMessageByteArray">
            <summary>Sets the shim of WebSocketHandler.OnMessage(Byte[] message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.OnMessageString">
            <summary>Sets the shim of WebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.OnOpen">
            <summary>Sets the shim of WebSocketHandler.OnOpen()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.ProcessWebSocketRequestAsyncWebSocketCancellationToken">
            <summary>Sets the shim of WebSocketHandler.ProcessWebSocketRequestAsync(WebSocket webSocket, CancellationToken disconnectToken)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.SendAsyncArraySegmentOfByteWebSocketMessageTypeBoolean">
            <summary>Sets the shim of WebSocketHandler.SendAsync(ArraySegment`1&lt;Byte&gt; message, WebSocketMessageType messageType, Boolean endOfMessage)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.SendAsyncString">
            <summary>Sets the shim of WebSocketHandler.SendAsync(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.SendString">
            <summary>Sets the shim of WebSocketHandler.Send(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.WebSocketGet">
            <summary>Sets the shim of WebSocketHandler.get_WebSocket()</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.ShimWebSocketHandler.AllInstances.WebSocketSetWebSocket">
            <summary>Sets the shim of WebSocketHandler.set_WebSocket(WebSocket value)</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler">
            <summary>Stub type of Microsoft.AspNet.SignalR.WebSockets.DefaultWebSocketHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.#ctor(System.Nullable{System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.CloseAsync">
            <summary>Sets the stub of DefaultWebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.CloseAsync01">
            <summary>Sets the stub of DefaultWebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.InitializeStub">
            <summary>Initializes a new instance of type StubDefaultWebSocketHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnClose">
            <summary>Sets the stub of DefaultWebSocketHandler.OnClose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnClose01">
            <summary>Sets the stub of DefaultWebSocketHandler.OnClose()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnError">
            <summary>Sets the stub of DefaultWebSocketHandler.OnError()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnError01">
            <summary>Sets the stub of DefaultWebSocketHandler.OnError()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnMessage(System.String)">
            <summary>Sets the stub of DefaultWebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnMessage(System.Byte[])">
            <summary>Sets the stub of WebSocketHandler.OnMessage(Byte[] message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnMessageByteArray">
            <summary>Sets the stub of WebSocketHandler.OnMessage(Byte[] message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnMessageString">
            <summary>Sets the stub of DefaultWebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnOpen">
            <summary>Sets the stub of WebSocketHandler.OnOpen()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.OnOpen01">
            <summary>Sets the stub of WebSocketHandler.OnOpen()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.Send(System.String)">
            <summary>Sets the stub of DefaultWebSocketHandler.Send(String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
            <summary>Sets the stub of WebSocketHandler.SendAsync(ArraySegment`1&lt;Byte&gt; message, WebSocketMessageType messageType, Boolean endOfMessage)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.SendAsyncArraySegmentOfByteWebSocketMessageTypeBoolean">
            <summary>Sets the stub of WebSocketHandler.SendAsync(ArraySegment`1&lt;Byte&gt; message, WebSocketMessageType messageType, Boolean endOfMessage)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.SendString">
            <summary>Sets the stub of DefaultWebSocketHandler.Send(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubDefaultWebSocketHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler">
            <summary>Stub type of Microsoft.AspNet.SignalR.WebSockets.WebSocketHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.#ctor(System.Nullable{System.Int32})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.CloseAsync">
            <summary>Sets the stub of WebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.CloseAsync01">
            <summary>Sets the stub of WebSocketHandler.CloseAsync()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.InitializeStub">
            <summary>Initializes a new instance of type StubWebSocketHandler</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnClose">
            <summary>Sets the stub of WebSocketHandler.OnClose()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnClose01">
            <summary>Sets the stub of WebSocketHandler.OnClose()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnError">
            <summary>Sets the stub of WebSocketHandler.OnError()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnError01">
            <summary>Sets the stub of WebSocketHandler.OnError()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnMessage(System.String)">
            <summary>Sets the stub of WebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnMessage(System.Byte[])">
            <summary>Sets the stub of WebSocketHandler.OnMessage(Byte[] message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnMessageByteArray">
            <summary>Sets the stub of WebSocketHandler.OnMessage(Byte[] message)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnMessageString">
            <summary>Sets the stub of WebSocketHandler.OnMessage(String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnOpen">
            <summary>Sets the stub of WebSocketHandler.OnOpen()</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.OnOpen01">
            <summary>Sets the stub of WebSocketHandler.OnOpen()</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.Send(System.String)">
            <summary>Sets the stub of WebSocketHandler.Send(String message)</summary>
        </member>
        <member name="M:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean)">
            <summary>Sets the stub of WebSocketHandler.SendAsync(ArraySegment`1&lt;Byte&gt; message, WebSocketMessageType messageType, Boolean endOfMessage)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.SendAsyncArraySegmentOfByteWebSocketMessageTypeBoolean">
            <summary>Sets the stub of WebSocketHandler.SendAsync(ArraySegment`1&lt;Byte&gt; message, WebSocketMessageType messageType, Boolean endOfMessage)</summary>
        </member>
        <member name="F:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.SendString">
            <summary>Sets the stub of WebSocketHandler.Send(String message)</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:Microsoft.AspNet.SignalR.WebSockets.Fakes.StubWebSocketHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MicrosoftAspNetSignalRCoreDelegates">
            <summary>Contains custom delegates used for the stubs and shims of Microsoft.AspNet.SignalR.Core</summary>
        </member>
        <member name="T:Owin.Fakes.ShimObsoleteOwinExtensions">
            <summary>Shim type of Owin.ObsoleteOwinExtensions</summary>
        </member>
        <member name="M:Owin.Fakes.ShimObsoleteOwinExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Owin.Fakes.ShimObsoleteOwinExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Owin.Fakes.ShimObsoleteOwinExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Owin.Fakes.ShimObsoleteOwinExtensions.MapConnectionOf1IAppBuilderString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Owin.IAppBuilder,System.String,Owin.IAppBuilder})">
            <summary>Sets the shim of ObsoleteOwinExtensions.MapConnection(IAppBuilder builder, String path)</summary>
        </member>
        <member name="M:Owin.Fakes.ShimObsoleteOwinExtensions.MapConnectionOf1IAppBuilderStringConnectionConfiguration``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration,Owin.IAppBuilder})">
            <summary>Sets the shim of ObsoleteOwinExtensions.MapConnection(IAppBuilder builder, String path, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimObsoleteOwinExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Owin.Fakes.ShimObsoleteOwinExtensions.IsEmptyOrForwardSlashString">
            <summary>Sets the shim of ObsoleteOwinExtensions.IsEmptyOrForwardSlash(String path)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimObsoleteOwinExtensions.MapConnectionIAppBuilderStringTypeConnectionConfiguration">
            <summary>Sets the shim of ObsoleteOwinExtensions.MapConnection(IAppBuilder builder, String path, Type connectionType, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimObsoleteOwinExtensions.MapHubsIAppBuilder">
            <summary>Sets the shim of ObsoleteOwinExtensions.MapHubs(IAppBuilder builder)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimObsoleteOwinExtensions.MapHubsIAppBuilderHubConfiguration">
            <summary>Sets the shim of ObsoleteOwinExtensions.MapHubs(IAppBuilder builder, HubConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimObsoleteOwinExtensions.MapHubsIAppBuilderStringHubConfiguration">
            <summary>Sets the shim of ObsoleteOwinExtensions.MapHubs(IAppBuilder builder, String path, HubConfiguration configuration)</summary>
        </member>
        <member name="T:Owin.Fakes.ShimOwinExtensions">
            <summary>Shim type of Owin.OwinExtensions</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.MapSignalROf1IAppBuilderString``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Owin.IAppBuilder,System.String,Owin.IAppBuilder})">
            <summary>Sets the shim of OwinExtensions.MapSignalR(IAppBuilder builder, String path)</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.MapSignalROf1IAppBuilderStringConnectionConfiguration``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Owin.IAppBuilder,System.String,Microsoft.AspNet.SignalR.ConnectionConfiguration,Owin.IAppBuilder})">
            <summary>Sets the shim of OwinExtensions.MapSignalR(IAppBuilder builder, String path, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.RunSignalROf1IAppBuilder``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Owin.IAppBuilder})">
            <summary>Sets the shim of OwinExtensions.RunSignalR(IAppBuilder builder)</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.RunSignalROf1IAppBuilderConnectionConfiguration``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{Owin.IAppBuilder,Microsoft.AspNet.SignalR.ConnectionConfiguration})">
            <summary>Sets the shim of OwinExtensions.RunSignalR(IAppBuilder builder, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="M:Owin.Fakes.ShimOwinExtensions.UseSignalRMiddlewareOf1IAppBuilderObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Owin.IAppBuilder,System.Object[],Owin.IAppBuilder})">
            <summary>Sets the shim of OwinExtensions.UseSignalRMiddleware(IAppBuilder builder, Object[] args)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.MapSignalRIAppBuilder">
            <summary>Sets the shim of OwinExtensions.MapSignalR(IAppBuilder builder)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.MapSignalRIAppBuilderHubConfiguration">
            <summary>Sets the shim of OwinExtensions.MapSignalR(IAppBuilder builder, HubConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.MapSignalRIAppBuilderStringHubConfiguration">
            <summary>Sets the shim of OwinExtensions.MapSignalR(IAppBuilder builder, String path, HubConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.MapSignalRIAppBuilderStringTypeConnectionConfiguration">
            <summary>Sets the shim of OwinExtensions.MapSignalR(IAppBuilder builder, String path, Type connectionType, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.RunSignalRIAppBuilder">
            <summary>Sets the shim of OwinExtensions.RunSignalR(IAppBuilder builder)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.RunSignalRIAppBuilderHubConfiguration">
            <summary>Sets the shim of OwinExtensions.RunSignalR(IAppBuilder builder, HubConfiguration configuration)</summary>
        </member>
        <member name="P:Owin.Fakes.ShimOwinExtensions.RunSignalRIAppBuilderTypeConnectionConfiguration">
            <summary>Sets the shim of OwinExtensions.RunSignalR(IAppBuilder builder, Type connectionType, ConnectionConfiguration configuration)</summary>
        </member>
        <member name="T:System.Diagnostics.Fakes.ShimTraceSourceExtensions">
            <summary>Shim type of System.Diagnostics.TraceSourceExtensions</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimTraceSourceExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimTraceSourceExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.Diagnostics.Fakes.ShimTraceSourceExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceErrorTraceSourceString">
            <summary>Sets the shim of TraceSourceExtensions.TraceError(TraceSource traceSource, String msg)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceErrorTraceSourceStringObjectArray">
            <summary>Sets the shim of TraceSourceExtensions.TraceError(TraceSource traceSource, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceTraceSourceTraceEventTypeString">
            <summary>Sets the shim of TraceSourceExtensions.Trace(TraceSource traceSource, TraceEventType eventType, String msg)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceTraceSourceTraceEventTypeStringObjectArray">
            <summary>Sets the shim of TraceSourceExtensions.Trace(TraceSource traceSource, TraceEventType eventType, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceVerboseTraceSourceString">
            <summary>Sets the shim of TraceSourceExtensions.TraceVerbose(TraceSource traceSource, String msg)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceVerboseTraceSourceStringObjectArray">
            <summary>Sets the shim of TraceSourceExtensions.TraceVerbose(TraceSource traceSource, String format, Object[] args)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceWarningTraceSourceString">
            <summary>Sets the shim of TraceSourceExtensions.TraceWarning(TraceSource traceSource, String msg)</summary>
        </member>
        <member name="P:System.Diagnostics.Fakes.ShimTraceSourceExtensions.TraceWarningTraceSourceStringObjectArray">
            <summary>Sets the shim of TraceSourceExtensions.TraceWarning(TraceSource traceSource, String format, Object[] args)</summary>
        </member>
    </members>
</doc>
